ESnet = typeof ESnet === "object" ? ESnet : {}; ESnet["ReactCharts"] =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	//
	// Entry point, so that you can use it like
	// var LineChart = require('esnet-react-charts').LineChart;
	// ...
	// return (
	//  <LineChart ... />
	// );

	'use strict';

	module.exports = {
	    AreaChart: __webpack_require__(1),
	    BarChart: __webpack_require__(2),
	    Baseline: __webpack_require__(3),
	    Brush: __webpack_require__(4),
	    ChartContainer: __webpack_require__(5),
	    Charts: __webpack_require__(6),
	    ChartRow: __webpack_require__(7),
	    EventChart: __webpack_require__(8),
	    EventRect: __webpack_require__(9),
	    LabelAxis: __webpack_require__(10),
	    Legend: __webpack_require__(11),
	    LineChart: __webpack_require__(12),
	    PointIndicator: __webpack_require__(13),
	    Resizable: __webpack_require__(14),
	    ScatterChart: __webpack_require__(15),
	    TimeAxis: __webpack_require__(16),
	    Tracker: __webpack_require__(17),
	    ValueAxis: __webpack_require__(18),
	    YAxis: __webpack_require__(19)
	};

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * ESnet React Charts, Copyright (c) 2014, The Regents of the University of
	 * California, through Lawrence Berkeley National Laboratory (subject
	 * to receipt of any required approvals from the U.S. Dept. of
	 * Energy).  All rights reserved.
	 *
	 * If you have questions about your rights to use or distribute this
	 * software, please contact Berkeley Lab's Technology Transfer
	 * Department at TTD@lbl.gov.
	 *
	 * NOTICE.  This software is owned by the U.S. Department of Energy.
	 * As such, the U.S. Government has been granted for itself and others
	 * acting on its behalf a paid-up, nonexclusive, irrevocable,
	 * worldwide license in the Software to reproduce, prepare derivative
	 * works, and perform publicly and display publicly.  Beginning five
	 * (5) years after the date permission to assert copyright is obtained
	 * from the U.S. Department of Energy, and subject to any subsequent
	 * five (5) year renewals, the U.S. Government is granted for itself
	 * and others acting on its behalf a paid-up, nonexclusive,
	 * irrevocable, worldwide license in the Software to reproduce,
	 * prepare derivative works, distribute copies to the public, perform
	 * publicly and display publicly, and to permit others to do so.
	 *
	 * This code is distributed under a BSD style license, see the LICENSE
	 * file for complete information.
	 */

	"use strict";

	var React = __webpack_require__(20);
	var d3 = __webpack_require__(22);
	var _ = __webpack_require__(23);
	var Pond = __webpack_require__(21);

	var TimeSeries = Pond.TimeSeries;

	function scaleAsString(scale) {
	    return "" + scale.domain() + "-" + scale.range();
	}

	/**
	 * Build up our data from the series. For each layer in the up (or down)
	 * direction, layer, we have layer.values = [points] where each point is
	 * in the format {data: .., value, ..}
	 */
	function getLayers(series) {
	    return {
	        "upLayers": series[0].map(function (series) {
	            var points = [];
	            for (var i = 0; i < series.size(); i++) {
	                var point = series.at(i);
	                points.push({ "date": point.timestamp(), "value": point.get() });
	            }
	            return { "values": points };
	        }),

	        "downLayers": series[1].map(function (series) {
	            var points = [];
	            for (var i = 0; i < series.size(); i++) {
	                var point = series.at(i);
	                points.push({ "date": point.timestamp(), "value": point.get() });
	            }
	            return { "values": points };
	        })
	    };
	}

	/**
	 * Build a D3 area generator based on the interpolate method and the supplied
	 * timeScale and yScale. The result is an SVG area.
	 *
	 *   y|    |||  +y1   ||||||
	 *    |||||||||||||||||||||||||
	 *    | |||     +y0      |||||||||<-area
	 *    |
	 *    +---------|---------------- t
	 *              x
	 */
	function getAreaGenerators(interpolate, timeScale, yScale) {
	    var upArea = d3.svg.area().x(function (d) {
	        return timeScale(d.date);
	    }).y0(function (d) {
	        return yScale(d.y0);
	    }).y1(function (d) {
	        return yScale(d.y0 + d.value);
	    }).interpolate(interpolate);

	    var downArea = d3.svg.area().x(function (d) {
	        return timeScale(d.date);
	    }).y0(function (d) {
	        return yScale(d.y0);
	    }).y1(function (d) {
	        return yScale(d.y0 - d.value);
	    }).interpolate(interpolate);

	    return { "upArea": upArea, "downArea": downArea };
	}

	/**
	 * Our D3 stack. When this is evoked with data (an array of layers) it builds up
	 * the stack of graphs on top of each other (i.e propogates a baseline y position
	 * up through the stack).
	 */
	function getAreaStackers() {
	    return {
	        "stackUp": d3.layout.stack().values(function (d) {
	            return d.values;
	        }).x(function (d) {
	            return d.date;
	        }).y(function (d) {
	            return d.value;
	        }),

	        "stackDown": d3.layout.stack().values(function (d) {
	            return d.values;
	        }).x(function (d) {
	            return d.date;
	        }).y(function (d) {
	            return -d.value;
	        })
	    };
	}

	/**
	 * Draws an area chart
	 */
	var AreaChart = React.createClass({
	    displayName: "AreaChart",

	    propTypes: {
	        /**
	         * Time in ms to transition the chart when the axis changes scale
	         */
	        transition: React.PropTypes.number,

	        /**
	         * The d3 interpolation method
	         */
	        interpolate: React.PropTypes.string,

	        /**
	         * The style of the area chart, with format:
	         *
	         *  "style": {
	         *      up: ["#448FDD", "#75ACE6", "#A9CBEF", ...],
	         *      down: ["#FD8D0D", "#FDA949", "#FEC686", ...]
	         *  }
	         *
	         *  Where each color in the array corresponds to each area stacked
	         *  either up or down.
	         */
	        style: React.PropTypes.shape({
	            "up": React.PropTypes.arrayOf(React.PropTypes.string),
	            "down": React.PropTypes.arrayOf(React.PropTypes.string)
	        }),

	        /**
	         * The series list. This is a 2 element array, with the first element
	         * build stacked up and the second element being stacked down. Each
	         * element is itself an array of TimeSeries.
	         */
	        series: React.PropTypes.arrayOf(React.PropTypes.arrayOf(React.PropTypes.instanceOf(TimeSeries)))
	    },

	    getDefaultProps: function getDefaultProps() {
	        return {
	            "transition": 0,
	            "interpolate": "step-after",
	            "style": {
	                up: ["#448FDD", "#75ACE6", "#A9CBEF"],
	                down: ["#FD8D0D", "#FDA949", "#FEC686"]
	            }
	        };
	    },

	    renderAreaChart: function renderAreaChart(series, timeScale, yScale, interpolate) {
	        var _this = this;

	        if (!yScale || !series[0]) {
	            return null;
	        }

	        var style = {
	            "fill": this.props.style.color,
	            "stroke": "none"
	        };

	        d3.select(this.getDOMNode()).selectAll("*").remove();

	        var _getAreaGenerators = getAreaGenerators(interpolate, timeScale, yScale);

	        var upArea = _getAreaGenerators.upArea;
	        var downArea = _getAreaGenerators.downArea;

	        var _getLayers = getLayers(series);

	        var upLayers = _getLayers.upLayers;
	        var downLayers = _getLayers.downLayers;

	        var _getAreaStackers = getAreaStackers();

	        var stackUp = _getAreaStackers.stackUp;
	        var stackDown = _getAreaStackers.stackDown;

	        //Stack our layers
	        stackUp(upLayers);
	        if (downLayers.length) {
	            stackDown(downLayers);
	        }

	        //
	        // Stacked area drawing up
	        //

	        //Make a group 'areachart-up-group' for each stacked area
	        var upChart = d3.select(this.getDOMNode()).selectAll(".areachart-up-group").data(upLayers).enter().append("g").attr("id", function () {
	            return _.uniqueId("areachart-up-");
	        });

	        // Append the area chart path onto the areachart-up-group group
	        this.upChart = upChart.append("path").style("fill", function (d, i) {
	            return _this.props.style.up[i];
	        }).attr("d", function (d) {
	            return upArea(d.values);
	        }).attr("clip-path", this.props.clipPathURL);

	        //
	        // Stacked area drawing down
	        //

	        //Make a group 'areachart-down-group' for each stacked area
	        var downChart = d3.select(this.getDOMNode()).selectAll(".areachart-down-group").data(downLayers).enter().append("g").attr("id", function () {
	            return _.uniqueId("areachart-down-");
	        });

	        // Append the area chart path onto the areachart-down-group group
	        this.downChart = downChart.append("path").style("fill", function (d, i) {
	            return _this.props.style.down[i];
	        }).attr("d", function (d) {
	            return downArea(d.values);
	        }).attr("clip-path", this.props.clipPathURL);
	    },

	    updateAreaChart: function updateAreaChart(series, timeScale, yScale, interpolate) {
	        var _getAreaGenerators2 = getAreaGenerators(interpolate, timeScale, yScale);

	        var upArea = _getAreaGenerators2.upArea;
	        var downArea = _getAreaGenerators2.downArea;

	        var _getLayers2 = getLayers(series);

	        var upLayers = _getLayers2.upLayers;
	        var downLayers = _getLayers2.downLayers;

	        var _getAreaStackers2 = getAreaStackers();

	        var stackUp = _getAreaStackers2.stackUp;
	        var stackDown = _getAreaStackers2.stackDown;

	        //Stack our layers
	        stackUp(upLayers);
	        if (downLayers.length) {
	            stackDown(downLayers);
	        }

	        this.upChart.transition().duration(this.props.transition).ease("sin-in-out").attr("d", function (d) {
	            return upArea(d.values);
	        });

	        this.downChart.transition().duration(this.props.transition).ease("sin-in-out").attr("d", function (d) {
	            return downArea(d.values);
	        });
	    },

	    componentDidMount: function componentDidMount() {
	        this.renderAreaChart(this.props.series, this.props.timeScale, this.props.yScale, this.props.interpolate);
	    },

	    componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	        var newSeries = nextProps.series;
	        var oldSeries = this.props.series;

	        var timeScale = nextProps.timeScale;
	        var yScale = nextProps.yScale;
	        var interpolate = nextProps.interpolate;

	        //What changed
	        var timeScaleChanged = scaleAsString(this.props.timeScale) !== scaleAsString(timeScale);
	        var yAxisScaleChanged = scaleAsString(this.props.yScale) !== scaleAsString(yScale);
	        var interpolateChanged = this.props.interpolate !== interpolate;
	        var seriesChanged = false;
	        if (oldSeries[0].length !== newSeries[0].length || oldSeries[0].length !== newSeries[0].length) {
	            seriesChanged = true;
	        } else {
	            for (var d = 0; d < 2; d++) {
	                for (var a = 0; a < oldSeries[d].length; a++) {
	                    var o = oldSeries[d][a];
	                    var n = newSeries[d][a];
	                    if (!TimeSeries.is(o, n)) {
	                        seriesChanged = true;
	                    }
	                }
	            }
	        }

	        //
	        // Currently if the series changes we completely rerender it. If the y axis scale
	        // changes then we just update the existing paths using a transition so that we
	        // can get smooth axis transitions.
	        //

	        if (seriesChanged || timeScaleChanged || interpolateChanged) {
	            this.renderAreaChart(newSeries, timeScale, yScale, interpolate);
	        } else if (yAxisScaleChanged) {
	            this.updateAreaChart(newSeries, timeScale, yScale, interpolate);
	        }
	    },

	    shouldComponentUpdate: function shouldComponentUpdate() {
	        return false;
	    },

	    render: function render() {
	        return React.createElement("g", null);
	    }
	});

	module.exports = AreaChart;

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * ESnet React Charts, Copyright (c) 2014, The Regents of the University of
	 * California, through Lawrence Berkeley National Laboratory (subject
	 * to receipt of any required approvals from the U.S. Dept. of
	 * Energy).  All rights reserved.
	 *
	 * If you have questions about your rights to use or distribute this
	 * software, please contact Berkeley Lab's Technology Transfer
	 * Department at TTD@lbl.gov.
	 *
	 * NOTICE.  This software is owned by the U.S. Department of Energy.
	 * As such, the U.S. Government has been granted for itself and others
	 * acting on its behalf a paid-up, nonexclusive, irrevocable,
	 * worldwide license in the Software to reproduce, prepare derivative
	 * works, and perform publicly and display publicly.  Beginning five
	 * (5) years after the date permission to assert copyright is obtained
	 * from the U.S. Department of Energy, and subject to any subsequent
	 * five (5) year renewals, the U.S. Government is granted for itself
	 * and others acting on its behalf a paid-up, nonexclusive,
	 * irrevocable, worldwide license in the Software to reproduce,
	 * prepare derivative works, distribute copies to the public, perform
	 * publicly and display publicly, and to permit others to do so.
	 *
	 * This code is distributed under a BSD style license, see the LICENSE
	 * file for complete information.
	 */

	"use strict";

	var React = __webpack_require__(20);
	var d3 = __webpack_require__(22);
	var _ = __webpack_require__(23);
	var moment = __webpack_require__(24);

	__webpack_require__(26);

	var DAY = 1000 * 60 * 60 * 24;
	var HOUR = 1000 * 60 * 60;

	function scaleAsString(scale) {
	    return "" + scale.domain() + "-" + scale.range();
	}

	/**
	 * Renders a barchart. This BarChart implementation is a little different
	 * in that it will render onto a time axis, rather than rendering to
	 * specific values. As a result, an Aug 2014 bar will render between the
	 * Aug 2014 tick mark and the Sept 2014 tickmark.
	 */
	var BarChart = React.createClass({
	    displayName: "BarChart",

	    propTypes: {
	        /**
	         * The width of each bar is the width determined by the time range - spacing x 2
	         */
	        spacing: React.PropTypes.number,

	        /**
	         * The position of the bar is then offset by this value.
	         */
	        offset: React.PropTypes.number },

	    getDefaultProps: function getDefaultProps() {
	        return {
	            spacing: 1,
	            offset: 0
	        };
	    },

	    renderBarChart: function renderBarChart(data, timeScale, yScale, classed) {
	        var _this = this;

	        var spacing = Number(this.props.spacing);
	        var offset = Number(this.props.offset);

	        if (!yScale || !data[0]) {
	            return null;
	        }

	        if (this.props.dropNulls) {
	            data = _.filter(data, function (d) {
	                return d.value !== null;
	            });
	        }

	        d3.select(this.getDOMNode()).selectAll("*").remove();

	        var barClasses = { "barchart-rect": true };
	        if (classed) {
	            barClasses[classed] = true;
	        }

	        d3.select(this.getDOMNode()).selectAll("rect").data(data).enter().append("rect").classed(barClasses).attr("width", function (d) {
	            var start = d.time;
	            var end = undefined;

	            if (_this.props.interval === "monthly") {
	                var daysInMonth = moment(d.time).daysInMonth();
	                end = new Date(d.time.getTime() + daysInMonth * DAY);
	            } else if (_this.props.interval === "daily") {
	                end = new Date(d.time.getTime() + DAY);
	            } else if (_this.props.interval === "hourly") {
	                end = new Date(d.time.getTime() + HOUR);
	            }

	            var startLocation = timeScale(start) + spacing;
	            var endLocation = timeScale(end) - spacing;
	            return endLocation - startLocation;
	        }).attr("height", function (d) {
	            return yScale(0) - yScale(d.value);
	        }).attr("x", function (d) {
	            return timeScale(d.time) + spacing + offset;
	        }).attr("y", function (d) {
	            return yScale(d.value);
	        });
	    },

	    componentDidMount: function componentDidMount() {
	        this.renderBarChart(this.props.data, this.props.timeScale, this.props.yScale, this.props.classed);
	    },

	    componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	        var data = nextProps.data;
	        var timeScale = nextProps.timeScale;
	        var yScale = nextProps.yScale;
	        var classed = nextProps.classed;

	        if (this.props.data !== nextProps.data || this.props.data.time !== data.time || scaleAsString(this.props.timeScale) !== scaleAsString(timeScale) || scaleAsString(this.props.yScale) !== scaleAsString(yScale)) {
	            this.renderBarChart(data, timeScale, yScale, classed);
	        }
	    },

	    shouldComponentUpdate: function shouldComponentUpdate() {
	        return false;
	    },

	    //TODO: props.attr should be required
	    render: function render() {
	        return React.createElement("g", null);
	    }
	});

	module.exports = BarChart;

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * ESnet React Charts, Copyright (c) 2014-2015, The Regents of the University of
	 * California, through Lawrence Berkeley National Laboratory (subject
	 * to receipt of any required approvals from the U.S. Dept. of
	 * Energy).  All rights reserved.
	 *
	 * If you have questions about your rights to use or distribute this
	 * software, please contact Berkeley Lab's Technology Transfer
	 * Department at TTD@lbl.gov.
	 *
	 * NOTICE.  This software is owned by the U.S. Department of Energy.
	 * As such, the U.S. Government has been granted for itself and others
	 * acting on its behalf a paid-up, nonexclusive, irrevocable,
	 * worldwide license in the Software to reproduce, prepare derivative
	 * works, and perform publicly and display publicly.  Beginning five
	 * (5) years after the date permission to assert copyright is obtained
	 * from the U.S. Department of Energy, and subject to any subsequent
	 * five (5) year renewals, the U.S. Government is granted for itself
	 * and others acting on its behalf a paid-up, nonexclusive,
	 * irrevocable, worldwide license in the Software to reproduce,
	 * prepare derivative works, distribute copies to the public, perform
	 * publicly and display publicly, and to permit others to do so.
	 *
	 * This code is distributed under a BSD style license, see the LICENSE
	 * file for complete information.
	 */

	"use strict";

	var React = __webpack_require__(20);
	var util = __webpack_require__(25);

	__webpack_require__(28);

	/**
	 * Draws a horizontal line across the chart
	 *
	 * Props:
	 *
	 * - value          The positon of the horizontal line, which is transformed to
	 *                  a pixel position using the yscale
	 * - label          A label to display along side the line
	 * - position       The position of the label, either left or right
	 *
	 * - yscale         The scale of the y axis to transform the value
	 *                  (passed in automatically)
	 */
	var Baseline = React.createClass({
	    displayName: "Baseline",

	    getDefaultProps: function getDefaultProps() {
	        return {
	            "value": 0,
	            "label": "",
	            "position": "left" //or right
	        };
	    },

	    render: function render() {
	        if (!this.props.yScale || !this.props.value) {
	            return null;
	        }

	        var ymin = Math.min(this.props.yScale.range()[0], this.props.yScale.range()[1]);
	        var y = this.props.yScale(this.props.value);
	        var transform = "translate(0 " + y + ")";
	        var textAnchor = undefined;
	        var textPositionX = undefined;
	        var pts = [];
	        var points = undefined;

	        var textPositionY = -3;
	        if (y < ymin + 10) {
	            textPositionY = 12;
	        }

	        if (this.props.position === "left") {
	            textAnchor = "start";
	            textPositionX = 5;
	        }
	        if (this.props.position === "right") {
	            textAnchor = "end";
	            textPositionX = this.props.width - 5;
	        }

	        pts.push("0 0");
	        pts.push("" + this.props.width + " 0");
	        points = pts.join(" ");

	        return React.createElement(
	            "g",
	            { className: "baseline", transform: transform },
	            React.createElement("polyline", { points: points }),
	            React.createElement(
	                "text",
	                { className: "baseline-label", x: textPositionX, y: textPositionY, textAnchor: textAnchor },
	                this.props.label
	            )
	        );
	    }
	});

	module.exports = Baseline;

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * ESnet React Charts, Copyright (c) 2014, The Regents of the University of
	 * California, through Lawrence Berkeley National Laboratory (subject
	 * to receipt of any required approvals from the U.S. Dept. of
	 * Energy).  All rights reserved.
	 *
	 * If you have questions about your rights to use or distribute this
	 * software, please contact Berkeley Lab's Technology Transfer
	 * Department at TTD@lbl.gov.
	 *
	 * NOTICE.  This software is owned by the U.S. Department of Energy.
	 * As such, the U.S. Government has been granted for itself and others
	 * acting on its behalf a paid-up, nonexclusive, irrevocable,
	 * worldwide license in the Software to reproduce, prepare derivative
	 * works, and perform publicly and display publicly.  Beginning five
	 * (5) years after the date permission to assert copyright is obtained
	 * from the U.S. Department of Energy, and subject to any subsequent
	 * five (5) year renewals, the U.S. Government is granted for itself
	 * and others acting on its behalf a paid-up, nonexclusive,
	 * irrevocable, worldwide license in the Software to reproduce,
	 * prepare derivative works, distribute copies to the public, perform
	 * publicly and display publicly, and to permit others to do so.
	 *
	 * This code is distributed under a BSD style license, see the LICENSE
	 * file for complete information.
	 */

	"use strict";

	var d3 = __webpack_require__(22);
	var React = __webpack_require__(20);

	function scaleAsString(scale) {
	    return scale.domain().toString() + "-" + scale.range().toString();
	}

	var Brush = React.createClass({

	    displayName: "Brush",

	    getInitialState: function getInitialState() {
	        return {
	            "d3brush": null
	        };
	    },

	    handleBrushed: function handleBrushed(brush) {
	        var extent = brush.extent();
	        if (this.props.onBrushed) {
	            this.props.onBrushed(brush, extent[0], extent[1]);
	        }
	    },

	    renderBrush: function renderBrush(timeScale, beginTime, endTime) {
	        var d3brush = this.state.d3brush;
	        var self = this;
	        if (!d3brush) {
	            d3brush = d3.svg.brush().x(timeScale).on("brush", function () {
	                self.handleBrushed(d3brush);
	            });
	            this.setState({ "d3brush": d3brush });
	            d3brush.extent([beginTime, endTime]);
	        } else {
	            var currentExtent = d3brush.extent();
	            var curBegin = currentExtent[0];
	            var curEnd = currentExtent[1];
	            /* This check is critical to break feedback cycles that will cause the brush
	             * to get very confused.
	             */
	            if (curBegin.getTime() !== beginTime.getTime() || curEnd.getTime() !== endTime.getTime()) {
	                d3brush.extent([beginTime, endTime]);
	            } else {
	                return;
	            }
	        }
	        d3.select(this.getDOMNode()).selectAll("*").remove();

	        d3.select(this.getDOMNode()).append("g").attr("class", "x brush").call(d3brush).selectAll("rect").attr("y", -6).attr("height", this.props.height + 7);
	    },

	    componentDidMount: function componentDidMount() {
	        this.renderBrush(this.props.timeScale, this.props.beginTime, this.props.endTime);
	    },

	    componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	        var timeScale = nextProps.timeScale;
	        var beginTime = nextProps.beginTime;
	        var endTime = nextProps.endTime;

	        if (scaleAsString(this.props.timeScale) != scaleAsString(timeScale) || this.props.beginTime.getTime() != beginTime.getTime() || this.props.endTime.getTime() != endTime.getTime()) {
	            this.renderBrush(timeScale, beginTime, endTime);
	        }
	    },

	    shouldComponentUpdate: function shouldComponentUpdate() {
	        return false;
	    },

	    render: function render() {
	        return React.createElement("g", null);
	    } });

	module.exports = Brush;

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * ESnet React Charts, Copyright (c) 2014, The Regents of the University of
	 * California, through Lawrence Berkeley National Laboratory (subject
	 * to receipt of any required approvals from the U.S. Dept. of
	 * Energy).  All rights reserved.
	 *
	 * If you have questions about your rights to use or distribute this
	 * software, please contact Berkeley Lab's Technology Transfer
	 * Department at TTD@lbl.gov.
	 *
	 * NOTICE.  This software is owned by the U.S. Department of Energy.
	 * As such, the U.S. Government has been granted for itself and others
	 * acting on its behalf a paid-up, nonexclusive, irrevocable,
	 * worldwide license in the Software to reproduce, prepare derivative
	 * works, and perform publicly and display publicly.  Beginning five
	 * (5) years after the date permission to assert copyright is obtained
	 * from the U.S. Department of Energy, and subject to any subsequent
	 * five (5) year renewals, the U.S. Government is granted for itself
	 * and others acting on its behalf a paid-up, nonexclusive,
	 * irrevocable, worldwide license in the Software to reproduce,
	 * prepare derivative works, distribute copies to the public, perform
	 * publicly and display publicly, and to permit others to do so.
	 *
	 * This code is distributed under a BSD style license, see the LICENSE
	 * file for complete information.
	 */

	"use strict";

	function _slicedToArray(arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }

	var React = __webpack_require__(20);
	var d3 = __webpack_require__(22);
	var _ = __webpack_require__(23);
	var invariant = __webpack_require__(47);

	var Pond = __webpack_require__(21);

	var ChartRow = __webpack_require__(7);
	var Charts = __webpack_require__(6);
	var TimeAxis = __webpack_require__(16);
	var YAxis = __webpack_require__(19);
	var Brush = __webpack_require__(4);

	var TimeRange = Pond.TimeRange;

	__webpack_require__(30);

	var ChartContainer = React.createClass({
	    displayName: "ChartContainer",

	    getDefaultProps: function getDefaultProps() {
	        return {
	            "transition": 0
	        };
	    },

	    propTypes: {
	        children: React.PropTypes.oneOfType([React.PropTypes.arrayOf(React.PropTypes.element), React.PropTypes.element]) },

	    handleTrackerChanged: function handleTrackerChanged(t) {
	        if (this.props.onTrackerChanged) {
	            this.props.onTrackerChanged(t);
	        }
	    },

	    //Within the charts library the time range of the x axis is kept as a begin and
	    //end time (Javascript Date objects). But the interface is Pond based, so
	    //this callback returns a Pond TimeRange.
	    handleTimeRangeChanged: function handleTimeRangeChanged(beginTime, endTime) {
	        if (this.props.onTimeRangeChanged) {
	            this.props.onTimeRangeChanged(TimeRange(beginTime, endTime));
	        }
	    },

	    render: function render() {
	        var _this = this;

	        var chartRows = [];
	        var padding = this.props.padding || 0;

	        //
	        // How much room does the axes of all the charts take up on the right and left.
	        // The result is an array for left and right axis which contain the min column width
	        // needed to hold the axes widths at the pos for all rows.
	        //
	        // pos   1      0        <charts>     0        1        2
	        //     | Axis | Axis |   CHARTS    |  Axis  |                       Row 1
	        //            | Axis |   CHARTS    |  Axis  |  Axis  |  Axis |      Row 2
	        //     ...............              ..........................
	        //          left cols              right cols
	        //

	        var leftAxisWidths = [];
	        var rightAxisWidths = [];

	        React.Children.forEach(this.props.children, function (childRow) {

	            if (childRow.type === ChartRow) {
	                (function () {

	                    //
	                    // Within this row, count the number of columns that will be left
	                    // and right of the Charts tag, as well as the total number of
	                    // Charts tags for error handling
	                    //

	                    var countLeft = 0;
	                    var countRight = 0;
	                    var countCharts = 0;
	                    var align = "left";

	                    React.Children.forEach(childRow.props.children, function (child) {
	                        if (child.type === Charts) {
	                            countCharts++;
	                            align = "right";
	                        } else if (child.type !== Brush) {
	                            if (align === "left") {
	                                countLeft++;
	                            } else {
	                                countRight++;
	                            }
	                        }
	                    });

	                    if (countCharts !== 1) {
	                        invariant(false, "ChartRow should have one and only one <Charts> tag within it", childRow.constructor.name);
	                    }

	                    align = "left";
	                    var pos = countLeft - 1;

	                    React.Children.forEach(childRow.props.children, function (child) {
	                        if (child.type === Charts) {
	                            align = "right";
	                            pos = 0;
	                        } else {
	                            var width = Number(child.props.width) || 40;
	                            if (align === "left") {
	                                leftAxisWidths[pos] = leftAxisWidths[pos] ? Math.max(width, leftAxisWidths[pos]) : width;
	                                pos--;
	                            } else if (align === "right") {
	                                rightAxisWidths[pos] = rightAxisWidths[pos] ? Math.max(width, rightAxisWidths[pos]) : width;
	                                pos++;
	                            }
	                        }
	                    });
	                })();
	            }
	        });

	        //Extra space used by padding between columns
	        var leftExtra = (leftAxisWidths.length - 1) * padding;
	        var rightExtra = (rightAxisWidths.length - 1) * padding;

	        //Space used by columns on left and right of charts
	        var leftWidth = _.reduce(leftAxisWidths, function (a, b) {
	            return a + b;
	        }, 0) + leftExtra;
	        var rightWidth = _.reduce(rightAxisWidths, function (a, b) {
	            return a + b;
	        }, 0) + rightExtra;

	        //
	        // Time scale and time axis elements
	        //

	        var X_AXIS_HEIGHT = 35;

	        var transform = "translate(" + leftWidth + ",0)";
	        var timeAxisWidth = this.props.width - leftWidth - rightWidth - padding * 2;

	        var _props$timeRange$toJSON = this.props.timeRange.toJSON();

	        var _props$timeRange$toJSON2 = _slicedToArray(_props$timeRange$toJSON, 2);

	        var beginTime = _props$timeRange$toJSON2[0];
	        var endTime = _props$timeRange$toJSON2[1];

	        var timeScale = d3.time.scale().domain([new Date(beginTime), new Date(endTime)]).range([0, timeAxisWidth]);

	        var timeAxis = React.createElement(
	            "div",
	            { className: "row" },
	            React.createElement(
	                "div",
	                { className: "col-md-12", style: { "height": X_AXIS_HEIGHT } },
	                React.createElement(
	                    "div",
	                    { className: "chartcontainer timeaxis" },
	                    React.createElement(
	                        "svg",
	                        { width: this.props.width, height: X_AXIS_HEIGHT },
	                        React.createElement(
	                            "g",
	                            { transform: transform },
	                            React.createElement(TimeAxis, { scale: timeScale, dayFormat: this.props.dayFormat, monthFormat: this.props.monthFormat })
	                        )
	                    )
	                )
	            )
	        );

	        //
	        // For valid children (those children which are ChartRows), we actually build
	        // a Bootstrap row wrapper around those and then create cloned ChartRows that
	        // are passed the sizes of the determined axis columns.
	        //

	        var i = 0;
	        React.Children.forEach(this.props.children, function (child) {
	            if (child.type === ChartRow) {
	                var chartRow = child;
	                var rowKey = child.props.key ? child.props.key : "chart-row-row-" + i;

	                var props = {
	                    key: rowKey,
	                    width: _this.props.width, // same as container width
	                    timeScale: timeScale, // x axis d3 scale
	                    leftAxisWidths: leftAxisWidths, // array with column sizes for axes
	                    rightAxisWidths: rightAxisWidths,
	                    padding: _this.props.padding, // container padding setting
	                    minTime: _this.props.minTime, // zoomable min/max times
	                    maxTime: _this.props.maxTime,
	                    transition: _this.props.transition, // time to make scale transitions
	                    trackerPosition: _this.props.trackerPosition, // tracker position
	                    onTimeRangeChanged: _this.handleTimeRangeChanged, // zoom/pan callback
	                    onTrackerChanged: _this.handleTrackerChanged // tracker change callback
	                };

	                var row = React.addons.cloneWithProps(chartRow, props);

	                chartRows.push(React.createElement(
	                    "div",
	                    { key: "chart-row-div-" + i, className: "row" },
	                    React.createElement(
	                        "div",
	                        { className: "col-md-12" },
	                        React.createElement(
	                            "div",
	                            { className: "chartcontainer chartrow" },
	                            row
	                        )
	                    )
	                ));
	            }
	            i++;
	        });

	        //
	        // Final render of the ChartContainer is composed of a number of chartRows and a timeAxis
	        //
	        // TODO: We might want to consider rendering this whole thing in a single SVG rather than
	        // depending on Bootstrap for layout.
	        //

	        return React.createElement(
	            "div",
	            { className: "chartcontainer" },
	            chartRows,
	            timeAxis
	        );
	    }
	});

	module.exports = ChartContainer;

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * ESnet React Charts, Copyright (c) 2014, The Regents of the University of
	 * California, through Lawrence Berkeley National Laboratory (subject
	 * to receipt of any required approvals from the U.S. Dept. of
	 * Energy).  All rights reserved.
	 *
	 * If you have questions about your rights to use or distribute this
	 * software, please contact Berkeley Lab's Technology Transfer
	 * Department at TTD@lbl.gov.
	 *
	 * NOTICE.  This software is owned by the U.S. Department of Energy.
	 * As such, the U.S. Government has been granted for itself and others
	 * acting on its behalf a paid-up, nonexclusive, irrevocable,
	 * worldwide license in the Software to reproduce, prepare derivative
	 * works, and perform publicly and display publicly.  Beginning five
	 * (5) years after the date permission to assert copyright is obtained
	 * from the U.S. Department of Energy, and subject to any subsequent
	 * five (5) year renewals, the U.S. Government is granted for itself
	 * and others acting on its behalf a paid-up, nonexclusive,
	 * irrevocable, worldwide license in the Software to reproduce,
	 * prepare derivative works, distribute copies to the public, perform
	 * publicly and display publicly, and to permit others to do so.
	 *
	 * This code is distributed under a BSD style license, see the LICENSE
	 * file for complete information.
	 */

	"use strict";

	var React = __webpack_require__(20);
	var invariant = __webpack_require__(47);

	/**
	 * A Charts component is a grouping of charts which will be composited on top of
	 * each other. It does no actual rendering itself, but instead is used for organizing
	 * ChartRow children. There must be one, and only one, Charts grouping within a ChartRow.
	 * All children of a ChartRow, for which there must be at least one, are considered a
	 * chart. They should return an SVG <g> containing their render.
	 */
	var Charts = React.createClass({
	  displayName: "Charts",
	  render: function render() {
	    invariant(false, "%s elements are for schema configuration only and should not be rendered", this.constructor.name);
	  }
	});

	module.exports = Charts;

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * ESnet React Charts, Copyright (c) 2014, The Regents of the University of
	 * California, through Lawrence Berkeley National Laboratory (subject
	 * to receipt of any required approvals from the U.S. Dept. of
	 * Energy).  All rights reserved.
	 *
	 * If you have questions about your rights to use or distribute this
	 * software, please contact Berkeley Lab's Technology Transfer
	 * Department at TTD@lbl.gov.
	 *
	 * NOTICE.  This software is owned by the U.S. Department of Energy.
	 * As such, the U.S. Government has been granted for itself and others
	 * acting on its behalf a paid-up, nonexclusive, irrevocable,
	 * worldwide license in the Software to reproduce, prepare derivative
	 * works, and perform publicly and display publicly.  Beginning five
	 * (5) years after the date permission to assert copyright is obtained
	 * from the U.S. Department of Energy, and subject to any subsequent
	 * five (5) year renewals, the U.S. Government is granted for itself
	 * and others acting on its behalf a paid-up, nonexclusive,
	 * irrevocable, worldwide license in the Software to reproduce,
	 * prepare derivative works, distribute copies to the public, perform
	 * publicly and display publicly, and to permit others to do so.
	 *
	 * This code is distributed under a BSD style license, see the LICENSE
	 * file for complete information.
	 */

	"use strict";

	var React = __webpack_require__(20);
	var d3 = __webpack_require__(22);
	var _ = __webpack_require__(23);

	var YAxis = __webpack_require__(19);
	var Charts = __webpack_require__(6);
	var Brush = __webpack_require__(4);
	var Tracker = __webpack_require__(17);
	var EventRect = __webpack_require__(9);
	var PointIndicator = __webpack_require__(13);

	/**
	 * Hacky workaround for the fact that clipPath is not currently a supported tag in React.
	 */
	var ClipDefs = React.createClass({
	    displayName: "ClipDefs",

	    renderClipPath: function renderClipPath(props) {
	        d3.select(this.getDOMNode()).selectAll("*").remove();

	        d3.select(this.getDOMNode()).append("clipPath").attr("id", props.id).append("rect").attr("width", props.clipWidth).attr("height", props.clipHeight);
	    },

	    componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	        this.renderClipPath(nextProps);
	    },

	    componentDidMount: function componentDidMount() {
	        this.renderClipPath(this.props);
	    },

	    // For now we'll always update to ensure clipping id and rectangle track props
	    // Could probably optimize this to detect changes to width/height to avoid d3 touching
	    // the real DOM on every re-render.
	    shouldComponentUpdate: function shouldComponentUpdate() {
	        return true;
	    },

	    render: function render() {
	        return React.createElement("defs", null);
	    }
	});

	/**
	 * A ChartRow has a set of Y axes and multiple charts which are overlayed on each other
	 * in a central canvas.
	 */
	var ChartRow = React.createClass({

	    displayName: "ChartRow",

	    getInitialState: function getInitialState() {
	        // id of clipping rectangle we will generate and use for each child chart
	        // Lives in state to ensure just one clipping rectangle and id per chart row instance; we don't
	        // want a fresh id generated on each render.
	        var clipId = _.uniqueId("clip_");
	        var clipPathURL = "url(#" + clipId + ")";

	        return { clipId: clipId,
	            clipPathURL: clipPathURL };
	    },

	    handleMouseMove: function handleMouseMove(t) {
	        if (this.props.onTrackerChanged) {
	            this.props.onTrackerChanged(t);
	        }
	    },

	    handleMouseOut: function handleMouseOut() {
	        if (this.props.onTrackerChanged) {
	            this.props.onTrackerChanged(null);
	        }
	    },

	    handleZoom: function handleZoom(beginTime, endTime) {
	        if (this.props.onTimeRangeChanged) {
	            this.props.onTimeRangeChanged(beginTime, endTime);
	        }
	    },

	    handleResize: function handleResize(width, height) {
	        if (this.props.onChartResize) {
	            this.props.onChartResize(width, height);
	        }
	    },

	    createScale: function createScale(type, min, max, y0, y1) {
	        var scale = undefined;
	        if (_.isUndefined(min) || min !== min || _.isUndefined(max) || max !== max) {
	            scale = null;
	        } else if (type === "linear") {
	            scale = d3.scale.linear().domain([min, max]).range([y0, y1]).nice();
	        } else if (type === "log") {
	            var base = yaxis.props.logBase || 10;
	            scale = d3.scale.log().base(base).domain([min, max]).range([y0, y1]);
	        } else if (type === "power") {
	            var power = yaxis.props.powerExponent || 2;
	            scale = d3.scale.pow().exponent(power).domain([min, max]).range([y0, y1]);
	        }
	        return scale;
	    },

	    render: function render() {
	        var _this = this;

	        var yAxisList = []; // Contains all the yAxis elements used in the render
	        var chartList = []; // Contains all the chart elements used in the render

	        var margin = this.props.margin !== undefined ? Number(this.props.margin) : 5;
	        var padding = this.props.padding !== undefined ? Number(this.props.padding) : 2;

	        // Extra padding above and below the axis since numbers need to be displayed there
	        var AXIS_MARGIN = 5;
	        var innerHeight = Number(this.props.height) - AXIS_MARGIN * 2;
	        var rangeTop = AXIS_MARGIN;
	        var rangeBottom = innerHeight - AXIS_MARGIN;

	        //
	        // Build a map of elements that occupy left or right slots next to the chart.
	        //
	        // If an element has both and id and a min/max range, then we consider it to be a y axis.
	        // For those we calculate a d3 scale that can be reference by a chart. That scale will
	        // also be available to the axis when it renders.
	        //
	        // For this row, we will need to know how many axis slots we are using and the
	        // scales associated with them. We store the scales in a map from attr name to
	        // the d3 scale.
	        //

	        var yAxisMap = {}; // Maps axis id -> axis element
	        var yAxisScaleMap = {}; // Maps axis id -> axis scale
	        var leftAxisList = []; // Ordered list of left axes ids
	        var rightAxisList = []; // Ordered list of right axes ids
	        var align = "left";

	        React.Children.forEach(this.props.children, function (child) {

	            //
	            // TODO:
	            // This code currently assumes each child (except in Charts) has an id, but
	            // this is just because leftAxisList and rightAxisList below pushes an id.
	            // Perhaps it could put the element itself?
	            //

	            if (child.type === Charts) {
	                align = "right";
	            } else {
	                var _id = child.props.id;

	                //Check to see if we think this 'axis' is actually an axis
	                if (child.type === YAxis || _.has(child.props, "min") && _.has(child.props, "max")) {
	                    var _yaxis = child;
	                    var _yaxis$props = _yaxis.props;
	                    var max = _yaxis$props.max;
	                    var min = _yaxis$props.min;

	                    var type = _yaxis.props.type || "linear";

	                    if (_yaxis.props.id) {
	                        yAxisMap[_yaxis.props.id] = _yaxis; //Relate id to the axis
	                    }

	                    //Relate id to a d3 scale generated from the max, min and scaleType props
	                    yAxisScaleMap[_id] = _this.createScale(type, min, max, rangeBottom, rangeTop);
	                }

	                //Columns counts
	                if (align === "left") {
	                    leftAxisList.push(_id);
	                } else if (align === "right") {
	                    rightAxisList.push(_id);
	                }
	            }
	        });

	        //Since we'll be building the left axis items from the inside to the outside
	        leftAxisList.reverse();

	        //
	        // Push each axis onto the yAxisList, transforming each into its column location
	        //

	        var transform = undefined;
	        var id = undefined;
	        var props = undefined;
	        var axis = undefined;
	        var i = 0;
	        var posx = 0;

	        //Extra space used by padding between columns
	        var leftExtra = (this.props.leftAxisWidths.length - 1) * padding;
	        var rightExtra = (this.props.rightAxisWidths.length - 1) * padding;

	        //Space used by columns on left and right of charts
	        var leftWidth = _.reduce(this.props.leftAxisWidths, function (a, b) {
	            return a + b;
	        }, 0) + leftExtra;
	        var rightWidth = _.reduce(this.props.rightAxisWidths, function (a, b) {
	            return a + b;
	        }, 0) + rightExtra;

	        var debug = undefined;

	        posx = leftWidth;
	        for (var leftColumnIndex = 0; leftColumnIndex < this.props.leftAxisWidths.length; leftColumnIndex++) {
	            var colWidth = this.props.leftAxisWidths[leftColumnIndex];

	            posx = posx - colWidth;
	            if (leftColumnIndex > 0) {
	                posx = posx - padding;
	            }

	            if (leftColumnIndex < leftAxisList.length) {
	                id = leftAxisList[leftColumnIndex];
	                transform = "translate(" + posx + "," + margin + ")";

	                //Additional props for left aligned axes
	                props = { "width": colWidth,
	                    "height": innerHeight,
	                    "align": "left",
	                    "transition": this.props.transition };
	                if (_.has(yAxisScaleMap, id)) {
	                    props.scale = yAxisScaleMap[id];
	                }

	                //Cloned left axis
	                axis = React.addons.cloneWithProps(yAxisMap[id], props);

	                //Debug rect
	                if (this.props.debug) {
	                    debug = React.createElement("rect", { className: "yaxis-debug", x: "0", y: "0", width: colWidth, height: innerHeight });
	                } else {
	                    debug = null;
	                }

	                yAxisList.push(React.createElement(
	                    "g",
	                    { key: "y-axis-left-" + leftColumnIndex, transform: transform },
	                    debug,
	                    axis
	                ));
	            }
	        }

	        posx = this.props.width - rightWidth;
	        for (var rightColumnIndex = 0; rightColumnIndex < this.props.rightAxisWidths.length; rightColumnIndex++) {
	            var colWidth = this.props.rightAxisWidths[rightColumnIndex];

	            if (rightColumnIndex < rightAxisList.length) {
	                id = rightAxisList[rightColumnIndex];
	                transform = "translate(" + posx + "," + margin + ")";

	                //Additional props for right aligned axes
	                props = { "width": colWidth,
	                    "height": innerHeight,
	                    "align": "right",
	                    "transition": this.props.transition };
	                if (_.has(yAxisScaleMap, id)) {
	                    props.scale = yAxisScaleMap[id];
	                }

	                //Cloned right axis
	                axis = React.addons.cloneWithProps(yAxisMap[id], props);

	                //Debug rect
	                if (this.props.debug) {
	                    debug = React.createElement("rect", { className: "yaxis-debug", x: "0", y: "0", width: colWidth, height: innerHeight });
	                } else {
	                    debug = null;
	                }

	                yAxisList.push(React.createElement(
	                    "g",
	                    { key: "y-axis-right-" + rightColumnIndex, transform: transform },
	                    debug,
	                    axis
	                ));
	            }

	            posx = posx + colWidth + padding;
	        }

	        //
	        // Push each chart onto the chartList, transforming each to the right of the left axis slots
	        // and specifying its width. Each chart is passed its time and y scale. The yscale is looked
	        // up in yAxisScaleMap.
	        //

	        var chartWidth = this.props.width - leftWidth - rightWidth;
	        var chartTransform = "translate(" + leftWidth + "," + margin + ")";

	        var keyCount = 0;
	        React.Children.forEach(this.props.children, function (child) {

	            if (child.type === Charts) {
	                var charts = child;
	                React.Children.forEach(charts.props.children, function (chart) {
	                    //Additional props for charts
	                    var props = {
	                        key: chart.props.key ? chart.props.key : "chart-" + keyCount,
	                        width: chartWidth,
	                        height: innerHeight,
	                        clipPathURL: _this.state.clipPathURL,
	                        timeScale: _this.props.timeScale,
	                        yScale: yAxisScaleMap[chart.props.axis],
	                        transition: _this.props.transition
	                    };

	                    chartList.push(React.addons.cloneWithProps(chart, props));

	                    keyCount++;
	                });
	            }
	        });

	        //
	        // Push each child Brush on to the brush list.  We need brushed to be rendered last (on top) of
	        // everything else in the Z order, both for visual correctness and to ensure that the brush gets
	        // mouse events before anything underneath
	        //

	        var brushList = [];
	        keyCount = 0;
	        React.Children.forEach(this.props.children, function (child) {
	            if (child.type === Brush) {
	                var _props = {
	                    key: "brush-" + keyCount,
	                    width: chartWidth,
	                    height: innerHeight,
	                    timeScale: _this.props.timeScale,
	                    yScale: yAxisScaleMap[child.props.axis]
	                };
	                brushList.push(React.addons.cloneWithProps(child, _props));
	            }
	            keyCount++;
	        });

	        var enableZoom = _.has(this.props, "enableZoom") ? this.props.enableZoom : false;

	        var zoomHandler = null;
	        if (enableZoom) {
	            zoomHandler = this.handleZoom;
	        }

	        var chartDebug = null;
	        if (this.props.debug) {
	            chartDebug = React.createElement("rect", { className: "chart-debug", x: leftWidth, y: margin, width: chartWidth, height: innerHeight });
	        }

	        return React.createElement(
	            "svg",
	            { width: this.props.width, height: Number(this.props.height) },
	            yAxisList,
	            chartDebug,
	            React.createElement(
	                "g",
	                { transform: chartTransform, key: "chart-group" },
	                React.createElement(ClipDefs, { id: this.state.clipId, clipWidth: chartWidth, clipHeight: innerHeight }),
	                chartList
	            ),
	            React.createElement(
	                "g",
	                { transform: chartTransform, key: "tracker-group" },
	                React.createElement(Tracker, { height: innerHeight,
	                    scale: this.props.timeScale, position: this.props.trackerPosition })
	            ),
	            React.createElement(
	                "g",
	                { transform: chartTransform, key: "event-rect-group" },
	                React.createElement(EventRect, { width: chartWidth, height: innerHeight,
	                    scale: this.props.timeScale,
	                    onMouseOut: this.handleMouseOut,
	                    onMouseMove: this.handleMouseMove,
	                    enableZoom: enableZoom,
	                    onZoom: zoomHandler,
	                    minTime: this.props.minTime,
	                    maxTime: this.props.maxTime,
	                    onResize: this.handleResize })
	            ),
	            React.createElement(
	                "g",
	                { transform: chartTransform, key: "brush-group" },
	                brushList
	            )
	        );
	    }
	});

	module.exports = ChartRow;

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * ESnet React Charts, Copyright (c) 2014, The Regents of the University of
	 * California, through Lawrence Berkeley National Laboratory (subject
	 * to receipt of any required approvals from the U.S. Dept. of
	 * Energy).  All rights reserved.
	 *
	 * If you have questions about your rights to use or distribute this
	 * software, please contact Berkeley Lab's Technology Transfer
	 * Department at TTD@lbl.gov.
	 *
	 * NOTICE.  This software is owned by the U.S. Department of Energy.
	 * As such, the U.S. Government has been granted for itself and others
	 * acting on its behalf a paid-up, nonexclusive, irrevocable,
	 * worldwide license in the Software to reproduce, prepare derivative
	 * works, and perform publicly and display publicly.  Beginning five
	 * (5) years after the date permission to assert copyright is obtained
	 * from the U.S. Department of Energy, and subject to any subsequent
	 * five (5) year renewals, the U.S. Government is granted for itself
	 * and others acting on its behalf a paid-up, nonexclusive,
	 * irrevocable, worldwide license in the Software to reproduce,
	 * prepare derivative works, distribute copies to the public, perform
	 * publicly and display publicly, and to permit others to do so.
	 *
	 * This code is distributed under a BSD style license, see the LICENSE
	 * file for complete information.
	 */

	"use strict";

	var React = __webpack_require__(20);
	var _ = __webpack_require__(23);

	__webpack_require__(32);

	/**
	 * Renders an event view that shows the supplied set of
	 * events along a time axis.
	 */

	var EventChart = React.createClass({

	    displayName: "EventChart",

	    render: function render() {
	        var scale = this.props.timeScale;
	        // Create and array of markers, one for each event
	        var markers = [];
	        markers = _.map(this.props.events, function (event) {
	            var posx = scale(new Date(event.time));
	            var transform = "translate(" + posx + ",0)";
	            return React.createElement(
	                "g",
	                { transform: transform },
	                React.createElement("rect", { className: "eventchart-marker",
	                    x: 0, y: 0,
	                    width: 2, height: 30 }),
	                React.createElement(
	                    "text",
	                    { className: "eventchart-marker-label",
	                        x: 4, y: 10 },
	                    event.label
	                )
	            );
	        });

	        return React.createElement(
	            "g",
	            null,
	            markers
	        );
	    }
	});

	module.exports = EventChart;

/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * ESnet React Charts, Copyright (c) 2014, The Regents of the University of
	 * California, through Lawrence Berkeley National Laboratory (subject
	 * to receipt of any required approvals from the U.S. Dept. of
	 * Energy).  All rights reserved.
	 *
	 * If you have questions about your rights to use or distribute this
	 * software, please contact Berkeley Lab's Technology Transfer
	 * Department at TTD@lbl.gov.
	 *
	 * NOTICE.  This software is owned by the U.S. Department of Energy.
	 * As such, the U.S. Government has been granted for itself and others
	 * acting on its behalf a paid-up, nonexclusive, irrevocable,
	 * worldwide license in the Software to reproduce, prepare derivative
	 * works, and perform publicly and display publicly.  Beginning five
	 * (5) years after the date permission to assert copyright is obtained
	 * from the U.S. Department of Energy, and subject to any subsequent
	 * five (5) year renewals, the U.S. Government is granted for itself
	 * and others acting on its behalf a paid-up, nonexclusive,
	 * irrevocable, worldwide license in the Software to reproduce,
	 * prepare derivative works, distribute copies to the public, perform
	 * publicly and display publicly, and to permit others to do so.
	 *
	 * This code is distributed under a BSD style license, see the LICENSE
	 * file for complete information.
	 */

	"use strict";

	var React = __webpack_require__(20);
	var d3 = __webpack_require__(22);

	//Returns a d3 scale as a string so we can determine if we have a new scale
	function scaleAsString(scale) {
	    return scale.domain().toString() + "-" + scale.range().toString();
	}

	var EventRect = React.createClass({

	    displayName: "EventRect",

	    handleZoom: function handleZoom() {
	        var t = d3.event.translate[0] - this.state.translate[0];
	        var s = d3.event.scale;
	        var mouse = d3.mouse(this.getDOMNode());

	        var center = this.props.scale.invert(mouse[0]).getTime(); //mouse position in ms since 1970
	        var begin = this.props.scale.domain()[0].getTime(); //begin of range in ms
	        var end = this.props.scale.domain()[1].getTime(); //end of range in ms

	        var offset = this.props.scale.invert(-t).getTime() - begin; //translation offset in ms

	        var beforeDuration = center - begin; //ms before mouse position
	        var afterDuration = end - center; //ms after mouse position

	        var newBeforeDuration = parseInt(beforeDuration / this.state.scale * s); // scaled ms before mouse
	        var newAfterDuration = parseInt(afterDuration / this.state.scale * s); // scaled ms after mouse

	        var newBegin;
	        var newEnd;
	        if (s === this.state.scale) {
	            newBegin = new Date(begin + offset);
	            newEnd = new Date(end + offset);
	        } else {
	            newBegin = new Date(center - newBeforeDuration);
	            newEnd = new Date(center + newAfterDuration);
	        }

	        // constrain newBegin and newEnd by minTime and maxTime:
	        // If minTime or maxTime properties are present, ensure that
	        // beginTime >= minTime
	        // endTime <= maxTime
	        var cBeginTime = newBegin;
	        var cEndTime = newEnd;
	        var requestedDurationMS = newEnd.getTime() - newBegin.getTime();

	        var cDurationMS = requestedDurationMS;
	        if (this.props.minTime && this.props.maxTime) {
	            var maxDurationMS = this.props.maxTime.getTime() - this.props.minTime.getTime();
	            cDurationMS = Math.min(maxDurationMS, requestedDurationMS);
	        }

	        var constraintsExceeded = false;
	        if (this.props.minTime && cBeginTime < this.props.minTime) {
	            constraintsExceeded = true;
	            cBeginTime = this.props.minTime;
	            cEndTime = new Date(cBeginTime.getTime() + cDurationMS);
	        }

	        if (this.props.maxTime && cEndTime > this.props.maxTime) {
	            constraintsExceeded = true;
	            cEndTime = this.props.maxTime;
	            cBeginTime = new Date(cEndTime.getTime() - cDurationMS);
	        }

	        // Set the zoom behavior x axis to the constrained begin / end time
	        // If omitted, user will need to spend considerable time zooming back to within
	        // the constrained region if they zoom out past minTime / maxTime
	        /*
	         * Unfortunately this does not work as expected.  For some reason making this call 
	         * to this.state.zoom.x results in the axis not being re-rendered.
	        if (constraintsExceeded) {
	            var d = this.props.scale.domain([cBeginTime,cEndTime]);
	            this.state.zoom.x(d);
	        }
	        */

	        if (this.props.onZoom) {
	            this.props.onZoom(cBeginTime, cEndTime);
	        }
	    },

	    renderEventSurface: function renderEventSurface(scale, width, height) {
	        var self = this;

	        //Remove the old touch rect from under this DOM node
	        d3.select(this.getDOMNode()).selectAll("*").remove();

	        //Construct a new overlay rect for catching events and attach a zoom behavior
	        var overlayRect = d3.select(this.getDOMNode()).append("rect").style("fill", "none").attr("id", "chart-touch-surface").attr("width", width).attr("height", height).attr("pointer-events", "all");

	        if (this.state.zoom) overlayRect.call(this.state.zoom);

	        //Mouse move events
	        d3.select(this.getDOMNode()).on("mousemove", function () {
	            var xpos = d3.mouse(this)[0];
	            var time = self.props.scale.invert(xpos);
	            if (self.props.onMouseMove) {
	                self.props.onMouseMove(time);
	            }
	        });
	        d3.select(this.getDOMNode()).on("mouseout", function () {
	            if (self.props.onMouseOut) {
	                self.props.onMouseOut();
	            }
	        });
	    },

	    getInitialState: function getInitialState() {
	        return { "translate": [0, 0],
	            "scale": 1,
	            "zoom": null };
	    },

	    componentWillMount: function componentWillMount() {
	        if (this.props.enableZoom) {
	            var zoom = d3.behavior.zoom().on("zoom", this.handleZoom);
	            this.setState({ "zoom": zoom });
	        }
	    },

	    componentDidMount: function componentDidMount() {
	        this.renderEventSurface(this.props.scale, this.props.width, this.props.height);
	        if (this.props.onResize) {
	            this.props.onResize(this.props.width, this.props.height);
	        }
	    },

	    componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	        var scale = nextProps.scale;
	        var width = nextProps.width;
	        var height = nextProps.height;

	        //If the size changes we have to rebuild the event rect
	        if (this.props.width !== width || this.props.height !== height) {
	            this.renderEventSurface(scale, width, height);
	            if (this.props.onResize) {
	                this.props.onResize(width, height);
	            }
	        }

	        //If the scale has changed, we can keep the rect, but reset the start point of
	        //any zooming that might be in progress
	        if (scaleAsString(this.props.scale) !== scaleAsString(scale) && this.state.zoom) {
	            this.setState({ "translate": this.state.zoom.translate(),
	                "scale": this.state.zoom.scale() });
	        }

	        // TODO: support dynamically modifying zoomEnabled
	    },

	    shouldComponentUpdate: function shouldComponentUpdate() {
	        return false;
	    },

	    render: function render() {
	        return React.createElement("g", null);
	    } });

	module.exports = EventRect;

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * ESnet React Charts, Copyright (c) 2014, The Regents of the University of
	 * California, through Lawrence Berkeley National Laboratory (subject
	 * to receipt of any required approvals from the U.S. Dept. of
	 * Energy).  All rights reserved.
	 *
	 * If you have questions about your rights to use or distribute this
	 * software, please contact Berkeley Lab's Technology Transfer
	 * Department at TTD@lbl.gov.
	 *
	 * NOTICE.  This software is owned by the U.S. Department of Energy.
	 * As such, the U.S. Government has been granted for itself and others
	 * acting on its behalf a paid-up, nonexclusive, irrevocable,
	 * worldwide license in the Software to reproduce, prepare derivative
	 * works, and perform publicly and display publicly.  Beginning five
	 * (5) years after the date permission to assert copyright is obtained
	 * from the U.S. Department of Energy, and subject to any subsequent
	 * five (5) year renewals, the U.S. Government is granted for itself
	 * and others acting on its behalf a paid-up, nonexclusive,
	 * irrevocable, worldwide license in the Software to reproduce,
	 * prepare derivative works, distribute copies to the public, perform
	 * publicly and display publicly, and to permit others to do so.
	 *
	 * This code is distributed under a BSD style license, see the LICENSE
	 * file for complete information.
	 */

	"use strict";

	var React = __webpack_require__(20);
	var d3 = __webpack_require__(22);

	/**
	 * Renders a 'axis' that display a label for a data channel and a max and average value
	 *      +----------------+-----+------- ...
	 *      | Traffic        | 120 |
	 *      | Max 100 Gbps   |     | Chart  ...
	 *      | Avg 26 Gbps    | 0   |
	 *      +----------------+-----+------- ...
	 */

	var LabelAxis = React.createClass({

	    displayName: "LabelAxis",

	    render: function render() {
	        var labelStyle = { fontSize: 14, textAnchor: "middle", fill: "#838383" };
	        var detailStyle = { fontSize: 12, textAnchor: "left", fill: "#bdbdbd" };
	        var VALWIDTH = this.props.valWidth ? this.props.valWidth : 40;
	        var rectWidth = this.props.width - VALWIDTH;
	        var valXPos = rectWidth + 3; // padding

	        var format = _.has(this.props, "format") ? this.props.format : ".2f";
	        var maxStr = d3.format(format)(this.props.max);
	        var minStr = d3.format(format)(this.props.min);
	        return React.createElement(
	            "g",
	            null,
	            React.createElement("rect", { x: "0", y: "0", width: rectWidth, height: this.props.height,
	                style: { fill: "#E4E4E4", fillOpacity: 0.65 } }),
	            React.createElement(
	                "text",
	                { x: parseInt(rectWidth / 2), y: this.props.height / 2, style: labelStyle },
	                this.props.label
	            ),
	            React.createElement(
	                "text",
	                { x: valXPos, y: 0, dy: "1.2em", style: detailStyle },
	                maxStr
	            ),
	            React.createElement(
	                "text",
	                { x: valXPos, y: this.props.height, style: detailStyle },
	                minStr
	            )
	        );
	    } });

	module.exports = LabelAxis;

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * ESnet React Charts, Copyright (c) 2014, The Regents of the University of
	 * California, through Lawrence Berkeley National Laboratory (subject
	 * to receipt of any required approvals from the U.S. Dept. of
	 * Energy).  All rights reserved.
	 *
	 * If you have questions about your rights to use or distribute this
	 * software, please contact Berkeley Lab's Technology Transfer
	 * Department at TTD@lbl.gov.
	 *
	 * NOTICE.  This software is owned by the U.S. Department of Energy.
	 * As such, the U.S. Government has been granted for itself and others
	 * acting on its behalf a paid-up, nonexclusive, irrevocable,
	 * worldwide license in the Software to reproduce, prepare derivative
	 * works, and perform publicly and display publicly.  Beginning five
	 * (5) years after the date permission to assert copyright is obtained
	 * from the U.S. Department of Energy, and subject to any subsequent
	 * five (5) year renewals, the U.S. Government is granted for itself
	 * and others acting on its behalf a paid-up, nonexclusive,
	 * irrevocable, worldwide license in the Software to reproduce,
	 * prepare derivative works, distribute copies to the public, perform
	 * publicly and display publicly, and to permit others to do so.
	 *
	 * This code is distributed under a BSD style license, see the LICENSE
	 * file for complete information.
	 */

	"use strict";

	var React = __webpack_require__(20);
	var _ = __webpack_require__(23);

	__webpack_require__(34);

	var Legend = React.createClass({

	    displayName: "Legend",

	    getDefaultProps: function getDefaultProps() {
	        return {
	            "style": "swatch" };
	    },

	    render: function render() {
	        var self = this;

	        var items = [];
	        _.each(this.props.categories, function (categoryClass, categoryLabel) {
	            var styleClass;
	            if (self.props.style === "swatch") {
	                styleClass = "legend-swatch " + categoryClass;
	            } else if (self.props.style === "line") {
	                styleClass = "legend-line " + categoryClass;
	            } else if (self.props.style === "dot") {
	                styleClass = "legend-dot " + categoryClass;
	            }

	            var labelClass = "legend-label " + categoryClass;
	            items.push(React.createElement(
	                "li",
	                { key: "legend-item-" + categoryLabel, className: "legend-list" },
	                React.createElement("span", { className: styleClass }),
	                React.createElement(
	                    "span",
	                    { className: labelClass },
	                    " ",
	                    categoryLabel,
	                    " "
	                )
	            ));
	        });

	        return React.createElement(
	            "ul",
	            { className: "horizontal-legend" },
	            items
	        );
	    }
	});

	module.exports = Legend;
	//or "line" or "dot"

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * ESnet React Charts, Copyright (c) 2014, The Regents of the University of
	 * California, through Lawrence Berkeley National Laboratory (subject
	 * to receipt of any required approvals from the U.S. Dept. of
	 * Energy).  All rights reserved.
	 *
	 * If you have questions about your rights to use or distribute this
	 * software, please contact Berkeley Lab's Technology Transfer
	 * Department at TTD@lbl.gov.
	 *
	 * NOTICE.  This software is owned by the U.S. Department of Energy.
	 * As such, the U.S. Government has been granted for itself and others
	 * acting on its behalf a paid-up, nonexclusive, irrevocable,
	 * worldwide license in the Software to reproduce, prepare derivative
	 * works, and perform publicly and display publicly.  Beginning five
	 * (5) years after the date permission to assert copyright is obtained
	 * from the U.S. Department of Energy, and subject to any subsequent
	 * five (5) year renewals, the U.S. Government is granted for itself
	 * and others acting on its behalf a paid-up, nonexclusive,
	 * irrevocable, worldwide license in the Software to reproduce,
	 * prepare derivative works, distribute copies to the public, perform
	 * publicly and display publicly, and to permit others to do so.
	 *
	 * This code is distributed under a BSD style license, see the LICENSE
	 * file for complete information.
	 */

	"use strict";

	var React = __webpack_require__(20);
	var d3 = __webpack_require__(22);
	var _ = __webpack_require__(23);

	__webpack_require__(36);

	function scaleAsString(scale) {
	    return "" + scale.domain() + "-" + scale.range();
	}

	var LineChart = React.createClass({
	    displayName: "LineChart",

	    getDefaultProps: function getDefaultProps() {
	        return {
	            "interpolate": "basis",
	            //"showDataPoints": false,
	            //"dataPointRadius": 1.0,
	            "style": {
	                "color": "#9DA3FF",
	                "width": 1
	            }
	        };
	    },

	    renderLineChart: function renderLineChart(series, timeScale, yScale, interpolate,
	    /*showDataPoints, dataPointRadius,*/classed) {

	        var data = series.toJSON().points;

	        if (!yScale || !data[0]) {
	            return null;
	        }

	        var style = {
	            "fill": "none",
	            "stroke": this.props.style.color || "#9DA3FF",
	            "stroke-width": "" + this.props.style.width + "px" || "1px"
	        };

	        d3.select(this.getDOMNode()).selectAll("*").remove();

	        var line = d3.svg.line().interpolate(interpolate).x(function (d) {
	            return timeScale(d[0]);
	        }).y(function (d) {
	            return yScale(d[1]);
	        });

	        this.path = d3.select(this.getDOMNode()).append("path").datum(data).style(style).attr("d", line).attr("clip-path", this.props.clipPathURL);

	        /*
	        if (showDataPoints) {
	            d3.select(this.getDOMNode()).selectAll("dot")
	                .data(data)
	                .enter().append("circle")
	                    .attr("r", dataPointRadius)
	                    .attr("cx", function (d) { return timeScale(d.time); })
	                    .attr("cy", function (d) { return yScale(d.value); })
	        }
	        */
	    },

	    updateLineChart: function updateLineChart(series, timeScale, yScale, interpolate,
	    /*showDataPoints, dataPointRadius,*/classed) {
	        var data = series.toJSON().points;

	        var line = d3.svg.line().interpolate(interpolate).x(function (d) {
	            return timeScale(d[0]);
	        }).y(function (d) {
	            return yScale(d[1]);
	        });

	        this.path.datum(data).transition().duration(this.props.transition).ease("sin-in-out").attr("d", line);
	    },

	    componentDidMount: function componentDidMount() {
	        this.renderLineChart(this.props.series, this.props.timeScale, this.props.yScale, this.props.interpolate,
	        //this.props.showDataPoints,
	        //this.props.dataPointRadius,
	        this.props.classed);
	    },

	    componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	        var series = nextProps.series;
	        var timeScale = nextProps.timeScale;
	        var yScale = nextProps.yScale;
	        var classed = nextProps.classed;
	        var interpolate = nextProps.interpolate;

	        //var showDataPoints = nextProps.showDataPoints;
	        //var dataPointRadius = nextProps.dataPointRadius;

	        if (this.props.series !== nextProps.series || this.props.time !== nextProps.time || this.interpolate !== interpolate ||
	        //this.showDataPoints !== showDataPoints ||
	        //this.dataPointRadius !== dataPointRadius ||
	        scaleAsString(this.props.timeScale) !== scaleAsString(timeScale) || scaleAsString(this.props.yScale) !== scaleAsString(yScale)) {
	            this.updateLineChart(series, timeScale, yScale, interpolate,
	            /*showDataPoints, dataPointRadius,*/classed);
	        }
	    },

	    shouldComponentUpdate: function shouldComponentUpdate() {
	        return false;
	    },

	    //TODO: props.attr should be required
	    render: function render() {
	        return React.createElement("g", null);
	    }
	});

	module.exports = LineChart;

/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * ESnet React Charts, Copyright (c) 2014, The Regents of the University of
	 * California, through Lawrence Berkeley National Laboratory (subject
	 * to receipt of any required approvals from the U.S. Dept. of
	 * Energy).  All rights reserved.
	 *
	 * If you have questions about your rights to use or distribute this
	 * software, please contact Berkeley Lab's Technology Transfer
	 * Department at TTD@lbl.gov.
	 *
	 * NOTICE.  This software is owned by the U.S. Department of Energy.
	 * As such, the U.S. Government has been granted for itself and others
	 * acting on its behalf a paid-up, nonexclusive, irrevocable,
	 * worldwide license in the Software to reproduce, prepare derivative
	 * works, and perform publicly and display publicly.  Beginning five
	 * (5) years after the date permission to assert copyright is obtained
	 * from the U.S. Department of Energy, and subject to any subsequent
	 * five (5) year renewals, the U.S. Government is granted for itself
	 * and others acting on its behalf a paid-up, nonexclusive,
	 * irrevocable, worldwide license in the Software to reproduce,
	 * prepare derivative works, distribute copies to the public, perform
	 * publicly and display publicly, and to permit others to do so.
	 *
	 * This code is distributed under a BSD style license, see the LICENSE
	 * file for complete information.
	 */

	/**
	 * Indicator for a particular data point.  Typically used to indicate nearest actual data point to the
	 * tracker
	 *
	 */
	"use strict";

	var React = __webpack_require__(20);
	var d3 = __webpack_require__(22);
	var _ = __webpack_require__(23);

	__webpack_require__(36);

	function scaleAsString(scale) {
	    return scale.domain().toString() + "-" + scale.range().toString();
	}

	var PointIndicator = React.createClass({
	    displayName: "PointIndicator",

	    getDefaultProps: function getDefaultProps() {
	        return {
	            "pointRadius": 1
	        };
	    },

	    renderPoint: function renderPoint(timeScale, yScale, pointRadius, point, classed) {
	        var data;

	        if (point) {
	            data = [point];
	        } else {
	            data = [];
	        }

	        d3.select(this.getDOMNode()).selectAll("*").remove();

	        if (!yScale) return;

	        var pointClasses = { "pointindicator-point": true };
	        if (classed) {
	            pointClasses[classed] = true;
	        }

	        d3.select(this.getDOMNode()).selectAll("dot").data(data).enter().append("circle").classed(pointClasses).attr("r", pointRadius).attr("cx", function (d) {
	            return timeScale(d.time);
	        }).attr("cy", function (d) {
	            return yScale(d.value);
	        });
	    },

	    componentDidMount: function componentDidMount() {
	        this.renderPoint(this.props.timeScale, this.props.yScale, this.props.pointRadius, this.props.point, this.props.classed);
	    },

	    componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	        var timeScale = nextProps.timeScale;
	        var yScale = nextProps.yScale;
	        var pointRadius = nextProps.pointRadius;
	        var classed = nextProps.classed;
	        var point = nextProps.point;

	        if (this.props.point !== point || this.pointRadius !== pointRadius || scaleAsString(this.props.timeScale) !== scaleAsString(timeScale) || scaleAsString(this.props.yScale) !== scaleAsString(yScale)) {
	            this.renderPoint(timeScale, yScale, pointRadius, point, classed);
	        }
	    },

	    shouldComponentUpdate: function shouldComponentUpdate() {
	        return false;
	    },

	    //TODO: props.attr should be required
	    render: function render() {
	        return React.createElement("g", null);
	    }
	});

	module.exports = PointIndicator;

/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * ESnet React Charts, Copyright (c) 2014, The Regents of the University of
	 * California, through Lawrence Berkeley National Laboratory (subject
	 * to receipt of any required approvals from the U.S. Dept. of
	 * Energy).  All rights reserved.
	 *
	 * If you have questions about your rights to use or distribute this
	 * software, please contact Berkeley Lab's Technology Transfer
	 * Department at TTD@lbl.gov.
	 *
	 * NOTICE.  This software is owned by the U.S. Department of Energy.
	 * As such, the U.S. Government has been granted for itself and others
	 * acting on its behalf a paid-up, nonexclusive, irrevocable,
	 * worldwide license in the Software to reproduce, prepare derivative
	 * works, and perform publicly and display publicly.  Beginning five
	 * (5) years after the date permission to assert copyright is obtained
	 * from the U.S. Department of Energy, and subject to any subsequent
	 * five (5) year renewals, the U.S. Government is granted for itself
	 * and others acting on its behalf a paid-up, nonexclusive,
	 * irrevocable, worldwide license in the Software to reproduce,
	 * prepare derivative works, distribute copies to the public, perform
	 * publicly and display publicly, and to permit others to do so.
	 *
	 * This code is distributed under a BSD style license, see the LICENSE
	 * file for complete information.
	 */

	"use strict";

	var React = __webpack_require__(20);

	/**
	 * This takes a single child and inserts a prop 'width' on it that is the
	 * current width of the this container. This is handy if you want to surround
	 * a chart or other svg diagram and have this drive the chart width.
	 */
	var Resizable = React.createClass({
	    displayName: "Resizable",

	    getInitialState: function getInitialState() {
	        return { width: 0 };
	    },

	    handleResize: function handleResize(e) {
	        this.setState({ width: this.refs.container.getDOMNode().offsetWidth });
	    },

	    componentDidMount: function componentDidMount() {
	        window.addEventListener("resize", this.handleResize);
	        this.handleResize();
	    },

	    componentWillUnmount: function componentWillUnmount() {
	        window.removeEventListener("resize", this.handleResize);
	    },

	    render: function render() {
	        var props = { "width": this.state.width };
	        var child = React.Children.only(this.props.children);
	        var childElement = this.state.width ? React.addons.cloneWithProps(child, props) : null;
	        return React.createElement(
	            "div",
	            { ref: "container" },
	            childElement
	        );
	    }
	});

	module.exports = Resizable;

/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * ESnet React Charts, Copyright (c) 2014, The Regents of the University of
	 * California, through Lawrence Berkeley National Laboratory (subject
	 * to receipt of any required approvals from the U.S. Dept. of
	 * Energy).  All rights reserved.
	 *
	 * If you have questions about your rights to use or distribute this
	 * software, please contact Berkeley Lab's Technology Transfer
	 * Department at TTD@lbl.gov.
	 *
	 * NOTICE.  This software is owned by the U.S. Department of Energy.
	 * As such, the U.S. Government has been granted for itself and others
	 * acting on its behalf a paid-up, nonexclusive, irrevocable,
	 * worldwide license in the Software to reproduce, prepare derivative
	 * works, and perform publicly and display publicly.  Beginning five
	 * (5) years after the date permission to assert copyright is obtained
	 * from the U.S. Department of Energy, and subject to any subsequent
	 * five (5) year renewals, the U.S. Government is granted for itself
	 * and others acting on its behalf a paid-up, nonexclusive,
	 * irrevocable, worldwide license in the Software to reproduce,
	 * prepare derivative works, distribute copies to the public, perform
	 * publicly and display publicly, and to permit others to do so.
	 *
	 * This code is distributed under a BSD style license, see the LICENSE
	 * file for complete information.
	 */

	"use strict";

	var React = __webpack_require__(20);
	var d3 = __webpack_require__(22);
	var _ = __webpack_require__(23);
	var Pond = __webpack_require__(21);

	var TimeSeries = Pond.TimeSeries;

	__webpack_require__(38);

	function scaleAsString(scale) {
	    return scale.domain().toString() + "-" + scale.range().toString();
	}

	var ScatterChart = React.createClass({
	    displayName: "ScatterChart",

	    getDefaultProps: function getDefaultProps() {
	        return {
	            "radius": 2,
	            "style": {
	                color: "steelblue",
	                opacity: 1
	            }
	        };
	    },

	    renderScatterChart: function renderScatterChart(series, timeScale, yScale, radius) {
	        var _this = this;

	        var data = series.toJSON().points;

	        if (!yScale || !data[0]) {
	            return null;
	        }

	        if (this.props.dropNulls) {
	            data = _.filter(data, function (d) {
	                return d.value !== null;
	            });
	        }

	        var style = {
	            "fill": this.props.style.color || "steelblue",
	            "fill-opacity": this.props.style.opacity || 1,
	            "stroke": "none" };

	        d3.select(this.getDOMNode()).selectAll("*").remove();

	        this.scatter = d3.select(this.getDOMNode()).selectAll("dot").data(data).enter().append("circle").style(style).attr("r", function (d) {
	            return d[2] ? d[2] : _this.props.radius;
	        }).attr("cx", function (d) {
	            return timeScale(d[0]);
	        }).attr("cy", function (d) {
	            return yScale(d[1]);
	        }).attr("clip-path", this.props.clipPathURL);
	    },

	    updateScatterChart: function updateScatterChart(series, timeScale, yScale, radius) {
	        var _this2 = this;

	        var data = series.toJSON().points;
	        this.scatter.data(data).transition().duration(this.props.transiton).ease("sin-in-out").attr("r", function (d) {
	            return d[2] ? d[2] : _this2.props.radius;
	        }).attr("cx", function (d) {
	            return timeScale(d[0]);
	        }).attr("cy", function (d) {
	            return yScale(d[1]);
	        });
	    },

	    componentDidMount: function componentDidMount() {
	        this.renderScatterChart(this.props.series, this.props.timeScale, this.props.yScale, this.props.radius, this.props.classed);
	    },

	    componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	        var series = nextProps.series;
	        var timeScale = nextProps.timeScale;
	        var yScale = nextProps.yScale;
	        var radius = nextProps.radius;

	        //What changed
	        var timeScaleChanged = scaleAsString(this.props.timeScale) !== scaleAsString(timeScale);
	        var yAxisScaleChanged = scaleAsString(this.props.yScale) !== scaleAsString(yScale);
	        var defaultRadiusChanged = this.props.radius !== radius;
	        var seriesChanged = TimeSeries.is(this.props.series, series);

	        //
	        // Currently if the series changes we completely rerender it. If the y axis scale
	        // changes then we just update the existing paths using a transition so that we
	        // can get smooth axis transitions.
	        //

	        if (seriesChanged || timeScaleChanged || defaultRadiusChanged) {
	            this.renderScatterChart(series, timeScale, yScale, radius);
	        } else if (yAxisScaleChanged) {
	            this.updateScatterChart(series, timeScale, yScale, radius);
	        }
	    },

	    shouldComponentUpdate: function shouldComponentUpdate() {
	        return false;
	    },

	    //TODO: props.attr should be required
	    render: function render() {
	        return React.createElement("g", null);
	    }
	});

	module.exports = ScatterChart;

/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * ESnet React Charts, Copyright (c) 2014, The Regents of the University of
	 * California, through Lawrence Berkeley National Laboratory (subject
	 * to receipt of any required approvals from the U.S. Dept. of
	 * Energy).  All rights reserved.
	 *
	 * If you have questions about your rights to use or distribute this
	 * software, please contact Berkeley Lab's Technology Transfer
	 * Department at TTD@lbl.gov.
	 *
	 * NOTICE.  This software is owned by the U.S. Department of Energy.
	 * As such, the U.S. Government has been granted for itself and others
	 * acting on its behalf a paid-up, nonexclusive, irrevocable,
	 * worldwide license in the Software to reproduce, prepare derivative
	 * works, and perform publicly and display publicly.  Beginning five
	 * (5) years after the date permission to assert copyright is obtained
	 * from the U.S. Department of Energy, and subject to any subsequent
	 * five (5) year renewals, the U.S. Government is granted for itself
	 * and others acting on its behalf a paid-up, nonexclusive,
	 * irrevocable, worldwide license in the Software to reproduce,
	 * prepare derivative works, distribute copies to the public, perform
	 * publicly and display publicly, and to permit others to do so.
	 *
	 * This code is distributed under a BSD style license, see the LICENSE
	 * file for complete information.
	 */

	"use strict";

	var React = __webpack_require__(20);
	var d3 = __webpack_require__(22);

	__webpack_require__(40);

	function scaleAsString(scale) {
	    return scale.domain().toString() + "-" + scale.range().toString();
	}

	/**
	 * Renders a horizontal time axis
	 */

	var TimeAxis = React.createClass({

	    displayName: "TimeAxis",

	    renderTimeAxis: function renderTimeAxis(scale) {
	        var axis;

	        if (this.props.dayFormat === true) {
	            axis = d3.svg.axis().scale(scale).orient("bottom").ticks(d3.time.days, 1).tickFormat(d3.time.format("%d"));
	        } else if (this.props.monthFormat === true) {
	            axis = d3.svg.axis().scale(scale).orient("bottom").ticks(d3.time.months, 1).tickFormat(d3.time.format("%B"));
	        } else {
	            axis = d3.svg.axis().scale(scale).orient("bottom");
	        }

	        //Remove the old axis from under this DOM node
	        d3.select(this.getDOMNode()).selectAll("*").remove();

	        var axisGroup = d3.select(this.getDOMNode()).append("g").attr("class", "x axis").call(axis.tickSize(10));

	        axisGroup.selectAll("tick").append("line").attr("shape-rendering", "crispEdge").attr("stroke", "#FFF").attr("y1", 0).attr("y2", this.props.height);
	    },

	    componentDidMount: function componentDidMount() {
	        this.renderTimeAxis(this.props.scale);
	    },

	    componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	        var scale = nextProps.scale;
	        if (scaleAsString(this.props.scale) !== scaleAsString(scale)) {
	            this.renderTimeAxis(scale);
	        }
	    },

	    shouldComponentUpdate: function shouldComponentUpdate() {
	        return false;
	    },

	    render: function render() {
	        return React.createElement("g", null);
	    } });

	module.exports = TimeAxis;

/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * ESnet React Charts, Copyright (c) 2014, The Regents of the University of
	 * California, through Lawrence Berkeley National Laboratory (subject
	 * to receipt of any required approvals from the U.S. Dept. of
	 * Energy).  All rights reserved.
	 *
	 * If you have questions about your rights to use or distribute this
	 * software, please contact Berkeley Lab's Technology Transfer
	 * Department at TTD@lbl.gov.
	 *
	 * NOTICE.  This software is owned by the U.S. Department of Energy.
	 * As such, the U.S. Government has been granted for itself and others
	 * acting on its behalf a paid-up, nonexclusive, irrevocable,
	 * worldwide license in the Software to reproduce, prepare derivative
	 * works, and perform publicly and display publicly.  Beginning five
	 * (5) years after the date permission to assert copyright is obtained
	 * from the U.S. Department of Energy, and subject to any subsequent
	 * five (5) year renewals, the U.S. Government is granted for itself
	 * and others acting on its behalf a paid-up, nonexclusive,
	 * irrevocable, worldwide license in the Software to reproduce,
	 * prepare derivative works, distribute copies to the public, perform
	 * publicly and display publicly, and to permit others to do so.
	 *
	 * This code is distributed under a BSD style license, see the LICENSE
	 * file for complete information.
	 */

	"use strict";

	var React = __webpack_require__(20);
	var util = __webpack_require__(25);

	__webpack_require__(42);

	var Tracker = React.createClass({

	    displayName: "Tracker",

	    render: function render() {
	        var posx = this.props.scale(this.props.position);
	        if (posx) {
	            return React.createElement("line", { className: "tracker-line", x1: posx, y1: 0, x2: posx, y2: this.props.height });
	        } else {
	            return null;
	        }
	    } });

	module.exports = Tracker;

/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * ESnet React Charts, Copyright (c) 2014, The Regents of the University of
	 * California, through Lawrence Berkeley National Laboratory (subject
	 * to receipt of any required approvals from the U.S. Dept. of
	 * Energy).  All rights reserved.
	 *
	 * If you have questions about your rights to use or distribute this
	 * software, please contact Berkeley Lab's Technology Transfer
	 * Department at TTD@lbl.gov.
	 *
	 * NOTICE.  This software is owned by the U.S. Department of Energy.
	 * As such, the U.S. Government has been granted for itself and others
	 * acting on its behalf a paid-up, nonexclusive, irrevocable,
	 * worldwide license in the Software to reproduce, prepare derivative
	 * works, and perform publicly and display publicly.  Beginning five
	 * (5) years after the date permission to assert copyright is obtained
	 * from the U.S. Department of Energy, and subject to any subsequent
	 * five (5) year renewals, the U.S. Government is granted for itself
	 * and others acting on its behalf a paid-up, nonexclusive,
	 * irrevocable, worldwide license in the Software to reproduce,
	 * prepare derivative works, distribute copies to the public, perform
	 * publicly and display publicly, and to permit others to do so.
	 *
	 * This code is distributed under a BSD style license, see the LICENSE
	 * file for complete information.
	 */

	"use strict";

	var React = __webpack_require__(20);
	var d3 = __webpack_require__(22);

	/**
	 * Renders a 'axis' that display a label for a current tracker value
	 *
	 *      ----+----------------+
	 *          |     56.2G      |
	 *          |      bps       |
	 *          |                |
	 *      ----+----------------+
	 */

	var ValueAxis = React.createClass({

	    displayName: "ValueAxis",

	    render: function render() {
	        var labelStyle = { fontSize: 14, textAnchor: "middle", fill: "#838383" };
	        var detailStyle = { fontSize: 12, textAnchor: "middle", fill: "#9a9a9a" };
	        return React.createElement(
	            "g",
	            null,
	            React.createElement("rect", { x: "0", y: "0", width: this.props.width, height: this.props.height,
	                style: { fill: "#E4E4E4", fillOpacity: 0.65 } }),
	            React.createElement(
	                "text",
	                { x: parseInt(this.props.width / 2), y: this.props.height / 2, style: labelStyle },
	                this.props.value
	            ),
	            React.createElement(
	                "text",
	                { x: parseInt(this.props.width / 2), y: this.props.height / 2, dy: "1.2em", style: detailStyle },
	                this.props.detail
	            )
	        );
	    } });

	module.exports = ValueAxis;

/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * ESnet React Charts, Copyright (c) 2014, The Regents of the University of
	 * California, through Lawrence Berkeley National Laboratory (subject
	 * to receipt of any required approvals from the U.S. Dept. of
	 * Energy).  All rights reserved.
	 *
	 * If you have questions about your rights to use or distribute this
	 * software, please contact Berkeley Lab's Technology Transfer
	 * Department at TTD@lbl.gov.
	 *
	 * NOTICE.  This software is owned by the U.S. Department of Energy.
	 * As such, the U.S. Government has been granted for itself and others
	 * acting on its behalf a paid-up, nonexclusive, irrevocable,
	 * worldwide license in the Software to reproduce, prepare derivative
	 * works, and perform publicly and display publicly.  Beginning five
	 * (5) years after the date permission to assert copyright is obtained
	 * from the U.S. Department of Energy, and subject to any subsequent
	 * five (5) year renewals, the U.S. Government is granted for itself
	 * and others acting on its behalf a paid-up, nonexclusive,
	 * irrevocable, worldwide license in the Software to reproduce,
	 * prepare derivative works, distribute copies to the public, perform
	 * publicly and display publicly, and to permit others to do so.
	 *
	 * This code is distributed under a BSD style license, see the LICENSE
	 * file for complete information.
	 */

	"use strict";

	var React = __webpack_require__(20);
	var d3 = __webpack_require__(22);

	__webpack_require__(44);

	var MARGIN = 0;

	function scaleAsString(scale) {
	    return scale.domain().toString() + "-" + scale.range().toString();
	}

	/**
	 * Renders a horizontal time axis
	 *
	 * Props:
	 *     * align - if the axis should be draw as if it is on the left or right (defaults to left)
	 *     * scale - a d3 scale that defines the domain and range of the axis
	 */

	var YAxis = React.createClass({

	    displayName: "YAxis",

	    propTypes: {
	        "align": React.PropTypes.string },

	    getDefaultProps: function getDefaultProps() {
	        return {
	            "id": "yaxis", // id referred to by the chart
	            "align": "left", // left or right of the chart
	            "min": 0, // range
	            "max": 1,
	            "type": "linear", // linear, log, or power
	            "absolute": false, // Display scale always positive
	            "format": ".2s", // Format string for d3.format
	            "labelOffset": 0, // Allows the user to tweak the position of the label
	            "transition": 0, // Axis transition time
	            "style": {
	                labelColor: "#8B7E7E", // Default label color
	                labelWeight: 100,
	                labelSize: 12
	            }
	        };
	    },

	    renderAxis: function renderAxis(align, scale, width, absolute, format) {
	        var yformat = d3.format(format);

	        var axisGenerator;
	        if (this.props.type === "linear" || this.props.type === "power") {
	            if (this.props.height <= 200) {
	                axisGenerator = d3.svg.axis().scale(scale).ticks(5).tickFormat(function (d) {
	                    if (absolute) {
	                        return yformat(Math.abs(d));
	                    } else {
	                        return yformat(d);
	                    }
	                }).orient(align);
	            } else {
	                axisGenerator = d3.svg.axis().scale(scale).tickFormat(function (d) {
	                    if (absolute) {
	                        return yformat(Math.abs(d));
	                    } else {
	                        return yformat(d);
	                    }
	                }).orient(align);
	            }
	        } else if (this.props.type === "log") {
	            axisGenerator = d3.svg.axis().scale(scale).ticks(10, ".2s").orient(align);
	        }

	        var style = {
	            "fill": this.props.style.labelColor || "#8B7E7E",
	            "font-weight": this.props.style.labelWeight || 100,
	            "font-size": this.props.style.labelSize ? "" + this.props.style.width + "px" : "12px"
	        };

	        //Remove the old axis from under this DOM node
	        d3.select(this.getDOMNode()).selectAll("*").remove();

	        //Add the new axis
	        var x = align === "left" ? width - MARGIN : 0;
	        var labelOffset = align === "left" ? this.props.labelOffset - 50 : 40 + this.props.labelOffset;
	        var classed = this.props.classed ? this.props.classed : "";
	        var axisClass = "yaxis " + classed;
	        var axisLabelClass = "yaxis-label " + classed;
	        this.axis = d3.select(this.getDOMNode()).append("g").attr("transform", "translate(" + x + ",0)").attr("class", axisClass).call(axisGenerator).append("text").style(style).attr("transform", "rotate(-90)").attr("class", axisLabelClass).attr("y", labelOffset).attr("dy", ".71em").style("text-anchor", "end").text(this.props.label);
	    },

	    updateAxis: function updateAxis(align, scale, width, absolute, format) {
	        var yformat = d3.format(format);
	        var axisGenerator;
	        if (this.props.type === "linear" || this.props.type === "power") {
	            if (this.props.height <= 200) {
	                axisGenerator = d3.svg.axis().scale(scale).ticks(5).tickFormat(function (d) {
	                    if (absolute) {
	                        return yformat(Math.abs(d));
	                    } else {
	                        return yformat(d);
	                    }
	                }).orient(align);
	            } else {
	                axisGenerator = d3.svg.axis().scale(scale).tickFormat(function (d) {
	                    if (absolute) {
	                        return yformat(Math.abs(d));
	                    } else {
	                        return yformat(d);
	                    }
	                }).orient(align);
	            }
	        } else if (this.props.type === "log") {
	            axisGenerator = d3.svg.axis().scale(scale).ticks(10, ".2s").orient(align);
	        }

	        d3.select(this.getDOMNode()).select(".yaxis").transition().duration(this.props.transition).ease("sin-in-out").call(axisGenerator);
	    },

	    componentDidMount: function componentDidMount() {
	        this.renderAxis(this.props.align, this.props.scale, this.props.width, this.props.absolute, this.props.format);
	    },

	    componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	        var scale = nextProps.scale;
	        var align = nextProps.align;
	        var width = nextProps.width;
	        var absolute = nextProps.absolute;
	        var format = nextProps.format;

	        //if (scaleAsString(this.props.scale) !== scaleAsString(scale)) {
	        this.updateAxis(align, scale, width, absolute, format);
	        //}
	    },

	    shouldComponentUpdate: function shouldComponentUpdate() {
	        return false;
	    },

	    render: function render() {
	        return React.createElement("g", null);
	    } });

	module.exports = YAxis;

/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = React;

/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	
	//Prims
	"use strict";

	exports.Index = __webpack_require__(133);
	exports.TimeRange = __webpack_require__(134);

	//Events
	exports.Event = __webpack_require__(135).Event;
	exports.TimeRangeEvent = __webpack_require__(135).TimeRangeEvent;
	exports.IndexedEvent = __webpack_require__(135).IndexedEvent;

	//Series
	exports.Series = __webpack_require__(136).Series;
	exports.TimeSeries = __webpack_require__(136).TimeSeries;
	exports.IndexedSeries = __webpack_require__(136).IndexedSeries;

	//Builder
	exports.Bucket = __webpack_require__(137);
	exports.Generator = __webpack_require__(138);
	exports.Aggregator = __webpack_require__(139);
	exports.Collector = __webpack_require__(138);

	//Util
	exports.Functions = __webpack_require__(140);

/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;"use strict";!(function(){var d3={version:"3.5.5"};var d3_arraySlice=[].slice, d3_array=function d3_array(list){return d3_arraySlice.call(list);};var d3_document=this.document;function d3_documentElement(node){return node && (node.ownerDocument || node.document || node).documentElement;}function d3_window(node){return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);}if(d3_document){try{d3_array(d3_document.documentElement.childNodes)[0].nodeType;}catch(e) {d3_array = function(list){var i=list.length, array=new Array(i);while(i--) array[i] = list[i];return array;};}}if(!Date.now)Date.now = function(){return +new Date();};if(d3_document){try{d3_document.createElement("DIV").style.setProperty("opacity", 0, "");}catch(error) {var d3_element_prototype=this.Element.prototype, d3_element_setAttribute=d3_element_prototype.setAttribute, d3_element_setAttributeNS=d3_element_prototype.setAttributeNS, d3_style_prototype=this.CSSStyleDeclaration.prototype, d3_style_setProperty=d3_style_prototype.setProperty;d3_element_prototype.setAttribute = function(name, value){d3_element_setAttribute.call(this, name, value + "");};d3_element_prototype.setAttributeNS = function(space, local, value){d3_element_setAttributeNS.call(this, space, local, value + "");};d3_style_prototype.setProperty = function(name, value, priority){d3_style_setProperty.call(this, name, value + "", priority);};}}d3.ascending = d3_ascending;function d3_ascending(a, b){return a < b?-1:a > b?1:a >= b?0:NaN;}d3.descending = function(a, b){return b < a?-1:b > a?1:b >= a?0:NaN;};d3.min = function(array, f){var i=-1, n=array.length, a, b;if(arguments.length === 1){while(++i < n) if((b = array[i]) != null && b >= b){a = b;break;}while(++i < n) if((b = array[i]) != null && a > b)a = b;}else {while(++i < n) if((b = f.call(array, array[i], i)) != null && b >= b){a = b;break;}while(++i < n) if((b = f.call(array, array[i], i)) != null && a > b)a = b;}return a;};d3.max = function(array, f){var i=-1, n=array.length, a, b;if(arguments.length === 1){while(++i < n) if((b = array[i]) != null && b >= b){a = b;break;}while(++i < n) if((b = array[i]) != null && b > a)a = b;}else {while(++i < n) if((b = f.call(array, array[i], i)) != null && b >= b){a = b;break;}while(++i < n) if((b = f.call(array, array[i], i)) != null && b > a)a = b;}return a;};d3.extent = function(array, f){var i=-1, n=array.length, a, b, c;if(arguments.length === 1){while(++i < n) if((b = array[i]) != null && b >= b){a = c = b;break;}while(++i < n) if((b = array[i]) != null){if(a > b)a = b;if(c < b)c = b;}}else {while(++i < n) if((b = f.call(array, array[i], i)) != null && b >= b){a = c = b;break;}while(++i < n) if((b = f.call(array, array[i], i)) != null){if(a > b)a = b;if(c < b)c = b;}}return [a, c];};function d3_number(x){return x === null?NaN:+x;}function d3_numeric(x){return !isNaN(x);}d3.sum = function(array, f){var s=0, n=array.length, a, i=-1;if(arguments.length === 1){while(++i < n) if(d3_numeric(a = +array[i]))s += a;}else {while(++i < n) if(d3_numeric(a = +f.call(array, array[i], i)))s += a;}return s;};d3.mean = function(array, f){var s=0, n=array.length, a, i=-1, j=n;if(arguments.length === 1){while(++i < n) if(d3_numeric(a = d3_number(array[i])))s += a;else --j;}else {while(++i < n) if(d3_numeric(a = d3_number(f.call(array, array[i], i))))s += a;else --j;}if(j)return s / j;};d3.quantile = function(values, p){var H=(values.length - 1) * p + 1, h=Math.floor(H), v=+values[h - 1], e=H - h;return e?v + e * (values[h] - v):v;};d3.median = function(array, f){var numbers=[], n=array.length, a, i=-1;if(arguments.length === 1){while(++i < n) if(d3_numeric(a = d3_number(array[i])))numbers.push(a);}else {while(++i < n) if(d3_numeric(a = d3_number(f.call(array, array[i], i))))numbers.push(a);}if(numbers.length)return d3.quantile(numbers.sort(d3_ascending), 0.5);};d3.variance = function(array, f){var n=array.length, m=0, a, d, s=0, i=-1, j=0;if(arguments.length === 1){while(++i < n) {if(d3_numeric(a = d3_number(array[i]))){d = a - m;m += d / ++j;s += d * (a - m);}}}else {while(++i < n) {if(d3_numeric(a = d3_number(f.call(array, array[i], i)))){d = a - m;m += d / ++j;s += d * (a - m);}}}if(j > 1)return s / (j - 1);};d3.deviation = function(){var v=d3.variance.apply(this, arguments);return v?Math.sqrt(v):v;};function d3_bisector(compare){return {left:function left(a, x, lo, hi){if(arguments.length < 3)lo = 0;if(arguments.length < 4)hi = a.length;while(lo < hi) {var mid=lo + hi >>> 1;if(compare(a[mid], x) < 0)lo = mid + 1;else hi = mid;}return lo;}, right:function right(a, x, lo, hi){if(arguments.length < 3)lo = 0;if(arguments.length < 4)hi = a.length;while(lo < hi) {var mid=lo + hi >>> 1;if(compare(a[mid], x) > 0)hi = mid;else lo = mid + 1;}return lo;}};}var d3_bisect=d3_bisector(d3_ascending);d3.bisectLeft = d3_bisect.left;d3.bisect = d3.bisectRight = d3_bisect.right;d3.bisector = function(f){return d3_bisector(f.length === 1?function(d, x){return d3_ascending(f(d), x);}:f);};d3.shuffle = function(array, i0, i1){if((m = arguments.length) < 3){i1 = array.length;if(m < 2)i0 = 0;}var m=i1 - i0, t, i;while(m) {i = Math.random() * m-- | 0;t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;}return array;};d3.permute = function(array, indexes){var i=indexes.length, permutes=new Array(i);while(i--) permutes[i] = array[indexes[i]];return permutes;};d3.pairs = function(array){var i=0, n=array.length - 1, p0, p1=array[0], pairs=new Array(n < 0?0:n);while(i < n) pairs[i] = [p0 = p1, p1 = array[++i]];return pairs;};d3.zip = function(){if(!(n = arguments.length))return [];for(var i=-1, m=d3.min(arguments, d3_zipLength), zips=new Array(m); ++i < m;) {for(var j=-1, n, zip=zips[i] = new Array(n); ++j < n;) {zip[j] = arguments[j][i];}}return zips;};function d3_zipLength(d){return d.length;}d3.transpose = function(matrix){return d3.zip.apply(d3, matrix);};d3.keys = function(map){var keys=[];for(var key in map) keys.push(key);return keys;};d3.values = function(map){var values=[];for(var key in map) values.push(map[key]);return values;};d3.entries = function(map){var entries=[];for(var key in map) entries.push({key:key, value:map[key]});return entries;};d3.merge = function(arrays){var n=arrays.length, m, i=-1, j=0, merged, array;while(++i < n) j += arrays[i].length;merged = new Array(j);while(--n >= 0) {array = arrays[n];m = array.length;while(--m >= 0) {merged[--j] = array[m];}}return merged;};var abs=Math.abs;d3.range = function(start, stop, step){if(arguments.length < 3){step = 1;if(arguments.length < 2){stop = start;start = 0;}}if((stop - start) / step === Infinity)throw new Error("infinite range");var range=[], k=d3_range_integerScale(abs(step)), i=-1, j;start *= k, stop *= k, step *= k;if(step < 0)while((j = start + step * ++i) > stop) range.push(j / k);else while((j = start + step * ++i) < stop) range.push(j / k);return range;};function d3_range_integerScale(x){var k=1;while(x * k % 1) k *= 10;return k;}function d3_class(ctor, properties){for(var key in properties) {Object.defineProperty(ctor.prototype, key, {value:properties[key], enumerable:false});}}d3.map = function(object, f){var map=new d3_Map();if(object instanceof d3_Map){object.forEach(function(key, value){map.set(key, value);});}else if(Array.isArray(object)){var i=-1, n=object.length, o;if(arguments.length === 1)while(++i < n) map.set(i, object[i]);else while(++i < n) map.set(f.call(object, o = object[i], i), o);}else {for(var key in object) map.set(key, object[key]);}return map;};function d3_Map(){this._ = Object.create(null);}var d3_map_proto="__proto__", d3_map_zero="\u0000";d3_class(d3_Map, {has:d3_map_has, get:function get(key){return this._[d3_map_escape(key)];}, set:function set(key, value){return this._[d3_map_escape(key)] = value;}, remove:d3_map_remove, keys:d3_map_keys, values:function values(){var values=[];for(var key in this._) values.push(this._[key]);return values;}, entries:function entries(){var entries=[];for(var key in this._) entries.push({key:d3_map_unescape(key), value:this._[key]});return entries;}, size:d3_map_size, empty:d3_map_empty, forEach:function forEach(f){for(var key in this._) f.call(this, d3_map_unescape(key), this._[key]);}});function d3_map_escape(key){return (key += "") === d3_map_proto || key[0] === d3_map_zero?d3_map_zero + key:key;}function d3_map_unescape(key){return (key += "")[0] === d3_map_zero?key.slice(1):key;}function d3_map_has(key){return d3_map_escape(key) in this._;}function d3_map_remove(key){return (key = d3_map_escape(key)) in this._ && delete this._[key];}function d3_map_keys(){var keys=[];for(var key in this._) keys.push(d3_map_unescape(key));return keys;}function d3_map_size(){var size=0;for(var key in this._) ++size;return size;}function d3_map_empty(){for(var key in this._) return false;return true;}d3.nest = function(){var nest={}, keys=[], sortKeys=[], sortValues, rollup;function map(mapType, array, depth){if(depth >= keys.length)return rollup?rollup.call(nest, array):sortValues?array.sort(sortValues):array;var i=-1, n=array.length, key=keys[depth++], keyValue, object, setter, valuesByKey=new d3_Map(), values;while(++i < n) {if(values = valuesByKey.get(keyValue = key(object = array[i]))){values.push(object);}else {valuesByKey.set(keyValue, [object]);}}if(mapType){object = mapType();setter = function(keyValue, values){object.set(keyValue, map(mapType, values, depth));};}else {object = {};setter = function(keyValue, values){object[keyValue] = map(mapType, values, depth);};}valuesByKey.forEach(setter);return object;}function entries(map, depth){if(depth >= keys.length)return map;var array=[], sortKey=sortKeys[depth++];map.forEach(function(key, keyMap){array.push({key:key, values:entries(keyMap, depth)});});return sortKey?array.sort(function(a, b){return sortKey(a.key, b.key);}):array;}nest.map = function(array, mapType){return map(mapType, array, 0);};nest.entries = function(array){return entries(map(d3.map, array, 0), 0);};nest.key = function(d){keys.push(d);return nest;};nest.sortKeys = function(order){sortKeys[keys.length - 1] = order;return nest;};nest.sortValues = function(order){sortValues = order;return nest;};nest.rollup = function(f){rollup = f;return nest;};return nest;};d3.set = function(array){var set=new d3_Set();if(array)for(var i=0, n=array.length; i < n; ++i) set.add(array[i]);return set;};function d3_Set(){this._ = Object.create(null);}d3_class(d3_Set, {has:d3_map_has, add:function add(key){this._[d3_map_escape(key += "")] = true;return key;}, remove:d3_map_remove, values:d3_map_keys, size:d3_map_size, empty:d3_map_empty, forEach:function forEach(f){for(var key in this._) f.call(this, d3_map_unescape(key));}});d3.behavior = {};function d3_identity(d){return d;}d3.rebind = function(target, source){var i=1, n=arguments.length, method;while(++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);return target;};function d3_rebind(target, source, method){return function(){var value=method.apply(source, arguments);return value === source?target:value;};}function d3_vendorSymbol(object, name){if(name in object)return name;name = name.charAt(0).toUpperCase() + name.slice(1);for(var i=0, n=d3_vendorPrefixes.length; i < n; ++i) {var prefixName=d3_vendorPrefixes[i] + name;if(prefixName in object)return prefixName;}}var d3_vendorPrefixes=["webkit", "ms", "moz", "Moz", "o", "O"];function d3_noop(){}d3.dispatch = function(){var dispatch=new d3_dispatch(), i=-1, n=arguments.length;while(++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);return dispatch;};function d3_dispatch(){}d3_dispatch.prototype.on = function(type, listener){var i=type.indexOf("."), name="";if(i >= 0){name = type.slice(i + 1);type = type.slice(0, i);}if(type)return arguments.length < 2?this[type].on(name):this[type].on(name, listener);if(arguments.length === 2){if(listener == null)for(type in this) {if(this.hasOwnProperty(type))this[type].on(name, null);}return this;}};function d3_dispatch_event(dispatch){var listeners=[], listenerByName=new d3_Map();function event(){var z=listeners, i=-1, n=z.length, l;while(++i < n) if(l = z[i].on)l.apply(this, arguments);return dispatch;}event.on = function(name, listener){var l=listenerByName.get(name), i;if(arguments.length < 2)return l && l.on;if(l){l.on = null;listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));listenerByName.remove(name);}if(listener)listeners.push(listenerByName.set(name, {on:listener}));return dispatch;};return event;}d3.event = null;function d3_eventPreventDefault(){d3.event.preventDefault();}function d3_eventSource(){var e=d3.event, s;while(s = e.sourceEvent) e = s;return e;}function d3_eventDispatch(target){var dispatch=new d3_dispatch(), i=0, n=arguments.length;while(++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);dispatch.of = function(thiz, argumentz){return function(e1){try{var e0=e1.sourceEvent = d3.event;e1.target = target;d3.event = e1;dispatch[e1.type].apply(thiz, argumentz);}finally {d3.event = e0;}};};return dispatch;}d3.requote = function(s){return s.replace(d3_requote_re, "\\$&");};var d3_requote_re=/[\\\^\$\*\+\?\|\[\]\(\)\.\{\}]/g;var d3_subclass=({}).__proto__?function(object, prototype){object.__proto__ = prototype;}:function(object, prototype){for(var property in prototype) object[property] = prototype[property];};function d3_selection(groups){d3_subclass(groups, d3_selectionPrototype);return groups;}var d3_select=function d3_select(s, n){return n.querySelector(s);}, d3_selectAll=function d3_selectAll(s, n){return n.querySelectorAll(s);}, _d3_selectMatches=function d3_selectMatches(n, s){var d3_selectMatcher=n.matches || n[d3_vendorSymbol(n, "matchesSelector")];_d3_selectMatches = function(n, s){return d3_selectMatcher.call(n, s);};return _d3_selectMatches(n, s);};if(typeof Sizzle === "function"){d3_select = function(s, n){return Sizzle(s, n)[0] || null;};d3_selectAll = Sizzle;_d3_selectMatches = Sizzle.matchesSelector;}d3.selection = function(){return d3.select(d3_document.documentElement);};var d3_selectionPrototype=d3.selection.prototype = [];d3_selectionPrototype.select = function(selector){var subgroups=[], subgroup, subnode, group, node;selector = d3_selection_selector(selector);for(var j=-1, m=this.length; ++j < m;) {subgroups.push(subgroup = []);subgroup.parentNode = (group = this[j]).parentNode;for(var i=-1, n=group.length; ++i < n;) {if(node = group[i]){subgroup.push(subnode = selector.call(node, node.__data__, i, j));if(subnode && "__data__" in node)subnode.__data__ = node.__data__;}else {subgroup.push(null);}}}return d3_selection(subgroups);};function d3_selection_selector(selector){return typeof selector === "function"?selector:function(){return d3_select(selector, this);};}d3_selectionPrototype.selectAll = function(selector){var subgroups=[], subgroup, node;selector = d3_selection_selectorAll(selector);for(var j=-1, m=this.length; ++j < m;) {for(var group=this[j], i=-1, n=group.length; ++i < n;) {if(node = group[i]){subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));subgroup.parentNode = node;}}}return d3_selection(subgroups);};function d3_selection_selectorAll(selector){return typeof selector === "function"?selector:function(){return d3_selectAll(selector, this);};}var d3_nsPrefix={svg:"http://www.w3.org/2000/svg", xhtml:"http://www.w3.org/1999/xhtml", xlink:"http://www.w3.org/1999/xlink", xml:"http://www.w3.org/XML/1998/namespace", xmlns:"http://www.w3.org/2000/xmlns/"};d3.ns = {prefix:d3_nsPrefix, qualify:function qualify(name){var i=name.indexOf(":"), prefix=name;if(i >= 0){prefix = name.slice(0, i);name = name.slice(i + 1);}return d3_nsPrefix.hasOwnProperty(prefix)?{space:d3_nsPrefix[prefix], local:name}:name;}};d3_selectionPrototype.attr = function(name, value){if(arguments.length < 2){if(typeof name === "string"){var node=this.node();name = d3.ns.qualify(name);return name.local?node.getAttributeNS(name.space, name.local):node.getAttribute(name);}for(value in name) this.each(d3_selection_attr(value, name[value]));return this;}return this.each(d3_selection_attr(name, value));};function d3_selection_attr(name, value){name = d3.ns.qualify(name);function attrNull(){this.removeAttribute(name);}function attrNullNS(){this.removeAttributeNS(name.space, name.local);}function attrConstant(){this.setAttribute(name, value);}function attrConstantNS(){this.setAttributeNS(name.space, name.local, value);}function attrFunction(){var x=value.apply(this, arguments);if(x == null)this.removeAttribute(name);else this.setAttribute(name, x);}function attrFunctionNS(){var x=value.apply(this, arguments);if(x == null)this.removeAttributeNS(name.space, name.local);else this.setAttributeNS(name.space, name.local, x);}return value == null?name.local?attrNullNS:attrNull:typeof value === "function"?name.local?attrFunctionNS:attrFunction:name.local?attrConstantNS:attrConstant;}function d3_collapse(s){return s.trim().replace(/\s+/g, " ");}d3_selectionPrototype.classed = function(name, value){if(arguments.length < 2){if(typeof name === "string"){var node=this.node(), n=(name = d3_selection_classes(name)).length, i=-1;if(value = node.classList){while(++i < n) if(!value.contains(name[i]))return false;}else {value = node.getAttribute("class");while(++i < n) if(!d3_selection_classedRe(name[i]).test(value))return false;}return true;}for(value in name) this.each(d3_selection_classed(value, name[value]));return this;}return this.each(d3_selection_classed(name, value));};function d3_selection_classedRe(name){return new RegExp("(?:^|\\s+)" + d3.requote(name) + "(?:\\s+|$)", "g");}function d3_selection_classes(name){return (name + "").trim().split(/^|\s+/);}function d3_selection_classed(name, value){name = d3_selection_classes(name).map(d3_selection_classedName);var n=name.length;function classedConstant(){var i=-1;while(++i < n) name[i](this, value);}function classedFunction(){var i=-1, x=value.apply(this, arguments);while(++i < n) name[i](this, x);}return typeof value === "function"?classedFunction:classedConstant;}function d3_selection_classedName(name){var re=d3_selection_classedRe(name);return function(node, value){if(c = node.classList)return value?c.add(name):c.remove(name);var c=node.getAttribute("class") || "";if(value){re.lastIndex = 0;if(!re.test(c))node.setAttribute("class", d3_collapse(c + " " + name));}else {node.setAttribute("class", d3_collapse(c.replace(re, " ")));}};}d3_selectionPrototype.style = function(name, value, priority){var n=arguments.length;if(n < 3){if(typeof name !== "string"){if(n < 2)value = "";for(priority in name) this.each(d3_selection_style(priority, name[priority], value));return this;}if(n < 2){var node=this.node();return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);}priority = "";}return this.each(d3_selection_style(name, value, priority));};function d3_selection_style(name, value, priority){function styleNull(){this.style.removeProperty(name);}function styleConstant(){this.style.setProperty(name, value, priority);}function styleFunction(){var x=value.apply(this, arguments);if(x == null)this.style.removeProperty(name);else this.style.setProperty(name, x, priority);}return value == null?styleNull:typeof value === "function"?styleFunction:styleConstant;}d3_selectionPrototype.property = function(name, value){if(arguments.length < 2){if(typeof name === "string")return this.node()[name];for(value in name) this.each(d3_selection_property(value, name[value]));return this;}return this.each(d3_selection_property(name, value));};function d3_selection_property(name, value){function propertyNull(){delete this[name];}function propertyConstant(){this[name] = value;}function propertyFunction(){var x=value.apply(this, arguments);if(x == null)delete this[name];else this[name] = x;}return value == null?propertyNull:typeof value === "function"?propertyFunction:propertyConstant;}d3_selectionPrototype.text = function(value){return arguments.length?this.each(typeof value === "function"?function(){var v=value.apply(this, arguments);this.textContent = v == null?"":v;}:value == null?function(){this.textContent = "";}:function(){this.textContent = value;}):this.node().textContent;};d3_selectionPrototype.html = function(value){return arguments.length?this.each(typeof value === "function"?function(){var v=value.apply(this, arguments);this.innerHTML = v == null?"":v;}:value == null?function(){this.innerHTML = "";}:function(){this.innerHTML = value;}):this.node().innerHTML;};d3_selectionPrototype.append = function(name){name = d3_selection_creator(name);return this.select(function(){return this.appendChild(name.apply(this, arguments));});};function d3_selection_creator(name){function create(){var document=this.ownerDocument, namespace=this.namespaceURI;return namespace?document.createElementNS(namespace, name):document.createElement(name);}function createNS(){return this.ownerDocument.createElementNS(name.space, name.local);}return typeof name === "function"?name:(name = d3.ns.qualify(name)).local?createNS:create;}d3_selectionPrototype.insert = function(name, before){name = d3_selection_creator(name);before = d3_selection_selector(before);return this.select(function(){return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);});};d3_selectionPrototype.remove = function(){return this.each(d3_selectionRemove);};function d3_selectionRemove(){var parent=this.parentNode;if(parent)parent.removeChild(this);}d3_selectionPrototype.data = function(value, key){var i=-1, n=this.length, group, node;if(!arguments.length){value = new Array(n = (group = this[0]).length);while(++i < n) {if(node = group[i]){value[i] = node.__data__;}}return value;}function bind(group, groupData){var i, n=group.length, m=groupData.length, n0=Math.min(n, m), updateNodes=new Array(m), enterNodes=new Array(m), exitNodes=new Array(n), node, nodeData;if(key){var nodeByKeyValue=new d3_Map(), keyValues=new Array(n), keyValue;for(i = -1; ++i < n;) {if(nodeByKeyValue.has(keyValue = key.call(node = group[i], node.__data__, i))){exitNodes[i] = node;}else {nodeByKeyValue.set(keyValue, node);}keyValues[i] = keyValue;}for(i = -1; ++i < m;) {if(!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))){enterNodes[i] = d3_selection_dataNode(nodeData);}else if(node !== true){updateNodes[i] = node;node.__data__ = nodeData;}nodeByKeyValue.set(keyValue, true);}for(i = -1; ++i < n;) {if(nodeByKeyValue.get(keyValues[i]) !== true){exitNodes[i] = group[i];}}}else {for(i = -1; ++i < n0;) {node = group[i];nodeData = groupData[i];if(node){node.__data__ = nodeData;updateNodes[i] = node;}else {enterNodes[i] = d3_selection_dataNode(nodeData);}}for(; i < m; ++i) {enterNodes[i] = d3_selection_dataNode(groupData[i]);}for(; i < n; ++i) {exitNodes[i] = group[i];}}enterNodes.update = updateNodes;enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;enter.push(enterNodes);update.push(updateNodes);exit.push(exitNodes);}var enter=d3_selection_enter([]), update=d3_selection([]), exit=d3_selection([]);if(typeof value === "function"){while(++i < n) {bind(group = this[i], value.call(group, group.parentNode.__data__, i));}}else {while(++i < n) {bind(group = this[i], value);}}update.enter = function(){return enter;};update.exit = function(){return exit;};return update;};function d3_selection_dataNode(data){return {__data__:data};}d3_selectionPrototype.datum = function(value){return arguments.length?this.property("__data__", value):this.property("__data__");};d3_selectionPrototype.filter = function(filter){var subgroups=[], subgroup, group, node;if(typeof filter !== "function")filter = d3_selection_filter(filter);for(var j=0, m=this.length; j < m; j++) {subgroups.push(subgroup = []);subgroup.parentNode = (group = this[j]).parentNode;for(var i=0, n=group.length; i < n; i++) {if((node = group[i]) && filter.call(node, node.__data__, i, j)){subgroup.push(node);}}}return d3_selection(subgroups);};function d3_selection_filter(selector){return function(){return _d3_selectMatches(this, selector);};}d3_selectionPrototype.order = function(){for(var j=-1, m=this.length; ++j < m;) {for(var group=this[j], i=group.length - 1, next=group[i], node; --i >= 0;) {if(node = group[i]){if(next && next !== node.nextSibling)next.parentNode.insertBefore(node, next);next = node;}}}return this;};d3_selectionPrototype.sort = function(comparator){comparator = d3_selection_sortComparator.apply(this, arguments);for(var j=-1, m=this.length; ++j < m;) this[j].sort(comparator);return this.order();};function d3_selection_sortComparator(comparator){if(!arguments.length)comparator = d3_ascending;return function(a, b){return a && b?comparator(a.__data__, b.__data__):!a - !b;};}d3_selectionPrototype.each = function(callback){return d3_selection_each(this, function(node, i, j){callback.call(node, node.__data__, i, j);});};function d3_selection_each(groups, callback){for(var j=0, m=groups.length; j < m; j++) {for(var group=groups[j], i=0, n=group.length, node; i < n; i++) {if(node = group[i])callback(node, i, j);}}return groups;}d3_selectionPrototype.call = function(callback){var args=d3_array(arguments);callback.apply(args[0] = this, args);return this;};d3_selectionPrototype.empty = function(){return !this.node();};d3_selectionPrototype.node = function(){for(var j=0, m=this.length; j < m; j++) {for(var group=this[j], i=0, n=group.length; i < n; i++) {var node=group[i];if(node)return node;}}return null;};d3_selectionPrototype.size = function(){var n=0;d3_selection_each(this, function(){++n;});return n;};function d3_selection_enter(selection){d3_subclass(selection, d3_selection_enterPrototype);return selection;}var d3_selection_enterPrototype=[];d3.selection.enter = d3_selection_enter;d3.selection.enter.prototype = d3_selection_enterPrototype;d3_selection_enterPrototype.append = d3_selectionPrototype.append;d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;d3_selection_enterPrototype.node = d3_selectionPrototype.node;d3_selection_enterPrototype.call = d3_selectionPrototype.call;d3_selection_enterPrototype.size = d3_selectionPrototype.size;d3_selection_enterPrototype.select = function(selector){var subgroups=[], subgroup, subnode, upgroup, group, node;for(var j=-1, m=this.length; ++j < m;) {upgroup = (group = this[j]).update;subgroups.push(subgroup = []);subgroup.parentNode = group.parentNode;for(var i=-1, n=group.length; ++i < n;) {if(node = group[i]){subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));subnode.__data__ = node.__data__;}else {subgroup.push(null);}}}return d3_selection(subgroups);};d3_selection_enterPrototype.insert = function(name, before){if(arguments.length < 2)before = d3_selection_enterInsertBefore(this);return d3_selectionPrototype.insert.call(this, name, before);};function d3_selection_enterInsertBefore(enter){var i0, j0;return function(d, i, j){var group=enter[j].update, n=group.length, node;if(j != j0)j0 = j, i0 = 0;if(i >= i0)i0 = i + 1;while(!(node = group[i0]) && ++i0 < n);return node;};}d3.select = function(node){var group;if(typeof node === "string"){group = [d3_select(node, d3_document)];group.parentNode = d3_document.documentElement;}else {group = [node];group.parentNode = d3_documentElement(node);}return d3_selection([group]);};d3.selectAll = function(nodes){var group;if(typeof nodes === "string"){group = d3_array(d3_selectAll(nodes, d3_document));group.parentNode = d3_document.documentElement;}else {group = nodes;group.parentNode = null;}return d3_selection([group]);};d3_selectionPrototype.on = function(type, listener, capture){var n=arguments.length;if(n < 3){if(typeof type !== "string"){if(n < 2)listener = false;for(capture in type) this.each(d3_selection_on(capture, type[capture], listener));return this;}if(n < 2)return (n = this.node()["__on" + type]) && n._;capture = false;}return this.each(d3_selection_on(type, listener, capture));};function d3_selection_on(type, listener, capture){var name="__on" + type, i=type.indexOf("."), wrap=d3_selection_onListener;if(i > 0)type = type.slice(0, i);var filter=d3_selection_onFilters.get(type);if(filter)type = filter, wrap = d3_selection_onFilter;function onRemove(){var l=this[name];if(l){this.removeEventListener(type, l, l.$);delete this[name];}}function onAdd(){var l=wrap(listener, d3_array(arguments));onRemove.call(this);this.addEventListener(type, this[name] = l, l.$ = capture);l._ = listener;}function removeAll(){var re=new RegExp("^__on([^.]+)" + d3.requote(type) + "$"), match;for(var name in this) {if(match = name.match(re)){var l=this[name];this.removeEventListener(match[1], l, l.$);delete this[name];}}}return i?listener?onAdd:onRemove:listener?d3_noop:removeAll;}var d3_selection_onFilters=d3.map({mouseenter:"mouseover", mouseleave:"mouseout"});if(d3_document){d3_selection_onFilters.forEach(function(k){if("on" + k in d3_document)d3_selection_onFilters.remove(k);});}function d3_selection_onListener(listener, argumentz){return function(e){var o=d3.event;d3.event = e;argumentz[0] = this.__data__;try{listener.apply(this, argumentz);}finally {d3.event = o;}};}function d3_selection_onFilter(listener, argumentz){var l=d3_selection_onListener(listener, argumentz);return function(e){var target=this, related=e.relatedTarget;if(!related || related !== target && !(related.compareDocumentPosition(target) & 8)){l.call(target, e);}};}var d3_event_dragSelect, d3_event_dragId=0;function d3_event_dragSuppress(node){var name=".dragsuppress-" + ++d3_event_dragId, click="click" + name, w=d3.select(d3_window(node)).on("touchmove" + name, d3_eventPreventDefault).on("dragstart" + name, d3_eventPreventDefault).on("selectstart" + name, d3_eventPreventDefault);if(d3_event_dragSelect == null){d3_event_dragSelect = "onselectstart" in node?false:d3_vendorSymbol(node.style, "userSelect");}if(d3_event_dragSelect){var style=d3_documentElement(node).style, select=style[d3_event_dragSelect];style[d3_event_dragSelect] = "none";}return function(suppressClick){w.on(name, null);if(d3_event_dragSelect)style[d3_event_dragSelect] = select;if(suppressClick){var off=function off(){w.on(click, null);};w.on(click, function(){d3_eventPreventDefault();off();}, true);setTimeout(off, 0);}};}d3.mouse = function(container){return d3_mousePoint(container, d3_eventSource());};var d3_mouse_bug44083=this.navigator && /WebKit/.test(this.navigator.userAgent)?-1:0;function d3_mousePoint(container, e){if(e.changedTouches)e = e.changedTouches[0];var svg=container.ownerSVGElement || container;if(svg.createSVGPoint){var point=svg.createSVGPoint();if(d3_mouse_bug44083 < 0){var window=d3_window(container);if(window.scrollX || window.scrollY){svg = d3.select("body").append("svg").style({position:"absolute", top:0, left:0, margin:0, padding:0, border:"none"}, "important");var ctm=svg[0][0].getScreenCTM();d3_mouse_bug44083 = !(ctm.f || ctm.e);svg.remove();}}if(d3_mouse_bug44083)point.x = e.pageX, point.y = e.pageY;else point.x = e.clientX, point.y = e.clientY;point = point.matrixTransform(container.getScreenCTM().inverse());return [point.x, point.y];}var rect=container.getBoundingClientRect();return [e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop];}d3.touch = function(container, touches, identifier){if(arguments.length < 3)identifier = touches, touches = d3_eventSource().changedTouches;if(touches)for(var i=0, n=touches.length, touch; i < n; ++i) {if((touch = touches[i]).identifier === identifier){return d3_mousePoint(container, touch);}}};d3.behavior.drag = function(){var event=d3_eventDispatch(drag, "drag", "dragstart", "dragend"), origin=null, mousedown=dragstart(d3_noop, d3.mouse, d3_window, "mousemove", "mouseup"), touchstart=dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, "touchmove", "touchend");function drag(){this.on("mousedown.drag", mousedown).on("touchstart.drag", touchstart);}function dragstart(id, position, subject, move, end){return function(){var that=this, target=d3.event.target, parent=that.parentNode, dispatch=event.of(that, arguments), dragged=0, dragId=id(), dragName=".drag" + (dragId == null?"":"-" + dragId), dragOffset, dragSubject=d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore=d3_event_dragSuppress(target), position0=position(parent, dragId);if(origin){dragOffset = origin.apply(that, arguments);dragOffset = [dragOffset.x - position0[0], dragOffset.y - position0[1]];}else {dragOffset = [0, 0];}dispatch({type:"dragstart"});function moved(){var position1=position(parent, dragId), dx, dy;if(!position1)return;dx = position1[0] - position0[0];dy = position1[1] - position0[1];dragged |= dx | dy;position0 = position1;dispatch({type:"drag", x:position1[0] + dragOffset[0], y:position1[1] + dragOffset[1], dx:dx, dy:dy});}function ended(){if(!position(parent, dragId))return;dragSubject.on(move + dragName, null).on(end + dragName, null);dragRestore(dragged && d3.event.target === target);dispatch({type:"dragend"});}};}drag.origin = function(x){if(!arguments.length)return origin;origin = x;return drag;};return d3.rebind(drag, event, "on");};function d3_behavior_dragTouchId(){return d3.event.changedTouches[0].identifier;}d3.touches = function(container, touches){if(arguments.length < 2)touches = d3_eventSource().touches;return touches?d3_array(touches).map(function(touch){var point=d3_mousePoint(container, touch);point.identifier = touch.identifier;return point;}):[];};var ε=0.000001, ε2=ε * ε, π=Math.PI, τ=2 * π, τε=τ - ε, halfπ=π / 2, d3_radians=π / 180, d3_degrees=180 / π;function d3_sgn(x){return x > 0?1:x < 0?-1:0;}function d3_cross2d(a, b, c){return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);}function d3_acos(x){return x > 1?0:x < -1?π:Math.acos(x);}function d3_asin(x){return x > 1?halfπ:x < -1?-halfπ:Math.asin(x);}function d3_sinh(x){return ((x = Math.exp(x)) - 1 / x) / 2;}function d3_cosh(x){return ((x = Math.exp(x)) + 1 / x) / 2;}function d3_tanh(x){return ((x = Math.exp(2 * x)) - 1) / (x + 1);}function d3_haversin(x){return (x = Math.sin(x / 2)) * x;}var ρ=Math.SQRT2, ρ2=2, ρ4=4;d3.interpolateZoom = function(p0, p1){var ux0=p0[0], uy0=p0[1], w0=p0[2], ux1=p1[0], uy1=p1[1], w1=p1[2];var dx=ux1 - ux0, dy=uy1 - uy0, d2=dx * dx + dy * dy, d1=Math.sqrt(d2), b0=(w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1=(w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0=Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1=Math.log(Math.sqrt(b1 * b1 + 1) - b1), dr=r1 - r0, S=(dr || Math.log(w1 / w0)) / ρ;function interpolate(t){var s=t * S;if(dr){var coshr0=d3_cosh(r0), u=w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));return [ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0)];}return [ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s)];}interpolate.duration = S * 1000;return interpolate;};d3.behavior.zoom = function(){var view={x:0, y:0, k:1}, translate0, center0, center, size=[960, 500], scaleExtent=d3_behavior_zoomInfinity, duration=250, zooming=0, mousedown="mousedown.zoom", mousemove="mousemove.zoom", mouseup="mouseup.zoom", mousewheelTimer, touchstart="touchstart.zoom", touchtime, event=d3_eventDispatch(zoom, "zoomstart", "zoom", "zoomend"), x0, x1, y0, y1;if(!d3_behavior_zoomWheel){d3_behavior_zoomWheel = "onwheel" in d3_document?(d3_behavior_zoomDelta = function(){return -d3.event.deltaY * (d3.event.deltaMode?120:1);}, "wheel"):"onmousewheel" in d3_document?(d3_behavior_zoomDelta = function(){return d3.event.wheelDelta;}, "mousewheel"):(d3_behavior_zoomDelta = function(){return -d3.event.detail;}, "MozMousePixelScroll");}function zoom(g){g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + ".zoom", mousewheeled).on("dblclick.zoom", dblclicked).on(touchstart, touchstarted);}zoom.event = function(g){g.each(function(){var dispatch=event.of(this, arguments), view1=view;if(d3_transitionInheritId){d3.select(this).transition().each("start.zoom", function(){view = this.__chart__ || {x:0, y:0, k:1};zoomstarted(dispatch);}).tween("zoom:zoom", function(){var dx=size[0], dy=size[1], cx=center0?center0[0]:dx / 2, cy=center0?center0[1]:dy / 2, i=d3.interpolateZoom([(cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k], [(cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k]);return function(t){var l=i(t), k=dx / l[2];this.__chart__ = view = {x:cx - l[0] * k, y:cy - l[1] * k, k:k};zoomed(dispatch);};}).each("interrupt.zoom", function(){zoomended(dispatch);}).each("end.zoom", function(){zoomended(dispatch);});}else {this.__chart__ = view;zoomstarted(dispatch);zoomed(dispatch);zoomended(dispatch);}});};zoom.translate = function(_){if(!arguments.length)return [view.x, view.y];view = {x:+_[0], y:+_[1], k:view.k};rescale();return zoom;};zoom.scale = function(_){if(!arguments.length)return view.k;view = {x:view.x, y:view.y, k:+_};rescale();return zoom;};zoom.scaleExtent = function(_){if(!arguments.length)return scaleExtent;scaleExtent = _ == null?d3_behavior_zoomInfinity:[+_[0], +_[1]];return zoom;};zoom.center = function(_){if(!arguments.length)return center;center = _ && [+_[0], +_[1]];return zoom;};zoom.size = function(_){if(!arguments.length)return size;size = _ && [+_[0], +_[1]];return zoom;};zoom.duration = function(_){if(!arguments.length)return duration;duration = +_;return zoom;};zoom.x = function(z){if(!arguments.length)return x1;x1 = z;x0 = z.copy();view = {x:0, y:0, k:1};return zoom;};zoom.y = function(z){if(!arguments.length)return y1;y1 = z;y0 = z.copy();view = {x:0, y:0, k:1};return zoom;};function location(p){return [(p[0] - view.x) / view.k, (p[1] - view.y) / view.k];}function point(l){return [l[0] * view.k + view.x, l[1] * view.k + view.y];}function scaleTo(s){view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));}function translateTo(p, l){l = point(l);view.x += p[0] - l[0];view.y += p[1] - l[1];}function zoomTo(that, p, l, k){that.__chart__ = {x:view.x, y:view.y, k:view.k};scaleTo(Math.pow(2, k));translateTo(center0 = p, l);that = d3.select(that);if(duration > 0)that = that.transition().duration(duration);that.call(zoom.event);}function rescale(){if(x1)x1.domain(x0.range().map(function(x){return (x - view.x) / view.k;}).map(x0.invert));if(y1)y1.domain(y0.range().map(function(y){return (y - view.y) / view.k;}).map(y0.invert));}function zoomstarted(dispatch){if(! zooming++)dispatch({type:"zoomstart"});}function zoomed(dispatch){rescale();dispatch({type:"zoom", scale:view.k, translate:[view.x, view.y]});}function zoomended(dispatch){if(! --zooming)dispatch({type:"zoomend"});center0 = null;}function mousedowned(){var that=this, target=d3.event.target, dispatch=event.of(that, arguments), dragged=0, subject=d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0=location(d3.mouse(that)), dragRestore=d3_event_dragSuppress(that);d3_selection_interrupt.call(that);zoomstarted(dispatch);function moved(){dragged = 1;translateTo(d3.mouse(that), location0);zoomed(dispatch);}function ended(){subject.on(mousemove, null).on(mouseup, null);dragRestore(dragged && d3.event.target === target);zoomended(dispatch);}}function touchstarted(){var that=this, dispatch=event.of(that, arguments), locations0={}, distance0=0, scale0, zoomName=".zoom-" + d3.event.changedTouches[0].identifier, touchmove="touchmove" + zoomName, touchend="touchend" + zoomName, targets=[], subject=d3.select(that), dragRestore=d3_event_dragSuppress(that);started();zoomstarted(dispatch);subject.on(mousedown, null).on(touchstart, started);function relocate(){var touches=d3.touches(that);scale0 = view.k;touches.forEach(function(t){if(t.identifier in locations0)locations0[t.identifier] = location(t);});return touches;}function started(){var target=d3.event.target;d3.select(target).on(touchmove, moved).on(touchend, ended);targets.push(target);var changed=d3.event.changedTouches;for(var i=0, n=changed.length; i < n; ++i) {locations0[changed[i].identifier] = null;}var touches=relocate(), now=Date.now();if(touches.length === 1){if(now - touchtime < 500){var p=touches[0];zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);d3_eventPreventDefault();}touchtime = now;}else if(touches.length > 1){var p=touches[0], q=touches[1], dx=p[0] - q[0], dy=p[1] - q[1];distance0 = dx * dx + dy * dy;}}function moved(){var touches=d3.touches(that), p0, l0, p1, l1;d3_selection_interrupt.call(that);for(var i=0, n=touches.length; i < n; ++i, l1 = null) {p1 = touches[i];if(l1 = locations0[p1.identifier]){if(l0)break;p0 = p1, l0 = l1;}}if(l1){var distance1=(distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1=distance0 && Math.sqrt(distance1 / distance0);p0 = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];l0 = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];scaleTo(scale1 * scale0);}touchtime = null;translateTo(p0, l0);zoomed(dispatch);}function ended(){if(d3.event.touches.length){var changed=d3.event.changedTouches;for(var i=0, n=changed.length; i < n; ++i) {delete locations0[changed[i].identifier];}for(var identifier in locations0) {return void relocate();}}d3.selectAll(targets).on(zoomName, null);subject.on(mousedown, mousedowned).on(touchstart, touchstarted);dragRestore();zoomended(dispatch);}}function mousewheeled(){var dispatch=event.of(this, arguments);if(mousewheelTimer)clearTimeout(mousewheelTimer);else translate0 = location(center0 = center || d3.mouse(this)), d3_selection_interrupt.call(this), zoomstarted(dispatch);mousewheelTimer = setTimeout(function(){mousewheelTimer = null;zoomended(dispatch);}, 50);d3_eventPreventDefault();scaleTo(Math.pow(2, d3_behavior_zoomDelta() * 0.002) * view.k);translateTo(center0, translate0);zoomed(dispatch);}function dblclicked(){var p=d3.mouse(this), k=Math.log(view.k) / Math.LN2;zoomTo(this, p, location(p), d3.event.shiftKey?Math.ceil(k) - 1:Math.floor(k) + 1);}return d3.rebind(zoom, event, "on");};var d3_behavior_zoomInfinity=[0, Infinity], d3_behavior_zoomDelta, d3_behavior_zoomWheel;d3.color = d3_color;function d3_color(){}d3_color.prototype.toString = function(){return this.rgb() + "";};d3.hsl = d3_hsl;function d3_hsl(h, s, l){return this instanceof d3_hsl?void (this.h = +h, this.s = +s, this.l = +l):arguments.length < 2?h instanceof d3_hsl?new d3_hsl(h.h, h.s, h.l):d3_rgb_parse("" + h, d3_rgb_hsl, d3_hsl):new d3_hsl(h, s, l);}var d3_hslPrototype=d3_hsl.prototype = new d3_color();d3_hslPrototype.brighter = function(k){k = Math.pow(0.7, arguments.length?k:1);return new d3_hsl(this.h, this.s, this.l / k);};d3_hslPrototype.darker = function(k){k = Math.pow(0.7, arguments.length?k:1);return new d3_hsl(this.h, this.s, k * this.l);};d3_hslPrototype.rgb = function(){return d3_hsl_rgb(this.h, this.s, this.l);};function d3_hsl_rgb(h, s, l){var m1, m2;h = isNaN(h)?0:(h %= 360) < 0?h + 360:h;s = isNaN(s)?0:s < 0?0:s > 1?1:s;l = l < 0?0:l > 1?1:l;m2 = l <= 0.5?l * (1 + s):l + s - l * s;m1 = 2 * l - m2;function v(h){if(h > 360)h -= 360;else if(h < 0)h += 360;if(h < 60)return m1 + (m2 - m1) * h / 60;if(h < 180)return m2;if(h < 240)return m1 + (m2 - m1) * (240 - h) / 60;return m1;}function vv(h){return Math.round(v(h) * 255);}return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));}d3.hcl = d3_hcl;function d3_hcl(h, c, l){return this instanceof d3_hcl?void (this.h = +h, this.c = +c, this.l = +l):arguments.length < 2?h instanceof d3_hcl?new d3_hcl(h.h, h.c, h.l):h instanceof d3_lab?d3_lab_hcl(h.l, h.a, h.b):d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b):new d3_hcl(h, c, l);}var d3_hclPrototype=d3_hcl.prototype = new d3_color();d3_hclPrototype.brighter = function(k){return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length?k:1)));};d3_hclPrototype.darker = function(k){return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length?k:1)));};d3_hclPrototype.rgb = function(){return d3_hcl_lab(this.h, this.c, this.l).rgb();};function d3_hcl_lab(h, c, l){if(isNaN(h))h = 0;if(isNaN(c))c = 0;return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);}d3.lab = d3_lab;function d3_lab(l, a, b){return this instanceof d3_lab?void (this.l = +l, this.a = +a, this.b = +b):arguments.length < 2?l instanceof d3_lab?new d3_lab(l.l, l.a, l.b):l instanceof d3_hcl?d3_hcl_lab(l.h, l.c, l.l):d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b):new d3_lab(l, a, b);}var d3_lab_K=18;var d3_lab_X=0.95047, d3_lab_Y=1, d3_lab_Z=1.08883;var d3_labPrototype=d3_lab.prototype = new d3_color();d3_labPrototype.brighter = function(k){return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length?k:1)), this.a, this.b);};d3_labPrototype.darker = function(k){return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length?k:1)), this.a, this.b);};d3_labPrototype.rgb = function(){return d3_lab_rgb(this.l, this.a, this.b);};function d3_lab_rgb(l, a, b){var y=(l + 16) / 116, x=y + a / 500, z=y - b / 200;x = d3_lab_xyz(x) * d3_lab_X;y = d3_lab_xyz(y) * d3_lab_Y;z = d3_lab_xyz(z) * d3_lab_Z;return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z), d3_xyz_rgb(-0.969266 * x + 1.8760108 * y + 0.041556 * z), d3_xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z));}function d3_lab_hcl(l, a, b){return l > 0?new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l):new d3_hcl(NaN, NaN, l);}function d3_lab_xyz(x){return x > 0.206893034?x * x * x:(x - 4 / 29) / 7.787037;}function d3_xyz_lab(x){return x > 0.008856?Math.pow(x, 1 / 3):7.787037 * x + 4 / 29;}function d3_xyz_rgb(r){return Math.round(255 * (r <= 0.00304?12.92 * r:1.055 * Math.pow(r, 1 / 2.4) - 0.055));}d3.rgb = d3_rgb;function d3_rgb(r, g, b){return this instanceof d3_rgb?void (this.r = ~ ~r, this.g = ~ ~g, this.b = ~ ~b):arguments.length < 2?r instanceof d3_rgb?new d3_rgb(r.r, r.g, r.b):d3_rgb_parse("" + r, d3_rgb, d3_hsl_rgb):new d3_rgb(r, g, b);}function d3_rgbNumber(value){return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);}function d3_rgbString(value){return d3_rgbNumber(value) + "";}var d3_rgbPrototype=d3_rgb.prototype = new d3_color();d3_rgbPrototype.brighter = function(k){k = Math.pow(0.7, arguments.length?k:1);var r=this.r, g=this.g, b=this.b, i=30;if(!r && !g && !b)return new d3_rgb(i, i, i);if(r && r < i)r = i;if(g && g < i)g = i;if(b && b < i)b = i;return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));};d3_rgbPrototype.darker = function(k){k = Math.pow(0.7, arguments.length?k:1);return new d3_rgb(k * this.r, k * this.g, k * this.b);};d3_rgbPrototype.hsl = function(){return d3_rgb_hsl(this.r, this.g, this.b);};d3_rgbPrototype.toString = function(){return "#" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);};function d3_rgb_hex(v){return v < 16?"0" + Math.max(0, v).toString(16):Math.min(255, v).toString(16);}function d3_rgb_parse(format, rgb, hsl){var r=0, g=0, b=0, m1, m2, color;m1 = /([a-z]+)\((.*)\)/i.exec(format);if(m1){m2 = m1[2].split(",");switch(m1[1]){case "hsl":{return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);}case "rgb":{return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));}}}if(color = d3_rgb_names.get(format.toLowerCase())){return rgb(color.r, color.g, color.b);}if(format != null && format.charAt(0) === "#" && !isNaN(color = parseInt(format.slice(1), 16))){if(format.length === 4){r = (color & 3840) >> 4;r = r >> 4 | r;g = color & 240;g = g >> 4 | g;b = color & 15;b = b << 4 | b;}else if(format.length === 7){r = (color & 16711680) >> 16;g = (color & 65280) >> 8;b = color & 255;}}return rgb(r, g, b);}function d3_rgb_hsl(r, g, b){var min=Math.min(r /= 255, g /= 255, b /= 255), max=Math.max(r, g, b), d=max - min, h, s, l=(max + min) / 2;if(d){s = l < 0.5?d / (max + min):d / (2 - max - min);if(r == max)h = (g - b) / d + (g < b?6:0);else if(g == max)h = (b - r) / d + 2;else h = (r - g) / d + 4;h *= 60;}else {h = NaN;s = l > 0 && l < 1?0:h;}return new d3_hsl(h, s, l);}function d3_rgb_lab(r, g, b){r = d3_rgb_xyz(r);g = d3_rgb_xyz(g);b = d3_rgb_xyz(b);var x=d3_xyz_lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / d3_lab_X), y=d3_xyz_lab((0.2126729 * r + 0.7151522 * g + 0.072175 * b) / d3_lab_Y), z=d3_xyz_lab((0.0193339 * r + 0.119192 * g + 0.9503041 * b) / d3_lab_Z);return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));}function d3_rgb_xyz(r){return (r /= 255) <= 0.04045?r / 12.92:Math.pow((r + 0.055) / 1.055, 2.4);}function d3_rgb_parseNumber(c){var f=parseFloat(c);return c.charAt(c.length - 1) === "%"?Math.round(f * 2.55):f;}var d3_rgb_names=d3.map({aliceblue:15792383, antiquewhite:16444375, aqua:65535, aquamarine:8388564, azure:15794175, beige:16119260, bisque:16770244, black:0, blanchedalmond:16772045, blue:255, blueviolet:9055202, brown:10824234, burlywood:14596231, cadetblue:6266528, chartreuse:8388352, chocolate:13789470, coral:16744272, cornflowerblue:6591981, cornsilk:16775388, crimson:14423100, cyan:65535, darkblue:139, darkcyan:35723, darkgoldenrod:12092939, darkgray:11119017, darkgreen:25600, darkgrey:11119017, darkkhaki:12433259, darkmagenta:9109643, darkolivegreen:5597999, darkorange:16747520, darkorchid:10040012, darkred:9109504, darksalmon:15308410, darkseagreen:9419919, darkslateblue:4734347, darkslategray:3100495, darkslategrey:3100495, darkturquoise:52945, darkviolet:9699539, deeppink:16716947, deepskyblue:49151, dimgray:6908265, dimgrey:6908265, dodgerblue:2003199, firebrick:11674146, floralwhite:16775920, forestgreen:2263842, fuchsia:16711935, gainsboro:14474460, ghostwhite:16316671, gold:16766720, goldenrod:14329120, gray:8421504, green:32768, greenyellow:11403055, grey:8421504, honeydew:15794160, hotpink:16738740, indianred:13458524, indigo:4915330, ivory:16777200, khaki:15787660, lavender:15132410, lavenderblush:16773365, lawngreen:8190976, lemonchiffon:16775885, lightblue:11393254, lightcoral:15761536, lightcyan:14745599, lightgoldenrodyellow:16448210, lightgray:13882323, lightgreen:9498256, lightgrey:13882323, lightpink:16758465, lightsalmon:16752762, lightseagreen:2142890, lightskyblue:8900346, lightslategray:7833753, lightslategrey:7833753, lightsteelblue:11584734, lightyellow:16777184, lime:65280, limegreen:3329330, linen:16445670, magenta:16711935, maroon:8388608, mediumaquamarine:6737322, mediumblue:205, mediumorchid:12211667, mediumpurple:9662683, mediumseagreen:3978097, mediumslateblue:8087790, mediumspringgreen:64154, mediumturquoise:4772300, mediumvioletred:13047173, midnightblue:1644912, mintcream:16121850, mistyrose:16770273, moccasin:16770229, navajowhite:16768685, navy:128, oldlace:16643558, olive:8421376, olivedrab:7048739, orange:16753920, orangered:16729344, orchid:14315734, palegoldenrod:15657130, palegreen:10025880, paleturquoise:11529966, palevioletred:14381203, papayawhip:16773077, peachpuff:16767673, peru:13468991, pink:16761035, plum:14524637, powderblue:11591910, purple:8388736, rebeccapurple:6697881, red:16711680, rosybrown:12357519, royalblue:4286945, saddlebrown:9127187, salmon:16416882, sandybrown:16032864, seagreen:3050327, seashell:16774638, sienna:10506797, silver:12632256, skyblue:8900331, slateblue:6970061, slategray:7372944, slategrey:7372944, snow:16775930, springgreen:65407, steelblue:4620980, tan:13808780, teal:32896, thistle:14204888, tomato:16737095, turquoise:4251856, violet:15631086, wheat:16113331, white:16777215, whitesmoke:16119285, yellow:16776960, yellowgreen:10145074});d3_rgb_names.forEach(function(key, value){d3_rgb_names.set(key, d3_rgbNumber(value));});function d3_functor(v){return typeof v === "function"?v:function(){return v;};}d3.functor = d3_functor;d3.xhr = d3_xhrType(d3_identity);function d3_xhrType(response){return function(url, mimeType, callback){if(arguments.length === 2 && typeof mimeType === "function")callback = mimeType, mimeType = null;return d3_xhr(url, mimeType, response, callback);};}function d3_xhr(url, mimeType, response, callback){var xhr={}, dispatch=d3.dispatch("beforesend", "progress", "load", "error"), headers={}, request=new XMLHttpRequest(), responseType=null;if(this.XDomainRequest && !("withCredentials" in request) && /^(http(s)?:)?\/\//.test(url))request = new XDomainRequest();"onload" in request?request.onload = request.onerror = respond:request.onreadystatechange = function(){request.readyState > 3 && respond();};function respond(){var status=request.status, result;if(!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304){try{result = response.call(xhr, request);}catch(e) {dispatch.error.call(xhr, e);return;}dispatch.load.call(xhr, result);}else {dispatch.error.call(xhr, request);}}request.onprogress = function(event){var o=d3.event;d3.event = event;try{dispatch.progress.call(xhr, request);}finally {d3.event = o;}};xhr.header = function(name, value){name = (name + "").toLowerCase();if(arguments.length < 2)return headers[name];if(value == null)delete headers[name];else headers[name] = value + "";return xhr;};xhr.mimeType = function(value){if(!arguments.length)return mimeType;mimeType = value == null?null:value + "";return xhr;};xhr.responseType = function(value){if(!arguments.length)return responseType;responseType = value;return xhr;};xhr.response = function(value){response = value;return xhr;};["get", "post"].forEach(function(method){xhr[method] = function(){return xhr.send.apply(xhr, [method].concat(d3_array(arguments)));};});xhr.send = function(method, data, callback){if(arguments.length === 2 && typeof data === "function")callback = data, data = null;request.open(method, url, true);if(mimeType != null && !("accept" in headers))headers["accept"] = mimeType + ",*/*";if(request.setRequestHeader)for(var name in headers) request.setRequestHeader(name, headers[name]);if(mimeType != null && request.overrideMimeType)request.overrideMimeType(mimeType);if(responseType != null)request.responseType = responseType;if(callback != null)xhr.on("error", callback).on("load", function(request){callback(null, request);});dispatch.beforesend.call(xhr, request);request.send(data == null?null:data);return xhr;};xhr.abort = function(){request.abort();return xhr;};d3.rebind(xhr, dispatch, "on");return callback == null?xhr:xhr.get(d3_xhr_fixCallback(callback));}function d3_xhr_fixCallback(callback){return callback.length === 1?function(error, request){callback(error == null?request:null);}:callback;}function d3_xhrHasResponse(request){var type=request.responseType;return type && type !== "text"?request.response:request.responseText;}d3.dsv = function(delimiter, mimeType){var reFormat=new RegExp("[\"" + delimiter + "\n]"), delimiterCode=delimiter.charCodeAt(0);function dsv(url, row, callback){if(arguments.length < 3)callback = row, row = null;var xhr=d3_xhr(url, mimeType, row == null?response:typedResponse(row), callback);xhr.row = function(_){return arguments.length?xhr.response((row = _) == null?response:typedResponse(_)):row;};return xhr;}function response(request){return dsv.parse(request.responseText);}function typedResponse(f){return function(request){return dsv.parse(request.responseText, f);};}dsv.parse = function(text, f){var o;return dsv.parseRows(text, function(row, i){if(o)return o(row, i - 1);var a=new Function("d", "return {" + row.map(function(name, i){return JSON.stringify(name) + ": d[" + i + "]";}).join(",") + "}");o = f?function(row, i){return f(a(row), i);}:a;});};dsv.parseRows = function(text, f){var EOL={}, EOF={}, rows=[], N=text.length, I=0, n=0, t, eol;function token(){if(I >= N)return EOF;if(eol)return (eol = false, EOL);var j=I;if(text.charCodeAt(j) === 34){var i=j;while(i++ < N) {if(text.charCodeAt(i) === 34){if(text.charCodeAt(i + 1) !== 34)break;++i;}}I = i + 2;var c=text.charCodeAt(i + 1);if(c === 13){eol = true;if(text.charCodeAt(i + 2) === 10)++I;}else if(c === 10){eol = true;}return text.slice(j + 1, i).replace(/""/g, "\"");}while(I < N) {var c=text.charCodeAt(I++), k=1;if(c === 10)eol = true;else if(c === 13){eol = true;if(text.charCodeAt(I) === 10)++I, ++k;}else if(c !== delimiterCode)continue;return text.slice(j, I - k);}return text.slice(j);}while((t = token()) !== EOF) {var a=[];while(t !== EOL && t !== EOF) {a.push(t);t = token();}if(f && (a = f(a, n++)) == null)continue;rows.push(a);}return rows;};dsv.format = function(rows){if(Array.isArray(rows[0]))return dsv.formatRows(rows);var fieldSet=new d3_Set(), fields=[];rows.forEach(function(row){for(var field in row) {if(!fieldSet.has(field)){fields.push(fieldSet.add(field));}}});return [fields.map(formatValue).join(delimiter)].concat(rows.map(function(row){return fields.map(function(field){return formatValue(row[field]);}).join(delimiter);})).join("\n");};dsv.formatRows = function(rows){return rows.map(formatRow).join("\n");};function formatRow(row){return row.map(formatValue).join(delimiter);}function formatValue(text){return reFormat.test(text)?"\"" + text.replace(/\"/g, "\"\"") + "\"":text;}return dsv;};d3.csv = d3.dsv(",", "text/csv");d3.tsv = d3.dsv("\t", "text/tab-separated-values");var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame=this[d3_vendorSymbol(this, "requestAnimationFrame")] || function(callback){setTimeout(callback, 17);};d3.timer = function(callback, delay, then){var n=arguments.length;if(n < 2)delay = 0;if(n < 3)then = Date.now();var time=then + delay, timer={c:callback, t:time, f:false, n:null};if(d3_timer_queueTail)d3_timer_queueTail.n = timer;else d3_timer_queueHead = timer;d3_timer_queueTail = timer;if(!d3_timer_interval){d3_timer_timeout = clearTimeout(d3_timer_timeout);d3_timer_interval = 1;d3_timer_frame(d3_timer_step);}};function d3_timer_step(){var now=d3_timer_mark(), delay=d3_timer_sweep() - now;if(delay > 24){if(isFinite(delay)){clearTimeout(d3_timer_timeout);d3_timer_timeout = setTimeout(d3_timer_step, delay);}d3_timer_interval = 0;}else {d3_timer_interval = 1;d3_timer_frame(d3_timer_step);}}d3.timer.flush = function(){d3_timer_mark();d3_timer_sweep();};function d3_timer_mark(){var now=Date.now();d3_timer_active = d3_timer_queueHead;while(d3_timer_active) {if(now >= d3_timer_active.t)d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);d3_timer_active = d3_timer_active.n;}return now;}function d3_timer_sweep(){var t0, t1=d3_timer_queueHead, time=Infinity;while(t1) {if(t1.f){t1 = t0?t0.n = t1.n:d3_timer_queueHead = t1.n;}else {if(t1.t < time)time = t1.t;t1 = (t0 = t1).n;}}d3_timer_queueTail = t0;return time;}function d3_format_precision(x, p){return p - (x?Math.ceil(Math.log(x) / Math.LN10):1);}d3.round = function(x, n){return n?Math.round(x * (n = Math.pow(10, n))) / n:Math.round(x);};var d3_formatPrefixes=["y", "z", "a", "f", "p", "n", "µ", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y"].map(d3_formatPrefix);d3.formatPrefix = function(value, precision){var i=0;if(value){if(value < 0)value *= -1;if(precision)value = d3.round(value, d3_format_precision(value, precision));i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));}return d3_formatPrefixes[8 + i / 3];};function d3_formatPrefix(d, i){var k=Math.pow(10, abs(8 - i) * 3);return {scale:i > 8?function(d){return d / k;}:function(d){return d * k;}, symbol:d};}function d3_locale_numberFormat(locale){var locale_decimal=locale.decimal, locale_thousands=locale.thousands, locale_grouping=locale.grouping, locale_currency=locale.currency, formatGroup=locale_grouping && locale_thousands?function(value, width){var i=value.length, t=[], j=0, g=locale_grouping[0], length=0;while(i > 0 && g > 0) {if(length + g + 1 > width)g = Math.max(1, width - length);t.push(value.substring(i -= g, i + g));if((length += g + 1) > width)break;g = locale_grouping[j = (j + 1) % locale_grouping.length];}return t.reverse().join(locale_thousands);}:d3_identity;return function(specifier){var match=d3_format_re.exec(specifier), fill=match[1] || " ", align=match[2] || ">", sign=match[3] || "-", symbol=match[4] || "", zfill=match[5], width=+match[6], comma=match[7], precision=match[8], type=match[9], scale=1, prefix="", suffix="", integer=false, exponent=true;if(precision)precision = +precision.substring(1);if(zfill || fill === "0" && align === "="){zfill = fill = "0";align = "=";}switch(type){case "n":comma = true;type = "g";break;case "%":scale = 100;suffix = "%";type = "f";break;case "p":scale = 100;suffix = "%";type = "r";break;case "b":case "o":case "x":case "X":if(symbol === "#")prefix = "0" + type.toLowerCase();case "c":exponent = false;case "d":integer = true;precision = 0;break;case "s":scale = -1;type = "r";break;}if(symbol === "$")prefix = locale_currency[0], suffix = locale_currency[1];if(type == "r" && !precision)type = "g";if(precision != null){if(type == "g")precision = Math.max(1, Math.min(21, precision));else if(type == "e" || type == "f")precision = Math.max(0, Math.min(20, precision));}type = d3_format_types.get(type) || d3_format_typeDefault;var zcomma=zfill && comma;return function(value){var fullSuffix=suffix;if(integer && value % 1)return "";var negative=value < 0 || value === 0 && 1 / value < 0?(value = -value, "-"):sign === "-"?"":sign;if(scale < 0){var unit=d3.formatPrefix(value, precision);value = unit.scale(value);fullSuffix = unit.symbol + suffix;}else {value *= scale;}value = type(value, precision);var i=value.lastIndexOf("."), before, after;if(i < 0){var j=exponent?value.lastIndexOf("e"):-1;if(j < 0)before = value, after = "";else before = value.substring(0, j), after = value.substring(j);}else {before = value.substring(0, i);after = locale_decimal + value.substring(i + 1);}if(!zfill && comma)before = formatGroup(before, Infinity);var length=prefix.length + before.length + after.length + (zcomma?0:negative.length), padding=length < width?new Array(length = width - length + 1).join(fill):"";if(zcomma)before = formatGroup(padding + before, padding.length?width - after.length:Infinity);negative += prefix;value = before + after;return (align === "<"?negative + value + padding:align === ">"?padding + negative + value:align === "^"?padding.substring(0, length >>= 1) + negative + value + padding.substring(length):negative + (zcomma?value:padding + value)) + fullSuffix;};};}var d3_format_re=/(?:([^{])?([<>=^]))?([+\- ])?([$#])?(0)?(\d+)?(,)?(\.-?\d+)?([a-z%])?/i;var d3_format_types=d3.map({b:function b(x){return x.toString(2);}, c:function c(x){return String.fromCharCode(x);}, o:function o(x){return x.toString(8);}, x:function x(_x){return _x.toString(16);}, X:function X(x){return x.toString(16).toUpperCase();}, g:function g(x, p){return x.toPrecision(p);}, e:function e(x, p){return x.toExponential(p);}, f:function f(x, p){return x.toFixed(p);}, r:function r(x, p){return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));}});function d3_format_typeDefault(x){return x + "";}var d3_time=d3.time = {}, d3_date=Date;function d3_date_utc(){this._ = new Date(arguments.length > 1?Date.UTC.apply(this, arguments):arguments[0]);}d3_date_utc.prototype = {getDate:function getDate(){return this._.getUTCDate();}, getDay:function getDay(){return this._.getUTCDay();}, getFullYear:function getFullYear(){return this._.getUTCFullYear();}, getHours:function getHours(){return this._.getUTCHours();}, getMilliseconds:function getMilliseconds(){return this._.getUTCMilliseconds();}, getMinutes:function getMinutes(){return this._.getUTCMinutes();}, getMonth:function getMonth(){return this._.getUTCMonth();}, getSeconds:function getSeconds(){return this._.getUTCSeconds();}, getTime:function getTime(){return this._.getTime();}, getTimezoneOffset:function getTimezoneOffset(){return 0;}, valueOf:function valueOf(){return this._.valueOf();}, setDate:function setDate(){d3_time_prototype.setUTCDate.apply(this._, arguments);}, setDay:function setDay(){d3_time_prototype.setUTCDay.apply(this._, arguments);}, setFullYear:function setFullYear(){d3_time_prototype.setUTCFullYear.apply(this._, arguments);}, setHours:function setHours(){d3_time_prototype.setUTCHours.apply(this._, arguments);}, setMilliseconds:function setMilliseconds(){d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);}, setMinutes:function setMinutes(){d3_time_prototype.setUTCMinutes.apply(this._, arguments);}, setMonth:function setMonth(){d3_time_prototype.setUTCMonth.apply(this._, arguments);}, setSeconds:function setSeconds(){d3_time_prototype.setUTCSeconds.apply(this._, arguments);}, setTime:function setTime(){d3_time_prototype.setTime.apply(this._, arguments);}};var d3_time_prototype=Date.prototype;function d3_time_interval(local, step, number){function round(date){var d0=local(date), d1=offset(d0, 1);return date - d0 < d1 - date?d0:d1;}function ceil(date){step(date = local(new d3_date(date - 1)), 1);return date;}function offset(date, k){step(date = new d3_date(+date), k);return date;}function range(t0, t1, dt){var time=ceil(t0), times=[];if(dt > 1){while(time < t1) {if(!(number(time) % dt))times.push(new Date(+time));step(time, 1);}}else {while(time < t1) times.push(new Date(+time)), step(time, 1);}return times;}function range_utc(t0, t1, dt){try{d3_date = d3_date_utc;var utc=new d3_date_utc();utc._ = t0;return range(utc, t1, dt);}finally {d3_date = Date;}}local.floor = local;local.round = round;local.ceil = ceil;local.offset = offset;local.range = range;var utc=local.utc = d3_time_interval_utc(local);utc.floor = utc;utc.round = d3_time_interval_utc(round);utc.ceil = d3_time_interval_utc(ceil);utc.offset = d3_time_interval_utc(offset);utc.range = range_utc;return local;}function d3_time_interval_utc(method){return function(date, k){try{d3_date = d3_date_utc;var utc=new d3_date_utc();utc._ = date;return method(utc, k)._;}finally {d3_date = Date;}};}d3_time.year = d3_time_interval(function(date){date = d3_time.day(date);date.setMonth(0, 1);return date;}, function(date, offset){date.setFullYear(date.getFullYear() + offset);}, function(date){return date.getFullYear();});d3_time.years = d3_time.year.range;d3_time.years.utc = d3_time.year.utc.range;d3_time.day = d3_time_interval(function(date){var day=new d3_date(2000, 0);day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());return day;}, function(date, offset){date.setDate(date.getDate() + offset);}, function(date){return date.getDate() - 1;});d3_time.days = d3_time.day.range;d3_time.days.utc = d3_time.day.utc.range;d3_time.dayOfYear = function(date){var year=d3_time.year(date);return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 60000) / 86400000);};["sunday", "monday", "tuesday", "wednesday", "thursday", "friday", "saturday"].forEach(function(day, i){i = 7 - i;var interval=d3_time[day] = d3_time_interval(function(date){(date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);return date;}, function(date, offset){date.setDate(date.getDate() + Math.floor(offset) * 7);}, function(date){var day=d3_time.year(date).getDay();return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);});d3_time[day + "s"] = interval.range;d3_time[day + "s"].utc = interval.utc.range;d3_time[day + "OfYear"] = function(date){var day=d3_time.year(date).getDay();return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);};});d3_time.week = d3_time.sunday;d3_time.weeks = d3_time.sunday.range;d3_time.weeks.utc = d3_time.sunday.utc.range;d3_time.weekOfYear = d3_time.sundayOfYear;function d3_locale_timeFormat(locale){var locale_dateTime=locale.dateTime, locale_date=locale.date, locale_time=locale.time, locale_periods=locale.periods, locale_days=locale.days, locale_shortDays=locale.shortDays, locale_months=locale.months, locale_shortMonths=locale.shortMonths;function d3_time_format(template){var n=template.length;function format(date){var string=[], i=-1, j=0, c, p, f;while(++i < n) {if(template.charCodeAt(i) === 37){string.push(template.slice(j, i));if((p = d3_time_formatPads[c = template.charAt(++i)]) != null)c = template.charAt(++i);if(f = d3_time_formats[c])c = f(date, p == null?c === "e"?" ":"0":p);string.push(c);j = i + 1;}}string.push(template.slice(j, i));return string.join("");}format.parse = function(string){var d={y:1900, m:0, d:1, H:0, M:0, S:0, L:0, Z:null}, i=d3_time_parse(d, template, string, 0);if(i != string.length)return null;if("p" in d)d.H = d.H % 12 + d.p * 12;var localZ=d.Z != null && d3_date !== d3_date_utc, date=new (localZ?d3_date_utc:d3_date)();if("j" in d)date.setFullYear(d.y, 0, d.j);else if("w" in d && ("W" in d || "U" in d)){date.setFullYear(d.y, 0, 1);date.setFullYear(d.y, 0, "W" in d?(d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7:d.w + d.U * 7 - (date.getDay() + 6) % 7);}else date.setFullYear(d.y, d.m, d.d);date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);return localZ?date._:date;};format.toString = function(){return template;};return format;}function d3_time_parse(date, template, string, j){var c, p, t, i=0, n=template.length, m=string.length;while(i < n) {if(j >= m)return -1;c = template.charCodeAt(i++);if(c === 37){t = template.charAt(i++);p = d3_time_parsers[t in d3_time_formatPads?template.charAt(i++):t];if(!p || (j = p(date, string, j)) < 0)return -1;}else if(c != string.charCodeAt(j++)){return -1;}}return j;}d3_time_format.utc = function(template){var local=d3_time_format(template);function format(date){try{d3_date = d3_date_utc;var utc=new d3_date();utc._ = date;return local(utc);}finally {d3_date = Date;}}format.parse = function(string){try{d3_date = d3_date_utc;var date=local.parse(string);return date && date._;}finally {d3_date = Date;}};format.toString = local.toString;return format;};d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;var d3_time_periodLookup=d3.map(), d3_time_dayRe=d3_time_formatRe(locale_days), d3_time_dayLookup=d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe=d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup=d3_time_formatLookup(locale_shortDays), d3_time_monthRe=d3_time_formatRe(locale_months), d3_time_monthLookup=d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe=d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup=d3_time_formatLookup(locale_shortMonths);locale_periods.forEach(function(p, i){d3_time_periodLookup.set(p.toLowerCase(), i);});var d3_time_formats={a:function a(d){return locale_shortDays[d.getDay()];}, A:function A(d){return locale_days[d.getDay()];}, b:function b(d){return locale_shortMonths[d.getMonth()];}, B:function B(d){return locale_months[d.getMonth()];}, c:d3_time_format(locale_dateTime), d:function d(_d, p){return d3_time_formatPad(_d.getDate(), p, 2);}, e:function e(d, p){return d3_time_formatPad(d.getDate(), p, 2);}, H:function H(d, p){return d3_time_formatPad(d.getHours(), p, 2);}, I:function I(d, p){return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);}, j:function j(d, p){return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);}, L:function L(d, p){return d3_time_formatPad(d.getMilliseconds(), p, 3);}, m:function m(d, p){return d3_time_formatPad(d.getMonth() + 1, p, 2);}, M:function M(d, p){return d3_time_formatPad(d.getMinutes(), p, 2);}, p:function p(d){return locale_periods[+(d.getHours() >= 12)];}, S:function S(d, p){return d3_time_formatPad(d.getSeconds(), p, 2);}, U:function U(d, p){return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);}, w:function w(d){return d.getDay();}, W:function W(d, p){return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);}, x:d3_time_format(locale_date), X:d3_time_format(locale_time), y:function y(d, p){return d3_time_formatPad(d.getFullYear() % 100, p, 2);}, Y:function Y(d, p){return d3_time_formatPad(d.getFullYear() % 10000, p, 4);}, Z:d3_time_zone, "%":function _(){return "%";}};var d3_time_parsers={a:d3_time_parseWeekdayAbbrev, A:d3_time_parseWeekday, b:d3_time_parseMonthAbbrev, B:d3_time_parseMonth, c:d3_time_parseLocaleFull, d:d3_time_parseDay, e:d3_time_parseDay, H:d3_time_parseHour24, I:d3_time_parseHour24, j:d3_time_parseDayOfYear, L:d3_time_parseMilliseconds, m:d3_time_parseMonthNumber, M:d3_time_parseMinutes, p:d3_time_parseAmPm, S:d3_time_parseSeconds, U:d3_time_parseWeekNumberSunday, w:d3_time_parseWeekdayNumber, W:d3_time_parseWeekNumberMonday, x:d3_time_parseLocaleDate, X:d3_time_parseLocaleTime, y:d3_time_parseYear, Y:d3_time_parseFullYear, Z:d3_time_parseZone, "%":d3_time_parseLiteralPercent};function d3_time_parseWeekdayAbbrev(date, string, i){d3_time_dayAbbrevRe.lastIndex = 0;var n=d3_time_dayAbbrevRe.exec(string.slice(i));return n?(date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length):-1;}function d3_time_parseWeekday(date, string, i){d3_time_dayRe.lastIndex = 0;var n=d3_time_dayRe.exec(string.slice(i));return n?(date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length):-1;}function d3_time_parseMonthAbbrev(date, string, i){d3_time_monthAbbrevRe.lastIndex = 0;var n=d3_time_monthAbbrevRe.exec(string.slice(i));return n?(date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length):-1;}function d3_time_parseMonth(date, string, i){d3_time_monthRe.lastIndex = 0;var n=d3_time_monthRe.exec(string.slice(i));return n?(date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length):-1;}function d3_time_parseLocaleFull(date, string, i){return d3_time_parse(date, d3_time_formats.c.toString(), string, i);}function d3_time_parseLocaleDate(date, string, i){return d3_time_parse(date, d3_time_formats.x.toString(), string, i);}function d3_time_parseLocaleTime(date, string, i){return d3_time_parse(date, d3_time_formats.X.toString(), string, i);}function d3_time_parseAmPm(date, string, i){var n=d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());return n == null?-1:(date.p = n, i);}return d3_time_format;}var d3_time_formatPads={"-":"", _:" ", "0":"0"}, d3_time_numberRe=/^\s*\d+/, d3_time_percentRe=/^%/;function d3_time_formatPad(value, fill, width){var sign=value < 0?"-":"", string=(sign?-value:value) + "", length=string.length;return sign + (length < width?new Array(width - length + 1).join(fill) + string:string);}function d3_time_formatRe(names){return new RegExp("^(?:" + names.map(d3.requote).join("|") + ")", "i");}function d3_time_formatLookup(names){var map=new d3_Map(), i=-1, n=names.length;while(++i < n) map.set(names[i].toLowerCase(), i);return map;}function d3_time_parseWeekdayNumber(date, string, i){d3_time_numberRe.lastIndex = 0;var n=d3_time_numberRe.exec(string.slice(i, i + 1));return n?(date.w = +n[0], i + n[0].length):-1;}function d3_time_parseWeekNumberSunday(date, string, i){d3_time_numberRe.lastIndex = 0;var n=d3_time_numberRe.exec(string.slice(i));return n?(date.U = +n[0], i + n[0].length):-1;}function d3_time_parseWeekNumberMonday(date, string, i){d3_time_numberRe.lastIndex = 0;var n=d3_time_numberRe.exec(string.slice(i));return n?(date.W = +n[0], i + n[0].length):-1;}function d3_time_parseFullYear(date, string, i){d3_time_numberRe.lastIndex = 0;var n=d3_time_numberRe.exec(string.slice(i, i + 4));return n?(date.y = +n[0], i + n[0].length):-1;}function d3_time_parseYear(date, string, i){d3_time_numberRe.lastIndex = 0;var n=d3_time_numberRe.exec(string.slice(i, i + 2));return n?(date.y = d3_time_expandYear(+n[0]), i + n[0].length):-1;}function d3_time_parseZone(date, string, i){return /^[+-]\d{4}$/.test(string = string.slice(i, i + 5))?(date.Z = -string, i + 5):-1;}function d3_time_expandYear(d){return d + (d > 68?1900:2000);}function d3_time_parseMonthNumber(date, string, i){d3_time_numberRe.lastIndex = 0;var n=d3_time_numberRe.exec(string.slice(i, i + 2));return n?(date.m = n[0] - 1, i + n[0].length):-1;}function d3_time_parseDay(date, string, i){d3_time_numberRe.lastIndex = 0;var n=d3_time_numberRe.exec(string.slice(i, i + 2));return n?(date.d = +n[0], i + n[0].length):-1;}function d3_time_parseDayOfYear(date, string, i){d3_time_numberRe.lastIndex = 0;var n=d3_time_numberRe.exec(string.slice(i, i + 3));return n?(date.j = +n[0], i + n[0].length):-1;}function d3_time_parseHour24(date, string, i){d3_time_numberRe.lastIndex = 0;var n=d3_time_numberRe.exec(string.slice(i, i + 2));return n?(date.H = +n[0], i + n[0].length):-1;}function d3_time_parseMinutes(date, string, i){d3_time_numberRe.lastIndex = 0;var n=d3_time_numberRe.exec(string.slice(i, i + 2));return n?(date.M = +n[0], i + n[0].length):-1;}function d3_time_parseSeconds(date, string, i){d3_time_numberRe.lastIndex = 0;var n=d3_time_numberRe.exec(string.slice(i, i + 2));return n?(date.S = +n[0], i + n[0].length):-1;}function d3_time_parseMilliseconds(date, string, i){d3_time_numberRe.lastIndex = 0;var n=d3_time_numberRe.exec(string.slice(i, i + 3));return n?(date.L = +n[0], i + n[0].length):-1;}function d3_time_zone(d){var z=d.getTimezoneOffset(), zs=z > 0?"-":"+", zh=abs(z) / 60 | 0, zm=abs(z) % 60;return zs + d3_time_formatPad(zh, "0", 2) + d3_time_formatPad(zm, "0", 2);}function d3_time_parseLiteralPercent(date, string, i){d3_time_percentRe.lastIndex = 0;var n=d3_time_percentRe.exec(string.slice(i, i + 1));return n?i + n[0].length:-1;}function d3_time_formatMulti(formats){var n=formats.length, i=-1;while(++i < n) formats[i][0] = this(formats[i][0]);return function(date){var i=0, f=formats[i];while(!f[1](date)) f = formats[++i];return f[0](date);};}d3.locale = function(locale){return {numberFormat:d3_locale_numberFormat(locale), timeFormat:d3_locale_timeFormat(locale)};};var d3_locale_enUS=d3.locale({decimal:".", thousands:",", grouping:[3], currency:["$", ""], dateTime:"%a %b %e %X %Y", date:"%m/%d/%Y", time:"%H:%M:%S", periods:["AM", "PM"], days:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], shortDays:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], months:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], shortMonths:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]});d3.format = d3_locale_enUS.numberFormat;d3.geo = {};function d3_adder(){}d3_adder.prototype = {s:0, t:0, add:function add(y){d3_adderSum(y, this.t, d3_adderTemp);d3_adderSum(d3_adderTemp.s, this.s, this);if(this.s)this.t += d3_adderTemp.t;else this.s = d3_adderTemp.t;}, reset:function reset(){this.s = this.t = 0;}, valueOf:function valueOf(){return this.s;}};var d3_adderTemp=new d3_adder();function d3_adderSum(a, b, o){var x=o.s = a + b, bv=x - a, av=x - bv;o.t = a - av + (b - bv);}d3.geo.stream = function(object, listener){if(object && d3_geo_streamObjectType.hasOwnProperty(object.type)){d3_geo_streamObjectType[object.type](object, listener);}else {d3_geo_streamGeometry(object, listener);}};function d3_geo_streamGeometry(geometry, listener){if(geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)){d3_geo_streamGeometryType[geometry.type](geometry, listener);}}var d3_geo_streamObjectType={Feature:function Feature(feature, listener){d3_geo_streamGeometry(feature.geometry, listener);}, FeatureCollection:function FeatureCollection(object, listener){var features=object.features, i=-1, n=features.length;while(++i < n) d3_geo_streamGeometry(features[i].geometry, listener);}};var d3_geo_streamGeometryType={Sphere:function Sphere(object, listener){listener.sphere();}, Point:function Point(object, listener){object = object.coordinates;listener.point(object[0], object[1], object[2]);}, MultiPoint:function MultiPoint(object, listener){var coordinates=object.coordinates, i=-1, n=coordinates.length;while(++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);}, LineString:function LineString(object, listener){d3_geo_streamLine(object.coordinates, listener, 0);}, MultiLineString:function MultiLineString(object, listener){var coordinates=object.coordinates, i=-1, n=coordinates.length;while(++i < n) d3_geo_streamLine(coordinates[i], listener, 0);}, Polygon:function Polygon(object, listener){d3_geo_streamPolygon(object.coordinates, listener);}, MultiPolygon:function MultiPolygon(object, listener){var coordinates=object.coordinates, i=-1, n=coordinates.length;while(++i < n) d3_geo_streamPolygon(coordinates[i], listener);}, GeometryCollection:function GeometryCollection(object, listener){var geometries=object.geometries, i=-1, n=geometries.length;while(++i < n) d3_geo_streamGeometry(geometries[i], listener);}};function d3_geo_streamLine(coordinates, listener, closed){var i=-1, n=coordinates.length - closed, coordinate;listener.lineStart();while(++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);listener.lineEnd();}function d3_geo_streamPolygon(coordinates, listener){var i=-1, n=coordinates.length;listener.polygonStart();while(++i < n) d3_geo_streamLine(coordinates[i], listener, 1);listener.polygonEnd();}d3.geo.area = function(object){d3_geo_areaSum = 0;d3.geo.stream(object, d3_geo_area);return d3_geo_areaSum;};var d3_geo_areaSum, d3_geo_areaRingSum=new d3_adder();var d3_geo_area={sphere:function sphere(){d3_geo_areaSum += 4 * π;}, point:d3_noop, lineStart:d3_noop, lineEnd:d3_noop, polygonStart:function polygonStart(){d3_geo_areaRingSum.reset();d3_geo_area.lineStart = d3_geo_areaRingStart;}, polygonEnd:function polygonEnd(){var area=2 * d3_geo_areaRingSum;d3_geo_areaSum += area < 0?4 * π + area:area;d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;}};function d3_geo_areaRingStart(){var λ00, φ00, λ0, cosφ0, sinφ0;d3_geo_area.point = function(λ, φ){d3_geo_area.point = nextPoint;λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), sinφ0 = Math.sin(φ);};function nextPoint(λ, φ){λ *= d3_radians;φ = φ * d3_radians / 2 + π / 4;var dλ=λ - λ0, sdλ=dλ >= 0?1:-1, adλ=sdλ * dλ, cosφ=Math.cos(φ), sinφ=Math.sin(φ), k=sinφ0 * sinφ, u=cosφ0 * cosφ + k * Math.cos(adλ), v=k * sdλ * Math.sin(adλ);d3_geo_areaRingSum.add(Math.atan2(v, u));λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;}d3_geo_area.lineEnd = function(){nextPoint(λ00, φ00);};}function d3_geo_cartesian(spherical){var λ=spherical[0], φ=spherical[1], cosφ=Math.cos(φ);return [cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ)];}function d3_geo_cartesianDot(a, b){return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];}function d3_geo_cartesianCross(a, b){return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];}function d3_geo_cartesianAdd(a, b){a[0] += b[0];a[1] += b[1];a[2] += b[2];}function d3_geo_cartesianScale(vector, k){return [vector[0] * k, vector[1] * k, vector[2] * k];}function d3_geo_cartesianNormalize(d){var l=Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);d[0] /= l;d[1] /= l;d[2] /= l;}function d3_geo_spherical(cartesian){return [Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2])];}function d3_geo_sphericalEqual(a, b){return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;}d3.geo.bounds = (function(){var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;var bound={point:point, lineStart:lineStart, lineEnd:lineEnd, polygonStart:function polygonStart(){bound.point = ringPoint;bound.lineStart = ringStart;bound.lineEnd = ringEnd;dλSum = 0;d3_geo_area.polygonStart();}, polygonEnd:function polygonEnd(){d3_geo_area.polygonEnd();bound.point = point;bound.lineStart = lineStart;bound.lineEnd = lineEnd;if(d3_geo_areaRingSum < 0)λ0 = -(λ1 = 180), φ0 = -(φ1 = 90);else if(dλSum > ε)φ1 = 90;else if(dλSum < -ε)φ0 = -90;range[0] = λ0, range[1] = λ1;}};function point(λ, φ){ranges.push(range = [λ0 = λ, λ1 = λ]);if(φ < φ0)φ0 = φ;if(φ > φ1)φ1 = φ;}function linePoint(λ, φ){var p=d3_geo_cartesian([λ * d3_radians, φ * d3_radians]);if(p0){var normal=d3_geo_cartesianCross(p0, p), equatorial=[normal[1], -normal[0], 0], inflection=d3_geo_cartesianCross(equatorial, normal);d3_geo_cartesianNormalize(inflection);inflection = d3_geo_spherical(inflection);var dλ=λ - λ_, s=dλ > 0?1:-1, λi=inflection[0] * d3_degrees * s, antimeridian=abs(dλ) > 180;if(antimeridian ^ (s * λ_ < λi && λi < s * λ)){var φi=inflection[1] * d3_degrees;if(φi > φ1)φ1 = φi;}else if((λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ))){var φi=-inflection[1] * d3_degrees;if(φi < φ0)φ0 = φi;}else {if(φ < φ0)φ0 = φ;if(φ > φ1)φ1 = φ;}if(antimeridian){if(λ < λ_){if(angle(λ0, λ) > angle(λ0, λ1))λ1 = λ;}else {if(angle(λ, λ1) > angle(λ0, λ1))λ0 = λ;}}else {if(λ1 >= λ0){if(λ < λ0)λ0 = λ;if(λ > λ1)λ1 = λ;}else {if(λ > λ_){if(angle(λ0, λ) > angle(λ0, λ1))λ1 = λ;}else {if(angle(λ, λ1) > angle(λ0, λ1))λ0 = λ;}}}}else {point(λ, φ);}p0 = p, λ_ = λ;}function lineStart(){bound.point = linePoint;}function lineEnd(){range[0] = λ0, range[1] = λ1;bound.point = point;p0 = null;}function ringPoint(λ, φ){if(p0){var dλ=λ - λ_;dλSum += abs(dλ) > 180?dλ + (dλ > 0?360:-360):dλ;}else λ__ = λ, φ__ = φ;d3_geo_area.point(λ, φ);linePoint(λ, φ);}function ringStart(){d3_geo_area.lineStart();}function ringEnd(){ringPoint(λ__, φ__);d3_geo_area.lineEnd();if(abs(dλSum) > ε)λ0 = -(λ1 = 180);range[0] = λ0, range[1] = λ1;p0 = null;}function angle(λ0, λ1){return (λ1 -= λ0) < 0?λ1 + 360:λ1;}function compareRanges(a, b){return a[0] - b[0];}function withinRange(x, range){return range[0] <= range[1]?range[0] <= x && x <= range[1]:x < range[0] || range[1] < x;}return function(feature){φ1 = λ1 = -(λ0 = φ0 = Infinity);ranges = [];d3.geo.stream(feature, bound);var n=ranges.length;if(n){ranges.sort(compareRanges);for(var i=1, a=ranges[0], b, merged=[a]; i < n; ++i) {b = ranges[i];if(withinRange(b[0], a) || withinRange(b[1], a)){if(angle(a[0], b[1]) > angle(a[0], a[1]))a[1] = b[1];if(angle(b[0], a[1]) > angle(a[0], a[1]))a[0] = b[0];}else {merged.push(a = b);}}var best=-Infinity, dλ;for(var n=merged.length - 1, i=0, a=merged[n], b; i <= n; a = b, ++i) {b = merged[i];if((dλ = angle(a[1], b[0])) > best)best = dλ, λ0 = b[0], λ1 = a[1];}}ranges = range = null;return λ0 === Infinity || φ0 === Infinity?[[NaN, NaN], [NaN, NaN]]:[[λ0, φ0], [λ1, φ1]];};})();d3.geo.centroid = function(object){d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;d3.geo.stream(object, d3_geo_centroid);var x=d3_geo_centroidX2, y=d3_geo_centroidY2, z=d3_geo_centroidZ2, m=x * x + y * y + z * z;if(m < ε2){x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;if(d3_geo_centroidW1 < ε)x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;m = x * x + y * y + z * z;if(m < ε2)return [NaN, NaN];}return [Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees];};var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;var d3_geo_centroid={sphere:d3_noop, point:d3_geo_centroidPoint, lineStart:d3_geo_centroidLineStart, lineEnd:d3_geo_centroidLineEnd, polygonStart:function polygonStart(){d3_geo_centroid.lineStart = d3_geo_centroidRingStart;}, polygonEnd:function polygonEnd(){d3_geo_centroid.lineStart = d3_geo_centroidLineStart;}};function d3_geo_centroidPoint(λ, φ){λ *= d3_radians;var cosφ=Math.cos(φ *= d3_radians);d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));}function d3_geo_centroidPointXYZ(x, y, z){++d3_geo_centroidW0;d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;}function d3_geo_centroidLineStart(){var x0, y0, z0;d3_geo_centroid.point = function(λ, φ){λ *= d3_radians;var cosφ=Math.cos(φ *= d3_radians);x0 = cosφ * Math.cos(λ);y0 = cosφ * Math.sin(λ);z0 = Math.sin(φ);d3_geo_centroid.point = nextPoint;d3_geo_centroidPointXYZ(x0, y0, z0);};function nextPoint(λ, φ){λ *= d3_radians;var cosφ=Math.cos(φ *= d3_radians), x=cosφ * Math.cos(λ), y=cosφ * Math.sin(λ), z=Math.sin(φ), w=Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);d3_geo_centroidW1 += w;d3_geo_centroidX1 += w * (x0 + (x0 = x));d3_geo_centroidY1 += w * (y0 + (y0 = y));d3_geo_centroidZ1 += w * (z0 + (z0 = z));d3_geo_centroidPointXYZ(x0, y0, z0);}}function d3_geo_centroidLineEnd(){d3_geo_centroid.point = d3_geo_centroidPoint;}function d3_geo_centroidRingStart(){var λ00, φ00, x0, y0, z0;d3_geo_centroid.point = function(λ, φ){λ00 = λ, φ00 = φ;d3_geo_centroid.point = nextPoint;λ *= d3_radians;var cosφ=Math.cos(φ *= d3_radians);x0 = cosφ * Math.cos(λ);y0 = cosφ * Math.sin(λ);z0 = Math.sin(φ);d3_geo_centroidPointXYZ(x0, y0, z0);};d3_geo_centroid.lineEnd = function(){nextPoint(λ00, φ00);d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;d3_geo_centroid.point = d3_geo_centroidPoint;};function nextPoint(λ, φ){λ *= d3_radians;var cosφ=Math.cos(φ *= d3_radians), x=cosφ * Math.cos(λ), y=cosφ * Math.sin(λ), z=Math.sin(φ), cx=y0 * z - z0 * y, cy=z0 * x - x0 * z, cz=x0 * y - y0 * x, m=Math.sqrt(cx * cx + cy * cy + cz * cz), u=x0 * x + y0 * y + z0 * z, v=m && -d3_acos(u) / m, w=Math.atan2(m, u);d3_geo_centroidX2 += v * cx;d3_geo_centroidY2 += v * cy;d3_geo_centroidZ2 += v * cz;d3_geo_centroidW1 += w;d3_geo_centroidX1 += w * (x0 + (x0 = x));d3_geo_centroidY1 += w * (y0 + (y0 = y));d3_geo_centroidZ1 += w * (z0 + (z0 = z));d3_geo_centroidPointXYZ(x0, y0, z0);}}function d3_geo_compose(a, b){function compose(x, y){return (x = a(x, y), b(x[0], x[1]));}if(a.invert && b.invert)compose.invert = function(x, y){return (x = b.invert(x, y), x && a.invert(x[0], x[1]));};return compose;}function d3_true(){return true;}function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener){var subject=[], clip=[];segments.forEach(function(segment){if((n = segment.length - 1) <= 0)return;var n, p0=segment[0], p1=segment[n];if(d3_geo_sphericalEqual(p0, p1)){listener.lineStart();for(var i=0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);listener.lineEnd();return;}var a=new d3_geo_clipPolygonIntersection(p0, segment, null, true), b=new d3_geo_clipPolygonIntersection(p0, null, a, false);a.o = b;subject.push(a);clip.push(b);a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);b = new d3_geo_clipPolygonIntersection(p1, null, a, true);a.o = b;subject.push(a);clip.push(b);});clip.sort(compare);d3_geo_clipPolygonLinkCircular(subject);d3_geo_clipPolygonLinkCircular(clip);if(!subject.length)return;for(var i=0, entry=clipStartInside, n=clip.length; i < n; ++i) {clip[i].e = entry = !entry;}var start=subject[0], points, point;while(1) {var current=start, isSubject=true;while(current.v) if((current = current.n) === start)return;points = current.z;listener.lineStart();do {current.v = current.o.v = true;if(current.e){if(isSubject){for(var i=0, n=points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);}else {interpolate(current.x, current.n.x, 1, listener);}current = current.n;}else {if(isSubject){points = current.p.z;for(var i=points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);}else {interpolate(current.x, current.p.x, -1, listener);}current = current.p;}current = current.o;points = current.z;isSubject = !isSubject;}while(!current.v);listener.lineEnd();}}function d3_geo_clipPolygonLinkCircular(array){if(!(n = array.length))return;var n, i=0, a=array[0], b;while(++i < n) {a.n = b = array[i];b.p = a;a = b;}a.n = b = array[0];b.p = a;}function d3_geo_clipPolygonIntersection(point, points, other, entry){this.x = point;this.z = points;this.o = other;this.e = entry;this.v = false;this.n = this.p = null;}function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart){return function(rotate, listener){var line=clipLine(listener), rotatedClipStart=rotate.invert(clipStart[0], clipStart[1]);var clip={point:point, lineStart:lineStart, lineEnd:lineEnd, polygonStart:function polygonStart(){clip.point = pointRing;clip.lineStart = ringStart;clip.lineEnd = ringEnd;segments = [];polygon = [];}, polygonEnd:function polygonEnd(){clip.point = point;clip.lineStart = lineStart;clip.lineEnd = lineEnd;segments = d3.merge(segments);var clipStartInside=d3_geo_pointInPolygon(rotatedClipStart, polygon);if(segments.length){if(!polygonStarted)listener.polygonStart(), polygonStarted = true;d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);}else if(clipStartInside){if(!polygonStarted)listener.polygonStart(), polygonStarted = true;listener.lineStart();interpolate(null, null, 1, listener);listener.lineEnd();}if(polygonStarted)listener.polygonEnd(), polygonStarted = false;segments = polygon = null;}, sphere:function sphere(){listener.polygonStart();listener.lineStart();interpolate(null, null, 1, listener);listener.lineEnd();listener.polygonEnd();}};function point(λ, φ){var point=rotate(λ, φ);if(pointVisible(λ = point[0], φ = point[1]))listener.point(λ, φ);}function pointLine(λ, φ){var point=rotate(λ, φ);line.point(point[0], point[1]);}function lineStart(){clip.point = pointLine;line.lineStart();}function lineEnd(){clip.point = point;line.lineEnd();}var segments;var buffer=d3_geo_clipBufferListener(), ringListener=clipLine(buffer), polygonStarted=false, polygon, ring;function pointRing(λ, φ){ring.push([λ, φ]);var point=rotate(λ, φ);ringListener.point(point[0], point[1]);}function ringStart(){ringListener.lineStart();ring = [];}function ringEnd(){pointRing(ring[0][0], ring[0][1]);ringListener.lineEnd();var clean=ringListener.clean(), ringSegments=buffer.buffer(), segment, n=ringSegments.length;ring.pop();polygon.push(ring);ring = null;if(!n)return;if(clean & 1){segment = ringSegments[0];var n=segment.length - 1, i=-1, point;if(n > 0){if(!polygonStarted)listener.polygonStart(), polygonStarted = true;listener.lineStart();while(++i < n) listener.point((point = segment[i])[0], point[1]);listener.lineEnd();}return;}if(n > 1 && clean & 2)ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));}return clip;};}function d3_geo_clipSegmentLength1(segment){return segment.length > 1;}function d3_geo_clipBufferListener(){var lines=[], line;return {lineStart:function lineStart(){lines.push(line = []);}, point:function point(λ, φ){line.push([λ, φ]);}, lineEnd:d3_noop, buffer:function buffer(){var buffer=lines;lines = [];line = null;return buffer;}, rejoin:function rejoin(){if(lines.length > 1)lines.push(lines.pop().concat(lines.shift()));}};}function d3_geo_clipSort(a, b){return ((a = a.x)[0] < 0?a[1] - halfπ - ε:halfπ - a[1]) - ((b = b.x)[0] < 0?b[1] - halfπ - ε:halfπ - b[1]);}var d3_geo_clipAntimeridian=d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [-π, -π / 2]);function d3_geo_clipAntimeridianLine(listener){var λ0=NaN, φ0=NaN, sλ0=NaN, _clean;return {lineStart:function lineStart(){listener.lineStart();_clean = 1;}, point:function point(λ1, φ1){var sλ1=λ1 > 0?π:-π, dλ=abs(λ1 - λ0);if(abs(dλ - π) < ε){listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0?halfπ:-halfπ);listener.point(sλ0, φ0);listener.lineEnd();listener.lineStart();listener.point(sλ1, φ0);listener.point(λ1, φ0);_clean = 0;}else if(sλ0 !== sλ1 && dλ >= π){if(abs(λ0 - sλ0) < ε)λ0 -= sλ0 * ε;if(abs(λ1 - sλ1) < ε)λ1 -= sλ1 * ε;φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);listener.point(sλ0, φ0);listener.lineEnd();listener.lineStart();listener.point(sλ1, φ0);_clean = 0;}listener.point(λ0 = λ1, φ0 = φ1);sλ0 = sλ1;}, lineEnd:function lineEnd(){listener.lineEnd();λ0 = φ0 = NaN;}, clean:function clean(){return 2 - _clean;}};}function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1){var cosφ0, cosφ1, sinλ0_λ1=Math.sin(λ0 - λ1);return abs(sinλ0_λ1) > ε?Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)):(φ0 + φ1) / 2;}function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener){var φ;if(from == null){φ = direction * halfπ;listener.point(-π, φ);listener.point(0, φ);listener.point(π, φ);listener.point(π, 0);listener.point(π, -φ);listener.point(0, -φ);listener.point(-π, -φ);listener.point(-π, 0);listener.point(-π, φ);}else if(abs(from[0] - to[0]) > ε){var s=from[0] < to[0]?π:-π;φ = direction * s / 2;listener.point(-s, φ);listener.point(0, φ);listener.point(s, φ);}else {listener.point(to[0], to[1]);}}function d3_geo_pointInPolygon(point, polygon){var meridian=point[0], parallel=point[1], meridianNormal=[Math.sin(meridian), -Math.cos(meridian), 0], polarAngle=0, winding=0;d3_geo_areaRingSum.reset();for(var i=0, n=polygon.length; i < n; ++i) {var ring=polygon[i], m=ring.length;if(!m)continue;var point0=ring[0], λ0=point0[0], φ0=point0[1] / 2 + π / 4, sinφ0=Math.sin(φ0), cosφ0=Math.cos(φ0), j=1;while(true) {if(j === m)j = 0;point = ring[j];var λ=point[0], φ=point[1] / 2 + π / 4, sinφ=Math.sin(φ), cosφ=Math.cos(φ), dλ=λ - λ0, sdλ=dλ >= 0?1:-1, adλ=sdλ * dλ, antimeridian=adλ > π, k=sinφ0 * sinφ;d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));polarAngle += antimeridian?dλ + sdλ * τ:dλ;if(antimeridian ^ λ0 >= meridian ^ λ >= meridian){var arc=d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));d3_geo_cartesianNormalize(arc);var intersection=d3_geo_cartesianCross(meridianNormal, arc);d3_geo_cartesianNormalize(intersection);var φarc=(antimeridian ^ dλ >= 0?-1:1) * d3_asin(intersection[2]);if(parallel > φarc || parallel === φarc && (arc[0] || arc[1])){winding += antimeridian ^ dλ >= 0?1:-1;}}if(! j++)break;λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;}}return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;}function d3_geo_clipCircle(radius){var cr=Math.cos(radius), smallRadius=cr > 0, notHemisphere=abs(cr) > ε, interpolate=d3_geo_circleInterpolate(radius, 6 * d3_radians);return d3_geo_clip(visible, clipLine, interpolate, smallRadius?[0, -radius]:[-π, radius - π]);function visible(λ, φ){return Math.cos(λ) * Math.cos(φ) > cr;}function clipLine(listener){var point0, c0, v0, v00, _clean2;return {lineStart:function lineStart(){v00 = v0 = false;_clean2 = 1;}, point:function point(λ, φ){var point1=[λ, φ], point2, v=visible(λ, φ), c=smallRadius?v?0:code(λ, φ):v?code(λ + (λ < 0?π:-π), φ):0;if(!point0 && (v00 = v0 = v))listener.lineStart();if(v !== v0){point2 = intersect(point0, point1);if(d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)){point1[0] += ε;point1[1] += ε;v = visible(point1[0], point1[1]);}}if(v !== v0){_clean2 = 0;if(v){listener.lineStart();point2 = intersect(point1, point0);listener.point(point2[0], point2[1]);}else {point2 = intersect(point0, point1);listener.point(point2[0], point2[1]);listener.lineEnd();}point0 = point2;}else if(notHemisphere && point0 && smallRadius ^ v){var t;if(!(c & c0) && (t = intersect(point1, point0, true))){_clean2 = 0;if(smallRadius){listener.lineStart();listener.point(t[0][0], t[0][1]);listener.point(t[1][0], t[1][1]);listener.lineEnd();}else {listener.point(t[1][0], t[1][1]);listener.lineEnd();listener.lineStart();listener.point(t[0][0], t[0][1]);}}}if(v && (!point0 || !d3_geo_sphericalEqual(point0, point1))){listener.point(point1[0], point1[1]);}point0 = point1, v0 = v, c0 = c;}, lineEnd:function lineEnd(){if(v0)listener.lineEnd();point0 = null;}, clean:function clean(){return _clean2 | (v00 && v0) << 1;}};}function intersect(a, b, two){var pa=d3_geo_cartesian(a), pb=d3_geo_cartesian(b);var n1=[1, 0, 0], n2=d3_geo_cartesianCross(pa, pb), n2n2=d3_geo_cartesianDot(n2, n2), n1n2=n2[0], determinant=n2n2 - n1n2 * n1n2;if(!determinant)return !two && a;var c1=cr * n2n2 / determinant, c2=-cr * n1n2 / determinant, n1xn2=d3_geo_cartesianCross(n1, n2), A=d3_geo_cartesianScale(n1, c1), B=d3_geo_cartesianScale(n2, c2);d3_geo_cartesianAdd(A, B);var u=n1xn2, w=d3_geo_cartesianDot(A, u), uu=d3_geo_cartesianDot(u, u), t2=w * w - uu * (d3_geo_cartesianDot(A, A) - 1);if(t2 < 0)return;var t=Math.sqrt(t2), q=d3_geo_cartesianScale(u, (-w - t) / uu);d3_geo_cartesianAdd(q, A);q = d3_geo_spherical(q);if(!two)return q;var λ0=a[0], λ1=b[0], φ0=a[1], φ1=b[1], z;if(λ1 < λ0)z = λ0, λ0 = λ1, λ1 = z;var δλ=λ1 - λ0, polar=abs(δλ - π) < ε, meridian=polar || δλ < ε;if(!polar && φ1 < φ0)z = φ0, φ0 = φ1, φ1 = z;if(meridian?polar?φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε?φ0:φ1):φ0 <= q[1] && q[1] <= φ1:δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)){var q1=d3_geo_cartesianScale(u, (-w + t) / uu);d3_geo_cartesianAdd(q1, A);return [q, d3_geo_spherical(q1)];}}function code(λ, φ){var r=smallRadius?radius:π - radius, code=0;if(λ < -r)code |= 1;else if(λ > r)code |= 2;if(φ < -r)code |= 4;else if(φ > r)code |= 8;return code;}}function d3_geom_clipLine(x0, y0, x1, y1){return function(line){var a=line.a, b=line.b, ax=a.x, ay=a.y, bx=b.x, by=b.y, t0=0, t1=1, dx=bx - ax, dy=by - ay, r;r = x0 - ax;if(!dx && r > 0)return;r /= dx;if(dx < 0){if(r < t0)return;if(r < t1)t1 = r;}else if(dx > 0){if(r > t1)return;if(r > t0)t0 = r;}r = x1 - ax;if(!dx && r < 0)return;r /= dx;if(dx < 0){if(r > t1)return;if(r > t0)t0 = r;}else if(dx > 0){if(r < t0)return;if(r < t1)t1 = r;}r = y0 - ay;if(!dy && r > 0)return;r /= dy;if(dy < 0){if(r < t0)return;if(r < t1)t1 = r;}else if(dy > 0){if(r > t1)return;if(r > t0)t0 = r;}r = y1 - ay;if(!dy && r < 0)return;r /= dy;if(dy < 0){if(r > t1)return;if(r > t0)t0 = r;}else if(dy > 0){if(r < t0)return;if(r < t1)t1 = r;}if(t0 > 0)line.a = {x:ax + t0 * dx, y:ay + t0 * dy};if(t1 < 1)line.b = {x:ax + t1 * dx, y:ay + t1 * dy};return line;};}var d3_geo_clipExtentMAX=1000000000;d3.geo.clipExtent = function(){var x0, y0, x1, y1, _stream, clip, clipExtent={stream:function stream(output){if(_stream)_stream.valid = false;_stream = clip(output);_stream.valid = true;return _stream;}, extent:function extent(_){if(!arguments.length)return [[x0, y0], [x1, y1]];clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);if(_stream)_stream.valid = false, _stream = null;return clipExtent;}};return clipExtent.extent([[0, 0], [960, 500]]);};function d3_geo_clipExtent(x0, y0, x1, y1){return function(listener){var listener_=listener, bufferListener=d3_geo_clipBufferListener(), clipLine=d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;var clip={point:point, lineStart:lineStart, lineEnd:lineEnd, polygonStart:function polygonStart(){listener = bufferListener;segments = [];polygon = [];clean = true;}, polygonEnd:function polygonEnd(){listener = listener_;segments = d3.merge(segments);var clipStartInside=insidePolygon([x0, y1]), inside=clean && clipStartInside, visible=segments.length;if(inside || visible){listener.polygonStart();if(inside){listener.lineStart();interpolate(null, null, 1, listener);listener.lineEnd();}if(visible){d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);}listener.polygonEnd();}segments = polygon = ring = null;}};function insidePolygon(p){var wn=0, n=polygon.length, y=p[1];for(var i=0; i < n; ++i) {for(var j=1, v=polygon[i], m=v.length, a=v[0], b; j < m; ++j) {b = v[j];if(a[1] <= y){if(b[1] > y && d3_cross2d(a, b, p) > 0)++wn;}else {if(b[1] <= y && d3_cross2d(a, b, p) < 0)--wn;}a = b;}}return wn !== 0;}function interpolate(from, to, direction, listener){var a=0, a1=0;if(from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0){do {listener.point(a === 0 || a === 3?x0:x1, a > 1?y1:y0);}while((a = (a + direction + 4) % 4) !== a1);}else {listener.point(to[0], to[1]);}}function pointVisible(x, y){return x0 <= x && x <= x1 && y0 <= y && y <= y1;}function point(x, y){if(pointVisible(x, y))listener.point(x, y);}var x__, y__, v__, x_, y_, v_, first, clean;function lineStart(){clip.point = linePoint;if(polygon)polygon.push(ring = []);first = true;v_ = false;x_ = y_ = NaN;}function lineEnd(){if(segments){linePoint(x__, y__);if(v__ && v_)bufferListener.rejoin();segments.push(bufferListener.buffer());}clip.point = point;if(v_)listener.lineEnd();}function linePoint(x, y){x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));var v=pointVisible(x, y);if(polygon)ring.push([x, y]);if(first){x__ = x, y__ = y, v__ = v;first = false;if(v){listener.lineStart();listener.point(x, y);}}else {if(v && v_)listener.point(x, y);else {var l={a:{x:x_, y:y_}, b:{x:x, y:y}};if(clipLine(l)){if(!v_){listener.lineStart();listener.point(l.a.x, l.a.y);}listener.point(l.b.x, l.b.y);if(!v)listener.lineEnd();clean = false;}else if(v){listener.lineStart();listener.point(x, y);clean = false;}}}x_ = x, y_ = y, v_ = v;}return clip;};function corner(p, direction){return abs(p[0] - x0) < ε?direction > 0?0:3:abs(p[0] - x1) < ε?direction > 0?2:1:abs(p[1] - y0) < ε?direction > 0?1:0:direction > 0?3:2;}function compare(a, b){return comparePoints(a.x, b.x);}function comparePoints(a, b){var ca=corner(a, 1), cb=corner(b, 1);return ca !== cb?ca - cb:ca === 0?b[1] - a[1]:ca === 1?a[0] - b[0]:ca === 2?a[1] - b[1]:b[0] - a[0];}}function d3_geo_conic(projectAt){var φ0=0, φ1=π / 3, m=d3_geo_projectionMutator(projectAt), p=m(φ0, φ1);p.parallels = function(_){if(!arguments.length)return [φ0 / π * 180, φ1 / π * 180];return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);};return p;}function d3_geo_conicEqualArea(φ0, φ1){var sinφ0=Math.sin(φ0), n=(sinφ0 + Math.sin(φ1)) / 2, C=1 + sinφ0 * (2 * n - sinφ0), ρ0=Math.sqrt(C) / n;function forward(λ, φ){var ρ=Math.sqrt(C - 2 * n * Math.sin(φ)) / n;return [ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ)];}forward.invert = function(x, y){var ρ0_y=ρ0 - y;return [Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n))];};return forward;}(d3.geo.conicEqualArea = function(){return d3_geo_conic(d3_geo_conicEqualArea);}).raw = d3_geo_conicEqualArea;d3.geo.albers = function(){return d3.geo.conicEqualArea().rotate([96, 0]).center([-0.6, 38.7]).parallels([29.5, 45.5]).scale(1070);};d3.geo.albersUsa = function(){var lower48=d3.geo.albers();var alaska=d3.geo.conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]);var hawaii=d3.geo.conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]);var _point, pointStream={point:function point(x, y){_point = [x, y];}}, lower48Point, alaskaPoint, hawaiiPoint;function albersUsa(coordinates){var x=coordinates[0], y=coordinates[1];_point = null;(lower48Point(x, y), _point) || (alaskaPoint(x, y), _point) || hawaiiPoint(x, y);return _point;}albersUsa.invert = function(coordinates){var k=lower48.scale(), t=lower48.translate(), x=(coordinates[0] - t[0]) / k, y=(coordinates[1] - t[1]) / k;return (y >= 0.12 && y < 0.234 && x >= -0.425 && x < -0.214?alaska:y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115?hawaii:lower48).invert(coordinates);};albersUsa.stream = function(stream){var lower48Stream=lower48.stream(stream), alaskaStream=alaska.stream(stream), hawaiiStream=hawaii.stream(stream);return {point:function point(x, y){lower48Stream.point(x, y);alaskaStream.point(x, y);hawaiiStream.point(x, y);}, sphere:function sphere(){lower48Stream.sphere();alaskaStream.sphere();hawaiiStream.sphere();}, lineStart:function lineStart(){lower48Stream.lineStart();alaskaStream.lineStart();hawaiiStream.lineStart();}, lineEnd:function lineEnd(){lower48Stream.lineEnd();alaskaStream.lineEnd();hawaiiStream.lineEnd();}, polygonStart:function polygonStart(){lower48Stream.polygonStart();alaskaStream.polygonStart();hawaiiStream.polygonStart();}, polygonEnd:function polygonEnd(){lower48Stream.polygonEnd();alaskaStream.polygonEnd();hawaiiStream.polygonEnd();}};};albersUsa.precision = function(_){if(!arguments.length)return lower48.precision();lower48.precision(_);alaska.precision(_);hawaii.precision(_);return albersUsa;};albersUsa.scale = function(_){if(!arguments.length)return lower48.scale();lower48.scale(_);alaska.scale(_ * 0.35);hawaii.scale(_);return albersUsa.translate(lower48.translate());};albersUsa.translate = function(_){if(!arguments.length)return lower48.translate();var k=lower48.scale(), x=+_[0], y=+_[1];lower48Point = lower48.translate(_).clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]]).stream(pointStream).point;alaskaPoint = alaska.translate([x - 0.307 * k, y + 0.201 * k]).clipExtent([[x - 0.425 * k + ε, y + 0.12 * k + ε], [x - 0.214 * k - ε, y + 0.234 * k - ε]]).stream(pointStream).point;hawaiiPoint = hawaii.translate([x - 0.205 * k, y + 0.212 * k]).clipExtent([[x - 0.214 * k + ε, y + 0.166 * k + ε], [x - 0.115 * k - ε, y + 0.234 * k - ε]]).stream(pointStream).point;return albersUsa;};return albersUsa.scale(1070);};var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea={point:d3_noop, lineStart:d3_noop, lineEnd:d3_noop, polygonStart:function polygonStart(){d3_geo_pathAreaPolygon = 0;d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;}, polygonEnd:function polygonEnd(){d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);}};function d3_geo_pathAreaRingStart(){var x00, y00, x0, y0;d3_geo_pathArea.point = function(x, y){d3_geo_pathArea.point = nextPoint;x00 = x0 = x, y00 = y0 = y;};function nextPoint(x, y){d3_geo_pathAreaPolygon += y0 * x - x0 * y;x0 = x, y0 = y;}d3_geo_pathArea.lineEnd = function(){nextPoint(x00, y00);};}var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;var d3_geo_pathBounds={point:d3_geo_pathBoundsPoint, lineStart:d3_noop, lineEnd:d3_noop, polygonStart:d3_noop, polygonEnd:d3_noop};function d3_geo_pathBoundsPoint(x, y){if(x < d3_geo_pathBoundsX0)d3_geo_pathBoundsX0 = x;if(x > d3_geo_pathBoundsX1)d3_geo_pathBoundsX1 = x;if(y < d3_geo_pathBoundsY0)d3_geo_pathBoundsY0 = y;if(y > d3_geo_pathBoundsY1)d3_geo_pathBoundsY1 = y;}function d3_geo_pathBuffer(){var pointCircle=d3_geo_pathBufferCircle(4.5), buffer=[];var stream={point:point, lineStart:function lineStart(){stream.point = pointLineStart;}, lineEnd:lineEnd, polygonStart:function polygonStart(){stream.lineEnd = lineEndPolygon;}, polygonEnd:function polygonEnd(){stream.lineEnd = lineEnd;stream.point = point;}, pointRadius:function pointRadius(_){pointCircle = d3_geo_pathBufferCircle(_);return stream;}, result:function result(){if(buffer.length){var result=buffer.join("");buffer = [];return result;}}};function point(x, y){buffer.push("M", x, ",", y, pointCircle);}function pointLineStart(x, y){buffer.push("M", x, ",", y);stream.point = pointLine;}function pointLine(x, y){buffer.push("L", x, ",", y);}function lineEnd(){stream.point = point;}function lineEndPolygon(){buffer.push("Z");}return stream;}function d3_geo_pathBufferCircle(radius){return "m0," + radius + "a" + radius + "," + radius + " 0 1,1 0," + -2 * radius + "a" + radius + "," + radius + " 0 1,1 0," + 2 * radius + "z";}var d3_geo_pathCentroid={point:d3_geo_pathCentroidPoint, lineStart:d3_geo_pathCentroidLineStart, lineEnd:d3_geo_pathCentroidLineEnd, polygonStart:function polygonStart(){d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;}, polygonEnd:function polygonEnd(){d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;}};function d3_geo_pathCentroidPoint(x, y){d3_geo_centroidX0 += x;d3_geo_centroidY0 += y;++d3_geo_centroidZ0;}function d3_geo_pathCentroidLineStart(){var x0, y0;d3_geo_pathCentroid.point = function(x, y){d3_geo_pathCentroid.point = nextPoint;d3_geo_pathCentroidPoint(x0 = x, y0 = y);};function nextPoint(x, y){var dx=x - x0, dy=y - y0, z=Math.sqrt(dx * dx + dy * dy);d3_geo_centroidX1 += z * (x0 + x) / 2;d3_geo_centroidY1 += z * (y0 + y) / 2;d3_geo_centroidZ1 += z;d3_geo_pathCentroidPoint(x0 = x, y0 = y);}}function d3_geo_pathCentroidLineEnd(){d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;}function d3_geo_pathCentroidRingStart(){var x00, y00, x0, y0;d3_geo_pathCentroid.point = function(x, y){d3_geo_pathCentroid.point = nextPoint;d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);};function nextPoint(x, y){var dx=x - x0, dy=y - y0, z=Math.sqrt(dx * dx + dy * dy);d3_geo_centroidX1 += z * (x0 + x) / 2;d3_geo_centroidY1 += z * (y0 + y) / 2;d3_geo_centroidZ1 += z;z = y0 * x - x0 * y;d3_geo_centroidX2 += z * (x0 + x);d3_geo_centroidY2 += z * (y0 + y);d3_geo_centroidZ2 += z * 3;d3_geo_pathCentroidPoint(x0 = x, y0 = y);}d3_geo_pathCentroid.lineEnd = function(){nextPoint(x00, y00);};}function d3_geo_pathContext(context){var _pointRadius=4.5;var stream={point:point, lineStart:function lineStart(){stream.point = pointLineStart;}, lineEnd:lineEnd, polygonStart:function polygonStart(){stream.lineEnd = lineEndPolygon;}, polygonEnd:function polygonEnd(){stream.lineEnd = lineEnd;stream.point = point;}, pointRadius:function pointRadius(_){_pointRadius = _;return stream;}, result:d3_noop};function point(x, y){context.moveTo(x + _pointRadius, y);context.arc(x, y, _pointRadius, 0, τ);}function pointLineStart(x, y){context.moveTo(x, y);stream.point = pointLine;}function pointLine(x, y){context.lineTo(x, y);}function lineEnd(){stream.point = point;}function lineEndPolygon(){context.closePath();}return stream;}function d3_geo_resample(project){var δ2=0.5, cosMinDistance=Math.cos(30 * d3_radians), maxDepth=16;function resample(stream){return (maxDepth?resampleRecursive:resampleNone)(stream);}function resampleNone(stream){return d3_geo_transformPoint(stream, function(x, y){x = project(x, y);stream.point(x[0], x[1]);});}function resampleRecursive(stream){var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;var resample={point:point, lineStart:lineStart, lineEnd:lineEnd, polygonStart:function polygonStart(){stream.polygonStart();resample.lineStart = ringStart;}, polygonEnd:function polygonEnd(){stream.polygonEnd();resample.lineStart = lineStart;}};function point(x, y){x = project(x, y);stream.point(x[0], x[1]);}function lineStart(){x0 = NaN;resample.point = linePoint;stream.lineStart();}function linePoint(λ, φ){var c=d3_geo_cartesian([λ, φ]), p=project(λ, φ);resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);stream.point(x0, y0);}function lineEnd(){resample.point = point;stream.lineEnd();}function ringStart(){lineStart();resample.point = ringPoint;resample.lineEnd = ringEnd;}function ringPoint(λ, φ){linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;resample.point = linePoint;}function ringEnd(){resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);resample.lineEnd = lineEnd;lineEnd();}return resample;}function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream){var dx=x1 - x0, dy=y1 - y0, d2=dx * dx + dy * dy;if(d2 > 4 * δ2 && depth--){var a=a0 + a1, b=b0 + b1, c=c0 + c1, m=Math.sqrt(a * a + b * b + c * c), φ2=Math.asin(c /= m), λ2=abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε?(λ0 + λ1) / 2:Math.atan2(b, a), p=project(λ2, φ2), x2=p[0], y2=p[1], dx2=x2 - x0, dy2=y2 - y0, dz=dy * dx2 - dx * dy2;if(dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance){resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);stream.point(x2, y2);resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);}}}resample.precision = function(_){if(!arguments.length)return Math.sqrt(δ2);maxDepth = (δ2 = _ * _) > 0 && 16;return resample;};return resample;}d3.geo.path = function(){var pointRadius=4.5, projection, context, projectStream, contextStream, cacheStream;function path(object){if(object){if(typeof pointRadius === "function")contextStream.pointRadius(+pointRadius.apply(this, arguments));if(!cacheStream || !cacheStream.valid)cacheStream = projectStream(contextStream);d3.geo.stream(object, cacheStream);}return contextStream.result();}path.area = function(object){d3_geo_pathAreaSum = 0;d3.geo.stream(object, projectStream(d3_geo_pathArea));return d3_geo_pathAreaSum;};path.centroid = function(object){d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;d3.geo.stream(object, projectStream(d3_geo_pathCentroid));return d3_geo_centroidZ2?[d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2]:d3_geo_centroidZ1?[d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1]:d3_geo_centroidZ0?[d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0]:[NaN, NaN];};path.bounds = function(object){d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);d3.geo.stream(object, projectStream(d3_geo_pathBounds));return [[d3_geo_pathBoundsX0, d3_geo_pathBoundsY0], [d3_geo_pathBoundsX1, d3_geo_pathBoundsY1]];};path.projection = function(_){if(!arguments.length)return projection;projectStream = (projection = _)?_.stream || d3_geo_pathProjectStream(_):d3_identity;return reset();};path.context = function(_){if(!arguments.length)return context;contextStream = (context = _) == null?new d3_geo_pathBuffer():new d3_geo_pathContext(_);if(typeof pointRadius !== "function")contextStream.pointRadius(pointRadius);return reset();};path.pointRadius = function(_){if(!arguments.length)return pointRadius;pointRadius = typeof _ === "function"?_:(contextStream.pointRadius(+_), +_);return path;};function reset(){cacheStream = null;return path;}return path.projection(d3.geo.albersUsa()).context(null);};function d3_geo_pathProjectStream(project){var resample=d3_geo_resample(function(x, y){return project([x * d3_degrees, y * d3_degrees]);});return function(stream){return d3_geo_projectionRadians(resample(stream));};}d3.geo.transform = function(methods){return {stream:function stream(_stream2){var transform=new d3_geo_transform(_stream2);for(var k in methods) transform[k] = methods[k];return transform;}};};function d3_geo_transform(stream){this.stream = stream;}d3_geo_transform.prototype = {point:function point(x, y){this.stream.point(x, y);}, sphere:function sphere(){this.stream.sphere();}, lineStart:function lineStart(){this.stream.lineStart();}, lineEnd:function lineEnd(){this.stream.lineEnd();}, polygonStart:function polygonStart(){this.stream.polygonStart();}, polygonEnd:function polygonEnd(){this.stream.polygonEnd();}};function d3_geo_transformPoint(stream, point){return {point:point, sphere:function sphere(){stream.sphere();}, lineStart:function lineStart(){stream.lineStart();}, lineEnd:function lineEnd(){stream.lineEnd();}, polygonStart:function polygonStart(){stream.polygonStart();}, polygonEnd:function polygonEnd(){stream.polygonEnd();}};}d3.geo.projection = d3_geo_projection;d3.geo.projectionMutator = d3_geo_projectionMutator;function d3_geo_projection(project){return d3_geo_projectionMutator(function(){return project;})();}function d3_geo_projectionMutator(projectAt){var project, rotate, projectRotate, projectResample=d3_geo_resample(function(x, y){x = project(x, y);return [x[0] * k + δx, δy - x[1] * k];}), k=150, x=480, y=250, λ=0, φ=0, δλ=0, δφ=0, δγ=0, δx, δy, preclip=d3_geo_clipAntimeridian, postclip=d3_identity, clipAngle=null, clipExtent=null, stream;function projection(point){point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);return [point[0] * k + δx, δy - point[1] * k];}function invert(point){point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);return point && [point[0] * d3_degrees, point[1] * d3_degrees];}projection.stream = function(output){if(stream)stream.valid = false;stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));stream.valid = true;return stream;};projection.clipAngle = function(_){if(!arguments.length)return clipAngle;preclip = _ == null?(clipAngle = _, d3_geo_clipAntimeridian):d3_geo_clipCircle((clipAngle = +_) * d3_radians);return invalidate();};projection.clipExtent = function(_){if(!arguments.length)return clipExtent;clipExtent = _;postclip = _?d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]):d3_identity;return invalidate();};projection.scale = function(_){if(!arguments.length)return k;k = +_;return reset();};projection.translate = function(_){if(!arguments.length)return [x, y];x = +_[0];y = +_[1];return reset();};projection.center = function(_){if(!arguments.length)return [λ * d3_degrees, φ * d3_degrees];λ = _[0] % 360 * d3_radians;φ = _[1] % 360 * d3_radians;return reset();};projection.rotate = function(_){if(!arguments.length)return [δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees];δλ = _[0] % 360 * d3_radians;δφ = _[1] % 360 * d3_radians;δγ = _.length > 2?_[2] % 360 * d3_radians:0;return reset();};d3.rebind(projection, projectResample, "precision");function reset(){projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);var center=project(λ, φ);δx = x - center[0] * k;δy = y + center[1] * k;return invalidate();}function invalidate(){if(stream)stream.valid = false, stream = null;return projection;}return function(){project = projectAt.apply(this, arguments);projection.invert = project.invert && invert;return reset();};}function d3_geo_projectionRadians(stream){return d3_geo_transformPoint(stream, function(x, y){stream.point(x * d3_radians, y * d3_radians);});}function d3_geo_equirectangular(λ, φ){return [λ, φ];}(d3.geo.equirectangular = function(){return d3_geo_projection(d3_geo_equirectangular);}).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;d3.geo.rotation = function(rotate){rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2?rotate[2] * d3_radians:0);function forward(coordinates){coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);return (coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates);}forward.invert = function(coordinates){coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);return (coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates);};return forward;};function d3_geo_identityRotation(λ, φ){return [λ > π?λ - τ:λ < -π?λ + τ:λ, φ];}d3_geo_identityRotation.invert = d3_geo_equirectangular;function d3_geo_rotation(δλ, δφ, δγ){return δλ?δφ || δγ?d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)):d3_geo_rotationλ(δλ):δφ || δγ?d3_geo_rotationφγ(δφ, δγ):d3_geo_identityRotation;}function d3_geo_forwardRotationλ(δλ){return function(λ, φ){return (λ += δλ, [λ > π?λ - τ:λ < -π?λ + τ:λ, φ]);};}function d3_geo_rotationλ(δλ){var rotation=d3_geo_forwardRotationλ(δλ);rotation.invert = d3_geo_forwardRotationλ(-δλ);return rotation;}function d3_geo_rotationφγ(δφ, δγ){var cosδφ=Math.cos(δφ), sinδφ=Math.sin(δφ), cosδγ=Math.cos(δγ), sinδγ=Math.sin(δγ);function rotation(λ, φ){var cosφ=Math.cos(φ), x=Math.cos(λ) * cosφ, y=Math.sin(λ) * cosφ, z=Math.sin(φ), k=z * cosδφ + x * sinδφ;return [Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ)];}rotation.invert = function(λ, φ){var cosφ=Math.cos(φ), x=Math.cos(λ) * cosφ, y=Math.sin(λ) * cosφ, z=Math.sin(φ), k=z * cosδγ - y * sinδγ;return [Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ)];};return rotation;}d3.geo.circle = function(){var origin=[0, 0], angle, precision=6, interpolate;function circle(){var center=typeof origin === "function"?origin.apply(this, arguments):origin, rotate=d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring=[];interpolate(null, null, 1, {point:function point(x, y){ring.push(x = rotate(x, y));x[0] *= d3_degrees, x[1] *= d3_degrees;}});return {type:"Polygon", coordinates:[ring]};}circle.origin = function(x){if(!arguments.length)return origin;origin = x;return circle;};circle.angle = function(x){if(!arguments.length)return angle;interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);return circle;};circle.precision = function(_){if(!arguments.length)return precision;interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);return circle;};return circle.angle(90);};function d3_geo_circleInterpolate(radius, precision){var cr=Math.cos(radius), sr=Math.sin(radius);return function(from, to, direction, listener){var step=direction * precision;if(from != null){from = d3_geo_circleAngle(cr, from);to = d3_geo_circleAngle(cr, to);if(direction > 0?from < to:from > to)from += direction * τ;}else {from = radius + direction * τ;to = radius - 0.5 * step;}for(var point, t=from; direction > 0?t > to:t < to; t -= step) {listener.point((point = d3_geo_spherical([cr, -sr * Math.cos(t), -sr * Math.sin(t)]))[0], point[1]);}};}function d3_geo_circleAngle(cr, point){var a=d3_geo_cartesian(point);a[0] -= cr;d3_geo_cartesianNormalize(a);var angle=d3_acos(-a[1]);return ((-a[2] < 0?-angle:angle) + 2 * Math.PI - ε) % (2 * Math.PI);}d3.geo.distance = function(a, b){var Δλ=(b[0] - a[0]) * d3_radians, φ0=a[1] * d3_radians, φ1=b[1] * d3_radians, sinΔλ=Math.sin(Δλ), cosΔλ=Math.cos(Δλ), sinφ0=Math.sin(φ0), cosφ0=Math.cos(φ0), sinφ1=Math.sin(φ1), cosφ1=Math.cos(φ1), t;return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);};d3.geo.graticule = function(){var x1, x0, X1, X0, y1, y0, Y1, Y0, dx=10, dy=dx, DX=90, DY=360, x, y, X, Y, precision=2.5;function graticule(){return {type:"MultiLineString", coordinates:lines()};}function lines(){return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x){return abs(x % DX) > ε;}).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y){return abs(y % DY) > ε;}).map(y));}graticule.lines = function(){return lines().map(function(coordinates){return {type:"LineString", coordinates:coordinates};});};graticule.outline = function(){return {type:"Polygon", coordinates:[X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1))]};};graticule.extent = function(_){if(!arguments.length)return graticule.minorExtent();return graticule.majorExtent(_).minorExtent(_);};graticule.majorExtent = function(_){if(!arguments.length)return [[X0, Y0], [X1, Y1]];X0 = +_[0][0], X1 = +_[1][0];Y0 = +_[0][1], Y1 = +_[1][1];if(X0 > X1)_ = X0, X0 = X1, X1 = _;if(Y0 > Y1)_ = Y0, Y0 = Y1, Y1 = _;return graticule.precision(precision);};graticule.minorExtent = function(_){if(!arguments.length)return [[x0, y0], [x1, y1]];x0 = +_[0][0], x1 = +_[1][0];y0 = +_[0][1], y1 = +_[1][1];if(x0 > x1)_ = x0, x0 = x1, x1 = _;if(y0 > y1)_ = y0, y0 = y1, y1 = _;return graticule.precision(precision);};graticule.step = function(_){if(!arguments.length)return graticule.minorStep();return graticule.majorStep(_).minorStep(_);};graticule.majorStep = function(_){if(!arguments.length)return [DX, DY];DX = +_[0], DY = +_[1];return graticule;};graticule.minorStep = function(_){if(!arguments.length)return [dx, dy];dx = +_[0], dy = +_[1];return graticule;};graticule.precision = function(_){if(!arguments.length)return precision;precision = +_;x = d3_geo_graticuleX(y0, y1, 90);y = d3_geo_graticuleY(x0, x1, precision);X = d3_geo_graticuleX(Y0, Y1, 90);Y = d3_geo_graticuleY(X0, X1, precision);return graticule;};return graticule.majorExtent([[-180, -90 + ε], [180, 90 - ε]]).minorExtent([[-180, -80 - ε], [180, 80 + ε]]);};function d3_geo_graticuleX(y0, y1, dy){var y=d3.range(y0, y1 - ε, dy).concat(y1);return function(x){return y.map(function(y){return [x, y];});};}function d3_geo_graticuleY(x0, x1, dx){var x=d3.range(x0, x1 - ε, dx).concat(x1);return function(y){return x.map(function(x){return [x, y];});};}function d3_source(d){return d.source;}function d3_target(d){return d.target;}d3.geo.greatArc = function(){var source=d3_source, source_, target=d3_target, target_;function greatArc(){return {type:"LineString", coordinates:[source_ || source.apply(this, arguments), target_ || target.apply(this, arguments)]};}greatArc.distance = function(){return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));};greatArc.source = function(_){if(!arguments.length)return source;source = _, source_ = typeof _ === "function"?null:_;return greatArc;};greatArc.target = function(_){if(!arguments.length)return target;target = _, target_ = typeof _ === "function"?null:_;return greatArc;};greatArc.precision = function(){return arguments.length?greatArc:0;};return greatArc;};d3.geo.interpolate = function(source, target){return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);};function d3_geo_interpolate(x0, y0, x1, y1){var cy0=Math.cos(y0), sy0=Math.sin(y0), cy1=Math.cos(y1), sy1=Math.sin(y1), kx0=cy0 * Math.cos(x0), ky0=cy0 * Math.sin(x0), kx1=cy1 * Math.cos(x1), ky1=cy1 * Math.sin(x1), d=2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k=1 / Math.sin(d);var interpolate=d?function(t){var B=Math.sin(t *= d) * k, A=Math.sin(d - t) * k, x=A * kx0 + B * kx1, y=A * ky0 + B * ky1, z=A * sy0 + B * sy1;return [Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees];}:function(){return [x0 * d3_degrees, y0 * d3_degrees];};interpolate.distance = d;return interpolate;}d3.geo.length = function(object){d3_geo_lengthSum = 0;d3.geo.stream(object, d3_geo_length);return d3_geo_lengthSum;};var d3_geo_lengthSum;var d3_geo_length={sphere:d3_noop, point:d3_noop, lineStart:d3_geo_lengthLineStart, lineEnd:d3_noop, polygonStart:d3_noop, polygonEnd:d3_noop};function d3_geo_lengthLineStart(){var λ0, sinφ0, cosφ0;d3_geo_length.point = function(λ, φ){λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);d3_geo_length.point = nextPoint;};d3_geo_length.lineEnd = function(){d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;};function nextPoint(λ, φ){var sinφ=Math.sin(φ *= d3_radians), cosφ=Math.cos(φ), t=abs((λ *= d3_radians) - λ0), cosΔλ=Math.cos(t);d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;}}function d3_geo_azimuthal(scale, angle){function azimuthal(λ, φ){var cosλ=Math.cos(λ), cosφ=Math.cos(φ), k=scale(cosλ * cosφ);return [k * cosφ * Math.sin(λ), k * Math.sin(φ)];}azimuthal.invert = function(x, y){var ρ=Math.sqrt(x * x + y * y), c=angle(ρ), sinc=Math.sin(c), cosc=Math.cos(c);return [Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ)];};return azimuthal;}var d3_geo_azimuthalEqualArea=d3_geo_azimuthal(function(cosλcosφ){return Math.sqrt(2 / (1 + cosλcosφ));}, function(ρ){return 2 * Math.asin(ρ / 2);});(d3.geo.azimuthalEqualArea = function(){return d3_geo_projection(d3_geo_azimuthalEqualArea);}).raw = d3_geo_azimuthalEqualArea;var d3_geo_azimuthalEquidistant=d3_geo_azimuthal(function(cosλcosφ){var c=Math.acos(cosλcosφ);return c && c / Math.sin(c);}, d3_identity);(d3.geo.azimuthalEquidistant = function(){return d3_geo_projection(d3_geo_azimuthalEquidistant);}).raw = d3_geo_azimuthalEquidistant;function d3_geo_conicConformal(φ0, φ1){var cosφ0=Math.cos(φ0), t=function t(φ){return Math.tan(π / 4 + φ / 2);}, n=φ0 === φ1?Math.sin(φ0):Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F=cosφ0 * Math.pow(t(φ0), n) / n;if(!n)return d3_geo_mercator;function forward(λ, φ){if(F > 0){if(φ < -halfπ + ε)φ = -halfπ + ε;}else {if(φ > halfπ - ε)φ = halfπ - ε;}var ρ=F / Math.pow(t(φ), n);return [ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ)];}forward.invert = function(x, y){var ρ0_y=F - y, ρ=d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);return [Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ];};return forward;}(d3.geo.conicConformal = function(){return d3_geo_conic(d3_geo_conicConformal);}).raw = d3_geo_conicConformal;function d3_geo_conicEquidistant(φ0, φ1){var cosφ0=Math.cos(φ0), n=φ0 === φ1?Math.sin(φ0):(cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G=cosφ0 / n + φ0;if(abs(n) < ε)return d3_geo_equirectangular;function forward(λ, φ){var ρ=G - φ;return [ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ)];}forward.invert = function(x, y){var ρ0_y=G - y;return [Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y)];};return forward;}(d3.geo.conicEquidistant = function(){return d3_geo_conic(d3_geo_conicEquidistant);}).raw = d3_geo_conicEquidistant;var d3_geo_gnomonic=d3_geo_azimuthal(function(cosλcosφ){return 1 / cosλcosφ;}, Math.atan);(d3.geo.gnomonic = function(){return d3_geo_projection(d3_geo_gnomonic);}).raw = d3_geo_gnomonic;function d3_geo_mercator(λ, φ){return [λ, Math.log(Math.tan(π / 4 + φ / 2))];}d3_geo_mercator.invert = function(x, y){return [x, 2 * Math.atan(Math.exp(y)) - halfπ];};function d3_geo_mercatorProjection(project){var m=d3_geo_projection(project), scale=m.scale, translate=m.translate, clipExtent=m.clipExtent, clipAuto;m.scale = function(){var v=scale.apply(m, arguments);return v === m?clipAuto?m.clipExtent(null):m:v;};m.translate = function(){var v=translate.apply(m, arguments);return v === m?clipAuto?m.clipExtent(null):m:v;};m.clipExtent = function(_){var v=clipExtent.apply(m, arguments);if(v === m){if(clipAuto = _ == null){var k=π * scale(), t=translate();clipExtent([[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]]);}}else if(clipAuto){v = null;}return v;};return m.clipExtent(null);}(d3.geo.mercator = function(){return d3_geo_mercatorProjection(d3_geo_mercator);}).raw = d3_geo_mercator;var d3_geo_orthographic=d3_geo_azimuthal(function(){return 1;}, Math.asin);(d3.geo.orthographic = function(){return d3_geo_projection(d3_geo_orthographic);}).raw = d3_geo_orthographic;var d3_geo_stereographic=d3_geo_azimuthal(function(cosλcosφ){return 1 / (1 + cosλcosφ);}, function(ρ){return 2 * Math.atan(ρ);});(d3.geo.stereographic = function(){return d3_geo_projection(d3_geo_stereographic);}).raw = d3_geo_stereographic;function d3_geo_transverseMercator(λ, φ){return [Math.log(Math.tan(π / 4 + φ / 2)), -λ];}d3_geo_transverseMercator.invert = function(x, y){return [-y, 2 * Math.atan(Math.exp(x)) - halfπ];};(d3.geo.transverseMercator = function(){var projection=d3_geo_mercatorProjection(d3_geo_transverseMercator), center=projection.center, rotate=projection.rotate;projection.center = function(_){return _?center([-_[1], _[0]]):(_ = center(), [_[1], -_[0]]);};projection.rotate = function(_){return _?rotate([_[0], _[1], _.length > 2?_[2] + 90:90]):(_ = rotate(), [_[0], _[1], _[2] - 90]);};return rotate([0, 0, 90]);}).raw = d3_geo_transverseMercator;d3.geom = {};function d3_geom_pointX(d){return d[0];}function d3_geom_pointY(d){return d[1];}d3.geom.hull = function(vertices){var x=d3_geom_pointX, y=d3_geom_pointY;if(arguments.length)return hull(vertices);function hull(data){if(data.length < 3)return [];var fx=d3_functor(x), fy=d3_functor(y), i, n=data.length, points=[], flippedPoints=[];for(i = 0; i < n; i++) {points.push([+fx.call(this, data[i], i), +fy.call(this, data[i], i), i]);}points.sort(d3_geom_hullOrder);for(i = 0; i < n; i++) flippedPoints.push([points[i][0], -points[i][1]]);var upper=d3_geom_hullUpper(points), lower=d3_geom_hullUpper(flippedPoints);var skipLeft=lower[0] === upper[0], skipRight=lower[lower.length - 1] === upper[upper.length - 1], polygon=[];for(i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);for(i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);return polygon;}hull.x = function(_){return arguments.length?(x = _, hull):x;};hull.y = function(_){return arguments.length?(y = _, hull):y;};return hull;};function d3_geom_hullUpper(points){var n=points.length, hull=[0, 1], hs=2;for(var i=2; i < n; i++) {while(hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;hull[hs++] = i;}return hull.slice(0, hs);}function d3_geom_hullOrder(a, b){return a[0] - b[0] || a[1] - b[1];}d3.geom.polygon = function(coordinates){d3_subclass(coordinates, d3_geom_polygonPrototype);return coordinates;};var d3_geom_polygonPrototype=d3.geom.polygon.prototype = [];d3_geom_polygonPrototype.area = function(){var i=-1, n=this.length, a, b=this[n - 1], area=0;while(++i < n) {a = b;b = this[i];area += a[1] * b[0] - a[0] * b[1];}return area * 0.5;};d3_geom_polygonPrototype.centroid = function(k){var i=-1, n=this.length, x=0, y=0, a, b=this[n - 1], c;if(!arguments.length)k = -1 / (6 * this.area());while(++i < n) {a = b;b = this[i];c = a[0] * b[1] - b[0] * a[1];x += (a[0] + b[0]) * c;y += (a[1] + b[1]) * c;}return [x * k, y * k];};d3_geom_polygonPrototype.clip = function(subject){var input, closed=d3_geom_polygonClosed(subject), i=-1, n=this.length - d3_geom_polygonClosed(this), j, m, a=this[n - 1], b, c, d;while(++i < n) {input = subject.slice();subject.length = 0;b = this[i];c = input[(m = input.length - closed) - 1];j = -1;while(++j < m) {d = input[j];if(d3_geom_polygonInside(d, a, b)){if(!d3_geom_polygonInside(c, a, b)){subject.push(d3_geom_polygonIntersect(c, d, a, b));}subject.push(d);}else if(d3_geom_polygonInside(c, a, b)){subject.push(d3_geom_polygonIntersect(c, d, a, b));}c = d;}if(closed)subject.push(subject[0]);a = b;}return subject;};function d3_geom_polygonInside(p, a, b){return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);}function d3_geom_polygonIntersect(c, d, a, b){var x1=c[0], x3=a[0], x21=d[0] - x1, x43=b[0] - x3, y1=c[1], y3=a[1], y21=d[1] - y1, y43=b[1] - y3, ua=(x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);return [x1 + ua * x21, y1 + ua * y21];}function d3_geom_polygonClosed(coordinates){var a=coordinates[0], b=coordinates[coordinates.length - 1];return !(a[0] - b[0] || a[1] - b[1]);}var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool=[], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool=[];function d3_geom_voronoiBeach(){d3_geom_voronoiRedBlackNode(this);this.edge = this.site = this.circle = null;}function d3_geom_voronoiCreateBeach(site){var beach=d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();beach.site = site;return beach;}function d3_geom_voronoiDetachBeach(beach){d3_geom_voronoiDetachCircle(beach);d3_geom_voronoiBeaches.remove(beach);d3_geom_voronoiBeachPool.push(beach);d3_geom_voronoiRedBlackNode(beach);}function d3_geom_voronoiRemoveBeach(beach){var circle=beach.circle, x=circle.x, y=circle.cy, vertex={x:x, y:y}, previous=beach.P, next=beach.N, disappearing=[beach];d3_geom_voronoiDetachBeach(beach);var lArc=previous;while(lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {previous = lArc.P;disappearing.unshift(lArc);d3_geom_voronoiDetachBeach(lArc);lArc = previous;}disappearing.unshift(lArc);d3_geom_voronoiDetachCircle(lArc);var rArc=next;while(rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {next = rArc.N;disappearing.push(rArc);d3_geom_voronoiDetachBeach(rArc);rArc = next;}disappearing.push(rArc);d3_geom_voronoiDetachCircle(rArc);var nArcs=disappearing.length, iArc;for(iArc = 1; iArc < nArcs; ++iArc) {rArc = disappearing[iArc];lArc = disappearing[iArc - 1];d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);}lArc = disappearing[0];rArc = disappearing[nArcs - 1];rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);d3_geom_voronoiAttachCircle(lArc);d3_geom_voronoiAttachCircle(rArc);}function d3_geom_voronoiAddBeach(site){var x=site.x, directrix=site.y, lArc, rArc, dxl, dxr, node=d3_geom_voronoiBeaches._;while(node) {dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;if(dxl > ε)node = node.L;else {dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);if(dxr > ε){if(!node.R){lArc = node;break;}node = node.R;}else {if(dxl > -ε){lArc = node.P;rArc = node;}else if(dxr > -ε){lArc = node;rArc = node.N;}else {lArc = rArc = node;}break;}}}var newArc=d3_geom_voronoiCreateBeach(site);d3_geom_voronoiBeaches.insert(lArc, newArc);if(!lArc && !rArc)return;if(lArc === rArc){d3_geom_voronoiDetachCircle(lArc);rArc = d3_geom_voronoiCreateBeach(lArc.site);d3_geom_voronoiBeaches.insert(newArc, rArc);newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);d3_geom_voronoiAttachCircle(lArc);d3_geom_voronoiAttachCircle(rArc);return;}if(!rArc){newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);return;}d3_geom_voronoiDetachCircle(lArc);d3_geom_voronoiDetachCircle(rArc);var lSite=lArc.site, ax=lSite.x, ay=lSite.y, bx=site.x - ax, by=site.y - ay, rSite=rArc.site, cx=rSite.x - ax, cy=rSite.y - ay, d=2 * (bx * cy - by * cx), hb=bx * bx + by * by, hc=cx * cx + cy * cy, vertex={x:(cy * hb - by * hc) / d + ax, y:(bx * hc - cx * hb) / d + ay};d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);d3_geom_voronoiAttachCircle(lArc);d3_geom_voronoiAttachCircle(rArc);}function d3_geom_voronoiLeftBreakPoint(arc, directrix){var site=arc.site, rfocx=site.x, rfocy=site.y, pby2=rfocy - directrix;if(!pby2)return rfocx;var lArc=arc.P;if(!lArc)return -Infinity;site = lArc.site;var lfocx=site.x, lfocy=site.y, plby2=lfocy - directrix;if(!plby2)return lfocx;var hl=lfocx - rfocx, aby2=1 / pby2 - 1 / plby2, b=hl / plby2;if(aby2)return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;return (rfocx + lfocx) / 2;}function d3_geom_voronoiRightBreakPoint(arc, directrix){var rArc=arc.N;if(rArc)return d3_geom_voronoiLeftBreakPoint(rArc, directrix);var site=arc.site;return site.y === directrix?site.x:Infinity;}function d3_geom_voronoiCell(site){this.site = site;this.edges = [];}d3_geom_voronoiCell.prototype.prepare = function(){var halfEdges=this.edges, iHalfEdge=halfEdges.length, edge;while(iHalfEdge--) {edge = halfEdges[iHalfEdge].edge;if(!edge.b || !edge.a)halfEdges.splice(iHalfEdge, 1);}halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);return halfEdges.length;};function d3_geom_voronoiCloseCells(extent){var x0=extent[0][0], x1=extent[1][0], y0=extent[0][1], y1=extent[1][1], x2, y2, x3, y3, cells=d3_geom_voronoiCells, iCell=cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;while(iCell--) {cell = cells[iCell];if(!cell || !cell.prepare())continue;halfEdges = cell.edges;nHalfEdges = halfEdges.length;iHalfEdge = 0;while(iHalfEdge < nHalfEdges) {end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;if(abs(x3 - x2) > ε || abs(y3 - y2) > ε){halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε?{x:x0, y:abs(x2 - x0) < ε?y2:y1}:abs(y3 - y1) < ε && x1 - x3 > ε?{x:abs(y2 - y1) < ε?x2:x1, y:y1}:abs(x3 - x1) < ε && y3 - y0 > ε?{x:x1, y:abs(x2 - x1) < ε?y2:y0}:abs(y3 - y0) < ε && x3 - x0 > ε?{x:abs(y2 - y0) < ε?x2:x0, y:y0}:null), cell.site, null));++nHalfEdges;}}}}function d3_geom_voronoiHalfEdgeOrder(a, b){return b.angle - a.angle;}function d3_geom_voronoiCircle(){d3_geom_voronoiRedBlackNode(this);this.x = this.y = this.arc = this.site = this.cy = null;}function d3_geom_voronoiAttachCircle(arc){var lArc=arc.P, rArc=arc.N;if(!lArc || !rArc)return;var lSite=lArc.site, cSite=arc.site, rSite=rArc.site;if(lSite === rSite)return;var bx=cSite.x, by=cSite.y, ax=lSite.x - bx, ay=lSite.y - by, cx=rSite.x - bx, cy=rSite.y - by;var d=2 * (ax * cy - ay * cx);if(d >= -ε2)return;var ha=ax * ax + ay * ay, hc=cx * cx + cy * cy, x=(cy * ha - ay * hc) / d, y=(ax * hc - cx * ha) / d, cy=y + by;var circle=d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();circle.arc = arc;circle.site = cSite;circle.x = x + bx;circle.y = cy + Math.sqrt(x * x + y * y);circle.cy = cy;arc.circle = circle;var before=null, node=d3_geom_voronoiCircles._;while(node) {if(circle.y < node.y || circle.y === node.y && circle.x <= node.x){if(node.L)node = node.L;else {before = node.P;break;}}else {if(node.R)node = node.R;else {before = node;break;}}}d3_geom_voronoiCircles.insert(before, circle);if(!before)d3_geom_voronoiFirstCircle = circle;}function d3_geom_voronoiDetachCircle(arc){var circle=arc.circle;if(circle){if(!circle.P)d3_geom_voronoiFirstCircle = circle.N;d3_geom_voronoiCircles.remove(circle);d3_geom_voronoiCirclePool.push(circle);d3_geom_voronoiRedBlackNode(circle);arc.circle = null;}}function d3_geom_voronoiClipEdges(extent){var edges=d3_geom_voronoiEdges, clip=d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i=edges.length, e;while(i--) {e = edges[i];if(!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε){e.a = e.b = null;edges.splice(i, 1);}}}function d3_geom_voronoiConnectEdge(edge, extent){var vb=edge.b;if(vb)return true;var va=edge.a, x0=extent[0][0], x1=extent[1][0], y0=extent[0][1], y1=extent[1][1], lSite=edge.l, rSite=edge.r, lx=lSite.x, ly=lSite.y, rx=rSite.x, ry=rSite.y, fx=(lx + rx) / 2, fy=(ly + ry) / 2, fm, fb;if(ry === ly){if(fx < x0 || fx >= x1)return;if(lx > rx){if(!va)va = {x:fx, y:y0};else if(va.y >= y1)return;vb = {x:fx, y:y1};}else {if(!va)va = {x:fx, y:y1};else if(va.y < y0)return;vb = {x:fx, y:y0};}}else {fm = (lx - rx) / (ry - ly);fb = fy - fm * fx;if(fm < -1 || fm > 1){if(lx > rx){if(!va)va = {x:(y0 - fb) / fm, y:y0};else if(va.y >= y1)return;vb = {x:(y1 - fb) / fm, y:y1};}else {if(!va)va = {x:(y1 - fb) / fm, y:y1};else if(va.y < y0)return;vb = {x:(y0 - fb) / fm, y:y0};}}else {if(ly < ry){if(!va)va = {x:x0, y:fm * x0 + fb};else if(va.x >= x1)return;vb = {x:x1, y:fm * x1 + fb};}else {if(!va)va = {x:x1, y:fm * x1 + fb};else if(va.x < x0)return;vb = {x:x0, y:fm * x0 + fb};}}}edge.a = va;edge.b = vb;return true;}function d3_geom_voronoiEdge(lSite, rSite){this.l = lSite;this.r = rSite;this.a = this.b = null;}function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb){var edge=new d3_geom_voronoiEdge(lSite, rSite);d3_geom_voronoiEdges.push(edge);if(va)d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);if(vb)d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));return edge;}function d3_geom_voronoiCreateBorderEdge(lSite, va, vb){var edge=new d3_geom_voronoiEdge(lSite, null);edge.a = va;edge.b = vb;d3_geom_voronoiEdges.push(edge);return edge;}function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex){if(!edge.a && !edge.b){edge.a = vertex;edge.l = lSite;edge.r = rSite;}else if(edge.l === rSite){edge.b = vertex;}else {edge.a = vertex;}}function d3_geom_voronoiHalfEdge(edge, lSite, rSite){var va=edge.a, vb=edge.b;this.edge = edge;this.site = lSite;this.angle = rSite?Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x):edge.l === lSite?Math.atan2(vb.x - va.x, va.y - vb.y):Math.atan2(va.x - vb.x, vb.y - va.y);}d3_geom_voronoiHalfEdge.prototype = {start:function start(){return this.edge.l === this.site?this.edge.a:this.edge.b;}, end:function end(){return this.edge.l === this.site?this.edge.b:this.edge.a;}};function d3_geom_voronoiRedBlackTree(){this._ = null;}function d3_geom_voronoiRedBlackNode(node){node.U = node.C = node.L = node.R = node.P = node.N = null;}d3_geom_voronoiRedBlackTree.prototype = {insert:function insert(after, node){var parent, grandpa, uncle;if(after){node.P = after;node.N = after.N;if(after.N)after.N.P = node;after.N = node;if(after.R){after = after.R;while(after.L) after = after.L;after.L = node;}else {after.R = node;}parent = after;}else if(this._){after = d3_geom_voronoiRedBlackFirst(this._);node.P = null;node.N = after;after.P = after.L = node;parent = after;}else {node.P = node.N = null;this._ = node;parent = null;}node.L = node.R = null;node.U = parent;node.C = true;after = node;while(parent && parent.C) {grandpa = parent.U;if(parent === grandpa.L){uncle = grandpa.R;if(uncle && uncle.C){parent.C = uncle.C = false;grandpa.C = true;after = grandpa;}else {if(after === parent.R){d3_geom_voronoiRedBlackRotateLeft(this, parent);after = parent;parent = after.U;}parent.C = false;grandpa.C = true;d3_geom_voronoiRedBlackRotateRight(this, grandpa);}}else {uncle = grandpa.L;if(uncle && uncle.C){parent.C = uncle.C = false;grandpa.C = true;after = grandpa;}else {if(after === parent.L){d3_geom_voronoiRedBlackRotateRight(this, parent);after = parent;parent = after.U;}parent.C = false;grandpa.C = true;d3_geom_voronoiRedBlackRotateLeft(this, grandpa);}}parent = after.U;}this._.C = false;}, remove:function remove(node){if(node.N)node.N.P = node.P;if(node.P)node.P.N = node.N;node.N = node.P = null;var parent=node.U, sibling, left=node.L, right=node.R, next, red;if(!left)next = right;else if(!right)next = left;else next = d3_geom_voronoiRedBlackFirst(right);if(parent){if(parent.L === node)parent.L = next;else parent.R = next;}else {this._ = next;}if(left && right){red = next.C;next.C = node.C;next.L = left;left.U = next;if(next !== right){parent = next.U;next.U = node.U;node = next.R;parent.L = node;next.R = right;right.U = next;}else {next.U = parent;parent = next;node = next.R;}}else {red = node.C;node = next;}if(node)node.U = parent;if(red)return;if(node && node.C){node.C = false;return;}do {if(node === this._)break;if(node === parent.L){sibling = parent.R;if(sibling.C){sibling.C = false;parent.C = true;d3_geom_voronoiRedBlackRotateLeft(this, parent);sibling = parent.R;}if(sibling.L && sibling.L.C || sibling.R && sibling.R.C){if(!sibling.R || !sibling.R.C){sibling.L.C = false;sibling.C = true;d3_geom_voronoiRedBlackRotateRight(this, sibling);sibling = parent.R;}sibling.C = parent.C;parent.C = sibling.R.C = false;d3_geom_voronoiRedBlackRotateLeft(this, parent);node = this._;break;}}else {sibling = parent.L;if(sibling.C){sibling.C = false;parent.C = true;d3_geom_voronoiRedBlackRotateRight(this, parent);sibling = parent.L;}if(sibling.L && sibling.L.C || sibling.R && sibling.R.C){if(!sibling.L || !sibling.L.C){sibling.R.C = false;sibling.C = true;d3_geom_voronoiRedBlackRotateLeft(this, sibling);sibling = parent.L;}sibling.C = parent.C;parent.C = sibling.L.C = false;d3_geom_voronoiRedBlackRotateRight(this, parent);node = this._;break;}}sibling.C = true;node = parent;parent = parent.U;}while(!node.C);if(node)node.C = false;}};function d3_geom_voronoiRedBlackRotateLeft(tree, node){var p=node, q=node.R, parent=p.U;if(parent){if(parent.L === p)parent.L = q;else parent.R = q;}else {tree._ = q;}q.U = parent;p.U = q;p.R = q.L;if(p.R)p.R.U = p;q.L = p;}function d3_geom_voronoiRedBlackRotateRight(tree, node){var p=node, q=node.L, parent=p.U;if(parent){if(parent.L === p)parent.L = q;else parent.R = q;}else {tree._ = q;}q.U = parent;p.U = q;p.L = q.R;if(p.L)p.L.U = p;q.R = p;}function d3_geom_voronoiRedBlackFirst(node){while(node.L) node = node.L;return node;}function d3_geom_voronoi(sites, bbox){var site=sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;d3_geom_voronoiEdges = [];d3_geom_voronoiCells = new Array(sites.length);d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();while(true) {circle = d3_geom_voronoiFirstCircle;if(site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)){if(site.x !== x0 || site.y !== y0){d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);d3_geom_voronoiAddBeach(site);x0 = site.x, y0 = site.y;}site = sites.pop();}else if(circle){d3_geom_voronoiRemoveBeach(circle.arc);}else {break;}}if(bbox)d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);var diagram={cells:d3_geom_voronoiCells, edges:d3_geom_voronoiEdges};d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;return diagram;}function d3_geom_voronoiVertexOrder(a, b){return b.y - a.y || b.x - a.x;}d3.geom.voronoi = function(points){var x=d3_geom_pointX, y=d3_geom_pointY, fx=x, fy=y, clipExtent=d3_geom_voronoiClipExtent;if(points)return voronoi(points);function voronoi(data){var polygons=new Array(data.length), x0=clipExtent[0][0], y0=clipExtent[0][1], x1=clipExtent[1][0], y1=clipExtent[1][1];d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i){var edges=cell.edges, site=cell.site, polygon=polygons[i] = edges.length?edges.map(function(e){var s=e.start();return [s.x, s.y];}):site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1?[[x0, y1], [x1, y1], [x1, y0], [x0, y0]]:[];polygon.point = data[i];});return polygons;}function sites(data){return data.map(function(d, i){return {x:Math.round(fx(d, i) / ε) * ε, y:Math.round(fy(d, i) / ε) * ε, i:i};});}voronoi.links = function(data){return d3_geom_voronoi(sites(data)).edges.filter(function(edge){return edge.l && edge.r;}).map(function(edge){return {source:data[edge.l.i], target:data[edge.r.i]};});};voronoi.triangles = function(data){var triangles=[];d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i){var site=cell.site, edges=cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j=-1, m=edges.length, e0, s0, e1=edges[m - 1].edge, s1=e1.l === site?e1.r:e1.l;while(++j < m) {e0 = e1;s0 = s1;e1 = edges[j].edge;s1 = e1.l === site?e1.r:e1.l;if(i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0){triangles.push([data[i], data[s0.i], data[s1.i]]);}}});return triangles;};voronoi.x = function(_){return arguments.length?(fx = d3_functor(x = _), voronoi):x;};voronoi.y = function(_){return arguments.length?(fy = d3_functor(y = _), voronoi):y;};voronoi.clipExtent = function(_){if(!arguments.length)return clipExtent === d3_geom_voronoiClipExtent?null:clipExtent;clipExtent = _ == null?d3_geom_voronoiClipExtent:_;return voronoi;};voronoi.size = function(_){if(!arguments.length)return clipExtent === d3_geom_voronoiClipExtent?null:clipExtent && clipExtent[1];return voronoi.clipExtent(_ && [[0, 0], _]);};return voronoi;};var d3_geom_voronoiClipExtent=[[-1000000, -1000000], [1000000, 1000000]];function d3_geom_voronoiTriangleArea(a, b, c){return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);}d3.geom.delaunay = function(vertices){return d3.geom.voronoi().triangles(vertices);};d3.geom.quadtree = function(points, x1, y1, x2, y2){var x=d3_geom_pointX, y=d3_geom_pointY, compat;if(compat = arguments.length){x = d3_geom_quadtreeCompatX;y = d3_geom_quadtreeCompatY;if(compat === 3){y2 = y1;x2 = x1;y1 = x1 = 0;}return quadtree(points);}function quadtree(data){var d, fx=d3_functor(x), fy=d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;if(x1 != null){x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;}else {x2_ = y2_ = -(x1_ = y1_ = Infinity);xs = [], ys = [];n = data.length;if(compat)for(i = 0; i < n; ++i) {d = data[i];if(d.x < x1_)x1_ = d.x;if(d.y < y1_)y1_ = d.y;if(d.x > x2_)x2_ = d.x;if(d.y > y2_)y2_ = d.y;xs.push(d.x);ys.push(d.y);}else for(i = 0; i < n; ++i) {var x_=+fx(d = data[i], i), y_=+fy(d, i);if(x_ < x1_)x1_ = x_;if(y_ < y1_)y1_ = y_;if(x_ > x2_)x2_ = x_;if(y_ > y2_)y2_ = y_;xs.push(x_);ys.push(y_);}}var dx=x2_ - x1_, dy=y2_ - y1_;if(dx > dy)y2_ = y1_ + dx;else x2_ = x1_ + dy;function insert(n, d, x, y, x1, y1, x2, y2){if(isNaN(x) || isNaN(y))return;if(n.leaf){var nx=n.x, ny=n.y;if(nx != null){if(abs(nx - x) + abs(ny - y) < 0.01){insertChild(n, d, x, y, x1, y1, x2, y2);}else {var nPoint=n.point;n.x = n.y = n.point = null;insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);insertChild(n, d, x, y, x1, y1, x2, y2);}}else {n.x = x, n.y = y, n.point = d;}}else {insertChild(n, d, x, y, x1, y1, x2, y2);}}function insertChild(n, d, x, y, x1, y1, x2, y2){var xm=(x1 + x2) * 0.5, ym=(y1 + y2) * 0.5, right=x >= xm, below=y >= ym, i=below << 1 | right;n.leaf = false;n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());if(right)x1 = xm;else x2 = xm;if(below)y1 = ym;else y2 = ym;insert(n, d, x, y, x1, y1, x2, y2);}var root=d3_geom_quadtreeNode();root.add = function(d){insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);};root.visit = function(f){d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);};root.find = function(point){return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);};i = -1;if(x1 == null){while(++i < n) {insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);}--i;}else data.forEach(root.add);xs = ys = data = d = null;return root;}quadtree.x = function(_){return arguments.length?(x = _, quadtree):x;};quadtree.y = function(_){return arguments.length?(y = _, quadtree):y;};quadtree.extent = function(_){if(!arguments.length)return x1 == null?null:[[x1, y1], [x2, y2]];if(_ == null)x1 = y1 = x2 = y2 = null;else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], y2 = +_[1][1];return quadtree;};quadtree.size = function(_){if(!arguments.length)return x1 == null?null:[x2 - x1, y2 - y1];if(_ == null)x1 = y1 = x2 = y2 = null;else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];return quadtree;};return quadtree;};function d3_geom_quadtreeCompatX(d){return d.x;}function d3_geom_quadtreeCompatY(d){return d.y;}function d3_geom_quadtreeNode(){return {leaf:true, nodes:[], point:null, x:null, y:null};}function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2){if(!f(node, x1, y1, x2, y2)){var sx=(x1 + x2) * 0.5, sy=(y1 + y2) * 0.5, children=node.nodes;if(children[0])d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);if(children[1])d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);if(children[2])d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);if(children[3])d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);}}function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3){var minDistance2=Infinity, closestPoint;(function find(node, x1, y1, x2, y2){if(x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0)return;if(point = node.point){var point, dx=x - node.x, dy=y - node.y, distance2=dx * dx + dy * dy;if(distance2 < minDistance2){var distance=Math.sqrt(minDistance2 = distance2);x0 = x - distance, y0 = y - distance;x3 = x + distance, y3 = y + distance;closestPoint = point;}}var children=node.nodes, xm=(x1 + x2) * 0.5, ym=(y1 + y2) * 0.5, right=x >= xm, below=y >= ym;for(var i=below << 1 | right, j=i + 4; i < j; ++i) {if(node = children[i & 3])switch(i & 3){case 0:find(node, x1, y1, xm, ym);break;case 1:find(node, xm, y1, x2, ym);break;case 2:find(node, x1, ym, xm, y2);break;case 3:find(node, xm, ym, x2, y2);break;}}})(root, x0, y0, x3, y3);return closestPoint;}d3.interpolateRgb = d3_interpolateRgb;function d3_interpolateRgb(a, b){a = d3.rgb(a);b = d3.rgb(b);var ar=a.r, ag=a.g, ab=a.b, br=b.r - ar, bg=b.g - ag, bb=b.b - ab;return function(t){return "#" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));};}d3.interpolateObject = d3_interpolateObject;function d3_interpolateObject(a, b){var i={}, c={}, k;for(k in a) {if(k in b){i[k] = d3_interpolate(a[k], b[k]);}else {c[k] = a[k];}}for(k in b) {if(!(k in a)){c[k] = b[k];}}return function(t){for(k in i) c[k] = i[k](t);return c;};}d3.interpolateNumber = d3_interpolateNumber;function d3_interpolateNumber(a, b){a = +a, b = +b;return function(t){return a * (1 - t) + b * t;};}d3.interpolateString = d3_interpolateString;function d3_interpolateString(a, b){var bi=d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i=-1, s=[], q=[];a = a + "", b = b + "";while((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {if((bs = bm.index) > bi){bs = b.slice(bi, bs);if(s[i])s[i] += bs;else s[++i] = bs;}if((am = am[0]) === (bm = bm[0])){if(s[i])s[i] += bm;else s[++i] = bm;}else {s[++i] = null;q.push({i:i, x:d3_interpolateNumber(am, bm)});}bi = d3_interpolate_numberB.lastIndex;}if(bi < b.length){bs = b.slice(bi);if(s[i])s[i] += bs;else s[++i] = bs;}return s.length < 2?q[0]?(b = q[0].x, function(t){return b(t) + "";}):function(){return b;}:(b = q.length, function(t){for(var i=0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);return s.join("");});}var d3_interpolate_numberA=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g, d3_interpolate_numberB=new RegExp(d3_interpolate_numberA.source, "g");d3.interpolate = d3_interpolate;function d3_interpolate(a, b){var i=d3.interpolators.length, f;while(--i >= 0 && !(f = d3.interpolators[i](a, b)));return f;}d3.interpolators = [function(a, b){var t=typeof b;return (t === "string"?d3_rgb_names.has(b) || /^(#|rgb\(|hsl\()/.test(b)?d3_interpolateRgb:d3_interpolateString:b instanceof d3_color?d3_interpolateRgb:Array.isArray(b)?d3_interpolateArray:t === "object" && isNaN(b)?d3_interpolateObject:d3_interpolateNumber)(a, b);}];d3.interpolateArray = d3_interpolateArray;function d3_interpolateArray(a, b){var x=[], c=[], na=a.length, nb=b.length, n0=Math.min(a.length, b.length), i;for(i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));for(; i < na; ++i) c[i] = a[i];for(; i < nb; ++i) c[i] = b[i];return function(t){for(i = 0; i < n0; ++i) c[i] = x[i](t);return c;};}var d3_ease_default=function d3_ease_default(){return d3_identity;};var d3_ease=d3.map({linear:d3_ease_default, poly:d3_ease_poly, quad:function quad(){return d3_ease_quad;}, cubic:function cubic(){return d3_ease_cubic;}, sin:function sin(){return d3_ease_sin;}, exp:function exp(){return d3_ease_exp;}, circle:function circle(){return d3_ease_circle;}, elastic:d3_ease_elastic, back:d3_ease_back, bounce:function bounce(){return d3_ease_bounce;}});var d3_ease_mode=d3.map({"in":d3_identity, out:d3_ease_reverse, "in-out":d3_ease_reflect, "out-in":function outIn(f){return d3_ease_reflect(d3_ease_reverse(f));}});d3.ease = function(name){var i=name.indexOf("-"), t=i >= 0?name.slice(0, i):name, m=i >= 0?name.slice(i + 1):"in";t = d3_ease.get(t) || d3_ease_default;m = d3_ease_mode.get(m) || d3_identity;return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));};function d3_ease_clamp(f){return function(t){return t <= 0?0:t >= 1?1:f(t);};}function d3_ease_reverse(f){return function(t){return 1 - f(1 - t);};}function d3_ease_reflect(f){return function(t){return 0.5 * (t < 0.5?f(2 * t):2 - f(2 - 2 * t));};}function d3_ease_quad(t){return t * t;}function d3_ease_cubic(t){return t * t * t;}function d3_ease_cubicInOut(t){if(t <= 0)return 0;if(t >= 1)return 1;var t2=t * t, t3=t2 * t;return 4 * (t < 0.5?t3:3 * (t - t2) + t3 - 0.75);}function d3_ease_poly(e){return function(t){return Math.pow(t, e);};}function d3_ease_sin(t){return 1 - Math.cos(t * halfπ);}function d3_ease_exp(t){return Math.pow(2, 10 * (t - 1));}function d3_ease_circle(t){return 1 - Math.sqrt(1 - t * t);}function d3_ease_elastic(a, p){var s;if(arguments.length < 2)p = 0.45;if(arguments.length)s = p / τ * Math.asin(1 / a);else a = 1, s = p / 4;return function(t){return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);};}function d3_ease_back(s){if(!s)s = 1.70158;return function(t){return t * t * ((s + 1) * t - s);};}function d3_ease_bounce(t){return t < 1 / 2.75?7.5625 * t * t:t < 2 / 2.75?7.5625 * (t -= 1.5 / 2.75) * t + 0.75:t < 2.5 / 2.75?7.5625 * (t -= 2.25 / 2.75) * t + 0.9375:7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;}d3.interpolateHcl = d3_interpolateHcl;function d3_interpolateHcl(a, b){a = d3.hcl(a);b = d3.hcl(b);var ah=a.h, ac=a.c, al=a.l, bh=b.h - ah, bc=b.c - ac, bl=b.l - al;if(isNaN(bc))bc = 0, ac = isNaN(ac)?b.c:ac;if(isNaN(bh))bh = 0, ah = isNaN(ah)?b.h:ah;else if(bh > 180)bh -= 360;else if(bh < -180)bh += 360;return function(t){return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + "";};}d3.interpolateHsl = d3_interpolateHsl;function d3_interpolateHsl(a, b){a = d3.hsl(a);b = d3.hsl(b);var ah=a.h, as=a.s, al=a.l, bh=b.h - ah, bs=b.s - as, bl=b.l - al;if(isNaN(bs))bs = 0, as = isNaN(as)?b.s:as;if(isNaN(bh))bh = 0, ah = isNaN(ah)?b.h:ah;else if(bh > 180)bh -= 360;else if(bh < -180)bh += 360;return function(t){return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + "";};}d3.interpolateLab = d3_interpolateLab;function d3_interpolateLab(a, b){a = d3.lab(a);b = d3.lab(b);var al=a.l, aa=a.a, ab=a.b, bl=b.l - al, ba=b.a - aa, bb=b.b - ab;return function(t){return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + "";};}d3.interpolateRound = d3_interpolateRound;function d3_interpolateRound(a, b){b -= a;return function(t){return Math.round(a + b * t);};}d3.transform = function(string){var g=d3_document.createElementNS(d3.ns.prefix.svg, "g");return (d3.transform = function(string){if(string != null){g.setAttribute("transform", string);var t=g.transform.baseVal.consolidate();}return new d3_transform(t?t.matrix:d3_transformIdentity);})(string);};function d3_transform(m){var r0=[m.a, m.b], r1=[m.c, m.d], kx=d3_transformNormalize(r0), kz=d3_transformDot(r0, r1), ky=d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;if(r0[0] * r1[1] < r1[0] * r0[1]){r0[0] *= -1;r0[1] *= -1;kx *= -1;kz *= -1;}this.rotate = (kx?Math.atan2(r0[1], r0[0]):Math.atan2(-r1[0], r1[1])) * d3_degrees;this.translate = [m.e, m.f];this.scale = [kx, ky];this.skew = ky?Math.atan2(kz, ky) * d3_degrees:0;}d3_transform.prototype.toString = function(){return "translate(" + this.translate + ")rotate(" + this.rotate + ")skewX(" + this.skew + ")scale(" + this.scale + ")";};function d3_transformDot(a, b){return a[0] * b[0] + a[1] * b[1];}function d3_transformNormalize(a){var k=Math.sqrt(d3_transformDot(a, a));if(k){a[0] /= k;a[1] /= k;}return k;}function d3_transformCombine(a, b, k){a[0] += k * b[0];a[1] += k * b[1];return a;}var d3_transformIdentity={a:1, b:0, c:0, d:1, e:0, f:0};d3.interpolateTransform = d3_interpolateTransform;function d3_interpolateTransform(a, b){var s=[], q=[], n, A=d3.transform(a), B=d3.transform(b), ta=A.translate, tb=B.translate, ra=A.rotate, rb=B.rotate, wa=A.skew, wb=B.skew, ka=A.scale, kb=B.scale;if(ta[0] != tb[0] || ta[1] != tb[1]){s.push("translate(", null, ",", null, ")");q.push({i:1, x:d3_interpolateNumber(ta[0], tb[0])}, {i:3, x:d3_interpolateNumber(ta[1], tb[1])});}else if(tb[0] || tb[1]){s.push("translate(" + tb + ")");}else {s.push("");}if(ra != rb){if(ra - rb > 180)rb += 360;else if(rb - ra > 180)ra += 360;q.push({i:s.push(s.pop() + "rotate(", null, ")") - 2, x:d3_interpolateNumber(ra, rb)});}else if(rb){s.push(s.pop() + "rotate(" + rb + ")");}if(wa != wb){q.push({i:s.push(s.pop() + "skewX(", null, ")") - 2, x:d3_interpolateNumber(wa, wb)});}else if(wb){s.push(s.pop() + "skewX(" + wb + ")");}if(ka[0] != kb[0] || ka[1] != kb[1]){n = s.push(s.pop() + "scale(", null, ",", null, ")");q.push({i:n - 4, x:d3_interpolateNumber(ka[0], kb[0])}, {i:n - 2, x:d3_interpolateNumber(ka[1], kb[1])});}else if(kb[0] != 1 || kb[1] != 1){s.push(s.pop() + "scale(" + kb + ")");}n = q.length;return function(t){var i=-1, o;while(++i < n) s[(o = q[i]).i] = o.x(t);return s.join("");};}function d3_uninterpolateNumber(a, b){b = (b -= a = +a) || 1 / b;return function(x){return (x - a) / b;};}function d3_uninterpolateClamp(a, b){b = (b -= a = +a) || 1 / b;return function(x){return Math.max(0, Math.min(1, (x - a) / b));};}d3.layout = {};d3.layout.bundle = function(){return function(links){var paths=[], i=-1, n=links.length;while(++i < n) paths.push(d3_layout_bundlePath(links[i]));return paths;};};function d3_layout_bundlePath(link){var start=link.source, end=link.target, lca=d3_layout_bundleLeastCommonAncestor(start, end), points=[start];while(start !== lca) {start = start.parent;points.push(start);}var k=points.length;while(end !== lca) {points.splice(k, 0, end);end = end.parent;}return points;}function d3_layout_bundleAncestors(node){var ancestors=[], parent=node.parent;while(parent != null) {ancestors.push(node);node = parent;parent = parent.parent;}ancestors.push(node);return ancestors;}function d3_layout_bundleLeastCommonAncestor(a, b){if(a === b)return a;var aNodes=d3_layout_bundleAncestors(a), bNodes=d3_layout_bundleAncestors(b), aNode=aNodes.pop(), bNode=bNodes.pop(), sharedNode=null;while(aNode === bNode) {sharedNode = aNode;aNode = aNodes.pop();bNode = bNodes.pop();}return sharedNode;}d3.layout.chord = function(){var chord={}, chords, groups, matrix, n, padding=0, sortGroups, sortSubgroups, sortChords;function relayout(){var subgroups={}, groupSums=[], groupIndex=d3.range(n), subgroupIndex=[], k, x, x0, i, j;chords = [];groups = [];k = 0, i = -1;while(++i < n) {x = 0, j = -1;while(++j < n) {x += matrix[i][j];}groupSums.push(x);subgroupIndex.push(d3.range(n));k += x;}if(sortGroups){groupIndex.sort(function(a, b){return sortGroups(groupSums[a], groupSums[b]);});}if(sortSubgroups){subgroupIndex.forEach(function(d, i){d.sort(function(a, b){return sortSubgroups(matrix[i][a], matrix[i][b]);});});}k = (τ - padding * n) / k;x = 0, i = -1;while(++i < n) {x0 = x, j = -1;while(++j < n) {var di=groupIndex[i], dj=subgroupIndex[di][j], v=matrix[di][dj], a0=x, a1=x += v * k;subgroups[di + "-" + dj] = {index:di, subindex:dj, startAngle:a0, endAngle:a1, value:v};}groups[di] = {index:di, startAngle:x0, endAngle:x, value:(x - x0) / k};x += padding;}i = -1;while(++i < n) {j = i - 1;while(++j < n) {var source=subgroups[i + "-" + j], target=subgroups[j + "-" + i];if(source.value || target.value){chords.push(source.value < target.value?{source:target, target:source}:{source:source, target:target});}}}if(sortChords)resort();}function resort(){chords.sort(function(a, b){return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);});}chord.matrix = function(x){if(!arguments.length)return matrix;n = (matrix = x) && matrix.length;chords = groups = null;return chord;};chord.padding = function(x){if(!arguments.length)return padding;padding = x;chords = groups = null;return chord;};chord.sortGroups = function(x){if(!arguments.length)return sortGroups;sortGroups = x;chords = groups = null;return chord;};chord.sortSubgroups = function(x){if(!arguments.length)return sortSubgroups;sortSubgroups = x;chords = null;return chord;};chord.sortChords = function(x){if(!arguments.length)return sortChords;sortChords = x;if(chords)resort();return chord;};chord.chords = function(){if(!chords)relayout();return chords;};chord.groups = function(){if(!groups)relayout();return groups;};return chord;};d3.layout.force = function(){var force={}, event=d3.dispatch("start", "tick", "end"), size=[1, 1], drag, alpha, friction=0.9, linkDistance=d3_layout_forceLinkDistance, linkStrength=d3_layout_forceLinkStrength, charge=-30, chargeDistance2=d3_layout_forceChargeDistance2, gravity=0.1, theta2=0.64, nodes=[], links=[], distances, strengths, charges;function repulse(node){return function(quad, x1, _, x2){if(quad.point !== node){var dx=quad.cx - node.x, dy=quad.cy - node.y, dw=x2 - x1, dn=dx * dx + dy * dy;if(dw * dw / theta2 < dn){if(dn < chargeDistance2){var k=quad.charge / dn;node.px -= dx * k;node.py -= dy * k;}return true;}if(quad.point && dn && dn < chargeDistance2){var k=quad.pointCharge / dn;node.px -= dx * k;node.py -= dy * k;}}return !quad.charge;};}force.tick = function(){if((alpha *= 0.99) < 0.005){event.end({type:"end", alpha:alpha = 0});return true;}var n=nodes.length, m=links.length, q, i, o, s, t, l, k, x, y;for(i = 0; i < m; ++i) {o = links[i];s = o.source;t = o.target;x = t.x - s.x;y = t.y - s.y;if(l = x * x + y * y){l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;x *= l;y *= l;t.x -= x * (k = s.weight / (t.weight + s.weight));t.y -= y * k;s.x += x * (k = 1 - k);s.y += y * k;}}if(k = alpha * gravity){x = size[0] / 2;y = size[1] / 2;i = -1;if(k)while(++i < n) {o = nodes[i];o.x += (x - o.x) * k;o.y += (y - o.y) * k;}}if(charge){d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);i = -1;while(++i < n) {if(!(o = nodes[i]).fixed){q.visit(repulse(o));}}}i = -1;while(++i < n) {o = nodes[i];if(o.fixed){o.x = o.px;o.y = o.py;}else {o.x -= (o.px - (o.px = o.x)) * friction;o.y -= (o.py - (o.py = o.y)) * friction;}}event.tick({type:"tick", alpha:alpha});};force.nodes = function(x){if(!arguments.length)return nodes;nodes = x;return force;};force.links = function(x){if(!arguments.length)return links;links = x;return force;};force.size = function(x){if(!arguments.length)return size;size = x;return force;};force.linkDistance = function(x){if(!arguments.length)return linkDistance;linkDistance = typeof x === "function"?x:+x;return force;};force.distance = force.linkDistance;force.linkStrength = function(x){if(!arguments.length)return linkStrength;linkStrength = typeof x === "function"?x:+x;return force;};force.friction = function(x){if(!arguments.length)return friction;friction = +x;return force;};force.charge = function(x){if(!arguments.length)return charge;charge = typeof x === "function"?x:+x;return force;};force.chargeDistance = function(x){if(!arguments.length)return Math.sqrt(chargeDistance2);chargeDistance2 = x * x;return force;};force.gravity = function(x){if(!arguments.length)return gravity;gravity = +x;return force;};force.theta = function(x){if(!arguments.length)return Math.sqrt(theta2);theta2 = x * x;return force;};force.alpha = function(x){if(!arguments.length)return alpha;x = +x;if(alpha){if(x > 0)alpha = x;else alpha = 0;}else if(x > 0){event.start({type:"start", alpha:alpha = x});d3.timer(force.tick);}return force;};force.start = function(){var i, n=nodes.length, m=links.length, w=size[0], h=size[1], neighbors, o;for(i = 0; i < n; ++i) {(o = nodes[i]).index = i;o.weight = 0;}for(i = 0; i < m; ++i) {o = links[i];if(typeof o.source == "number")o.source = nodes[o.source];if(typeof o.target == "number")o.target = nodes[o.target];++o.source.weight;++o.target.weight;}for(i = 0; i < n; ++i) {o = nodes[i];if(isNaN(o.x))o.x = position("x", w);if(isNaN(o.y))o.y = position("y", h);if(isNaN(o.px))o.px = o.x;if(isNaN(o.py))o.py = o.y;}distances = [];if(typeof linkDistance === "function")for(i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i);else for(i = 0; i < m; ++i) distances[i] = linkDistance;strengths = [];if(typeof linkStrength === "function")for(i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i);else for(i = 0; i < m; ++i) strengths[i] = linkStrength;charges = [];if(typeof charge === "function")for(i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i);else for(i = 0; i < n; ++i) charges[i] = charge;function position(dimension, size){if(!neighbors){neighbors = new Array(n);for(j = 0; j < n; ++j) {neighbors[j] = [];}for(j = 0; j < m; ++j) {var o=links[j];neighbors[o.source.index].push(o.target);neighbors[o.target.index].push(o.source);}}var candidates=neighbors[i], j=-1, l=candidates.length, x;while(++j < l) if(!isNaN(x = candidates[j][dimension]))return x;return Math.random() * size;}return force.resume();};force.resume = function(){return force.alpha(0.1);};force.stop = function(){return force.alpha(0);};force.drag = function(){if(!drag)drag = d3.behavior.drag().origin(d3_identity).on("dragstart.force", d3_layout_forceDragstart).on("drag.force", dragmove).on("dragend.force", d3_layout_forceDragend);if(!arguments.length)return drag;this.on("mouseover.force", d3_layout_forceMouseover).on("mouseout.force", d3_layout_forceMouseout).call(drag);};function dragmove(d){d.px = d3.event.x, d.py = d3.event.y;force.resume();}return d3.rebind(force, event, "on");};function d3_layout_forceDragstart(d){d.fixed |= 2;}function d3_layout_forceDragend(d){d.fixed &= ~6;}function d3_layout_forceMouseover(d){d.fixed |= 4;d.px = d.x, d.py = d.y;}function d3_layout_forceMouseout(d){d.fixed &= ~4;}function d3_layout_forceAccumulate(quad, alpha, charges){var cx=0, cy=0;quad.charge = 0;if(!quad.leaf){var nodes=quad.nodes, n=nodes.length, i=-1, c;while(++i < n) {c = nodes[i];if(c == null)continue;d3_layout_forceAccumulate(c, alpha, charges);quad.charge += c.charge;cx += c.charge * c.cx;cy += c.charge * c.cy;}}if(quad.point){if(!quad.leaf){quad.point.x += Math.random() - 0.5;quad.point.y += Math.random() - 0.5;}var k=alpha * charges[quad.point.index];quad.charge += quad.pointCharge = k;cx += k * quad.point.x;cy += k * quad.point.y;}quad.cx = cx / quad.charge;quad.cy = cy / quad.charge;}var d3_layout_forceLinkDistance=20, d3_layout_forceLinkStrength=1, d3_layout_forceChargeDistance2=Infinity;d3.layout.hierarchy = function(){var sort=d3_layout_hierarchySort, children=d3_layout_hierarchyChildren, value=d3_layout_hierarchyValue;function hierarchy(root){var stack=[root], nodes=[], node;root.depth = 0;while((node = stack.pop()) != null) {nodes.push(node);if((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)){var n, childs, child;while(--n >= 0) {stack.push(child = childs[n]);child.parent = node;child.depth = node.depth + 1;}if(value)node.value = 0;node.children = childs;}else {if(value)node.value = +value.call(hierarchy, node, node.depth) || 0;delete node.children;}}d3_layout_hierarchyVisitAfter(root, function(node){var childs, parent;if(sort && (childs = node.children))childs.sort(sort);if(value && (parent = node.parent))parent.value += node.value;});return nodes;}hierarchy.sort = function(x){if(!arguments.length)return sort;sort = x;return hierarchy;};hierarchy.children = function(x){if(!arguments.length)return children;children = x;return hierarchy;};hierarchy.value = function(x){if(!arguments.length)return value;value = x;return hierarchy;};hierarchy.revalue = function(root){if(value){d3_layout_hierarchyVisitBefore(root, function(node){if(node.children)node.value = 0;});d3_layout_hierarchyVisitAfter(root, function(node){var parent;if(!node.children)node.value = +value.call(hierarchy, node, node.depth) || 0;if(parent = node.parent)parent.value += node.value;});}return root;};return hierarchy;};function d3_layout_hierarchyRebind(object, hierarchy){d3.rebind(object, hierarchy, "sort", "children", "value");object.nodes = object;object.links = d3_layout_hierarchyLinks;return object;}function d3_layout_hierarchyVisitBefore(node, callback){var nodes=[node];while((node = nodes.pop()) != null) {callback(node);if((children = node.children) && (n = children.length)){var n, children;while(--n >= 0) nodes.push(children[n]);}}}function d3_layout_hierarchyVisitAfter(node, callback){var nodes=[node], nodes2=[];while((node = nodes.pop()) != null) {nodes2.push(node);if((children = node.children) && (n = children.length)){var i=-1, n, children;while(++i < n) nodes.push(children[i]);}}while((node = nodes2.pop()) != null) {callback(node);}}function d3_layout_hierarchyChildren(d){return d.children;}function d3_layout_hierarchyValue(d){return d.value;}function d3_layout_hierarchySort(a, b){return b.value - a.value;}function d3_layout_hierarchyLinks(nodes){return d3.merge(nodes.map(function(parent){return (parent.children || []).map(function(child){return {source:parent, target:child};});}));}d3.layout.partition = function(){var hierarchy=d3.layout.hierarchy(), size=[1, 1];function position(node, x, dx, dy){var children=node.children;node.x = x;node.y = node.depth * dy;node.dx = dx;node.dy = dy;if(children && (n = children.length)){var i=-1, n, c, d;dx = node.value?dx / node.value:0;while(++i < n) {position(c = children[i], x, d = c.value * dx, dy);x += d;}}}function depth(node){var children=node.children, d=0;if(children && (n = children.length)){var i=-1, n;while(++i < n) d = Math.max(d, depth(children[i]));}return 1 + d;}function partition(d, i){var nodes=hierarchy.call(this, d, i);position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));return nodes;}partition.size = function(x){if(!arguments.length)return size;size = x;return partition;};return d3_layout_hierarchyRebind(partition, hierarchy);};d3.layout.pie = function(){var value=Number, sort=d3_layout_pieSortByValue, startAngle=0, endAngle=τ, padAngle=0;function pie(data){var n=data.length, values=data.map(function(d, i){return +value.call(pie, d, i);}), a=+(typeof startAngle === "function"?startAngle.apply(this, arguments):startAngle), da=(typeof endAngle === "function"?endAngle.apply(this, arguments):endAngle) - a, p=Math.min(Math.abs(da) / n, +(typeof padAngle === "function"?padAngle.apply(this, arguments):padAngle)), pa=p * (da < 0?-1:1), k=(da - n * pa) / d3.sum(values), index=d3.range(n), arcs=[], v;if(sort != null)index.sort(sort === d3_layout_pieSortByValue?function(i, j){return values[j] - values[i];}:function(i, j){return sort(data[i], data[j]);});index.forEach(function(i){arcs[i] = {data:data[i], value:v = values[i], startAngle:a, endAngle:a += v * k + pa, padAngle:p};});return arcs;}pie.value = function(_){if(!arguments.length)return value;value = _;return pie;};pie.sort = function(_){if(!arguments.length)return sort;sort = _;return pie;};pie.startAngle = function(_){if(!arguments.length)return startAngle;startAngle = _;return pie;};pie.endAngle = function(_){if(!arguments.length)return endAngle;endAngle = _;return pie;};pie.padAngle = function(_){if(!arguments.length)return padAngle;padAngle = _;return pie;};return pie;};var d3_layout_pieSortByValue={};d3.layout.stack = function(){var values=d3_identity, order=d3_layout_stackOrderDefault, offset=d3_layout_stackOffsetZero, out=d3_layout_stackOut, x=d3_layout_stackX, y=d3_layout_stackY;function stack(data, index){if(!(n = data.length))return data;var series=data.map(function(d, i){return values.call(stack, d, i);});var points=series.map(function(d){return d.map(function(v, i){return [x.call(stack, v, i), y.call(stack, v, i)];});});var orders=order.call(stack, points, index);series = d3.permute(series, orders);points = d3.permute(points, orders);var offsets=offset.call(stack, points, index);var m=series[0].length, n, i, j, o;for(j = 0; j < m; ++j) {out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);for(i = 1; i < n; ++i) {out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);}}return data;}stack.values = function(x){if(!arguments.length)return values;values = x;return stack;};stack.order = function(x){if(!arguments.length)return order;order = typeof x === "function"?x:d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;return stack;};stack.offset = function(x){if(!arguments.length)return offset;offset = typeof x === "function"?x:d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;return stack;};stack.x = function(z){if(!arguments.length)return x;x = z;return stack;};stack.y = function(z){if(!arguments.length)return y;y = z;return stack;};stack.out = function(z){if(!arguments.length)return out;out = z;return stack;};return stack;};function d3_layout_stackX(d){return d.x;}function d3_layout_stackY(d){return d.y;}function d3_layout_stackOut(d, y0, y){d.y0 = y0;d.y = y;}var d3_layout_stackOrders=d3.map({"inside-out":function insideOut(data){var n=data.length, i, j, max=data.map(d3_layout_stackMaxIndex), sums=data.map(d3_layout_stackReduceSum), index=d3.range(n).sort(function(a, b){return max[a] - max[b];}), top=0, bottom=0, tops=[], bottoms=[];for(i = 0; i < n; ++i) {j = index[i];if(top < bottom){top += sums[j];tops.push(j);}else {bottom += sums[j];bottoms.push(j);}}return bottoms.reverse().concat(tops);}, reverse:function reverse(data){return d3.range(data.length).reverse();}, "default":d3_layout_stackOrderDefault});var d3_layout_stackOffsets=d3.map({silhouette:function silhouette(data){var n=data.length, m=data[0].length, sums=[], max=0, i, j, o, y0=[];for(j = 0; j < m; ++j) {for(i = 0, o = 0; i < n; i++) o += data[i][j][1];if(o > max)max = o;sums.push(o);}for(j = 0; j < m; ++j) {y0[j] = (max - sums[j]) / 2;}return y0;}, wiggle:function wiggle(data){var n=data.length, x=data[0], m=x.length, i, j, k, s1, s2, s3, dx, o, o0, y0=[];y0[0] = o = o0 = 0;for(j = 1; j < m; ++j) {for(i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];for(i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {for(k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;}s2 += s3 * data[i][j][1];}y0[j] = o -= s1?s2 / s1 * dx:0;if(o < o0)o0 = o;}for(j = 0; j < m; ++j) y0[j] -= o0;return y0;}, expand:function expand(data){var n=data.length, m=data[0].length, k=1 / n, i, j, o, y0=[];for(j = 0; j < m; ++j) {for(i = 0, o = 0; i < n; i++) o += data[i][j][1];if(o)for(i = 0; i < n; i++) data[i][j][1] /= o;else for(i = 0; i < n; i++) data[i][j][1] = k;}for(j = 0; j < m; ++j) y0[j] = 0;return y0;}, zero:d3_layout_stackOffsetZero});function d3_layout_stackOrderDefault(data){return d3.range(data.length);}function d3_layout_stackOffsetZero(data){var j=-1, m=data[0].length, y0=[];while(++j < m) y0[j] = 0;return y0;}function d3_layout_stackMaxIndex(array){var i=1, j=0, v=array[0][1], k, n=array.length;for(; i < n; ++i) {if((k = array[i][1]) > v){j = i;v = k;}}return j;}function d3_layout_stackReduceSum(d){return d.reduce(d3_layout_stackSum, 0);}function d3_layout_stackSum(p, d){return p + d[1];}d3.layout.histogram = function(){var frequency=true, valuer=Number, ranger=d3_layout_histogramRange, binner=d3_layout_histogramBinSturges;function histogram(data, i){var bins=[], values=data.map(valuer, this), range=ranger.call(this, values, i), thresholds=binner.call(this, range, values, i), bin, i=-1, n=values.length, m=thresholds.length - 1, k=frequency?1:1 / n, x;while(++i < m) {bin = bins[i] = [];bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);bin.y = 0;}if(m > 0){i = -1;while(++i < n) {x = values[i];if(x >= range[0] && x <= range[1]){bin = bins[d3.bisect(thresholds, x, 1, m) - 1];bin.y += k;bin.push(data[i]);}}}return bins;}histogram.value = function(x){if(!arguments.length)return valuer;valuer = x;return histogram;};histogram.range = function(x){if(!arguments.length)return ranger;ranger = d3_functor(x);return histogram;};histogram.bins = function(x){if(!arguments.length)return binner;binner = typeof x === "number"?function(range){return d3_layout_histogramBinFixed(range, x);}:d3_functor(x);return histogram;};histogram.frequency = function(x){if(!arguments.length)return frequency;frequency = !!x;return histogram;};return histogram;};function d3_layout_histogramBinSturges(range, values){return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));}function d3_layout_histogramBinFixed(range, n){var x=-1, b=+range[0], m=(range[1] - b) / n, f=[];while(++x <= n) f[x] = m * x + b;return f;}function d3_layout_histogramRange(values){return [d3.min(values), d3.max(values)];}d3.layout.pack = function(){var hierarchy=d3.layout.hierarchy().sort(d3_layout_packSort), padding=0, size=[1, 1], radius;function pack(d, i){var nodes=hierarchy.call(this, d, i), root=nodes[0], w=size[0], h=size[1], r=radius == null?Math.sqrt:typeof radius === "function"?radius:function(){return radius;};root.x = root.y = 0;d3_layout_hierarchyVisitAfter(root, function(d){d.r = +r(d.value);});d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);if(padding){var dr=padding * (radius?1:Math.max(2 * root.r / w, 2 * root.r / h)) / 2;d3_layout_hierarchyVisitAfter(root, function(d){d.r += dr;});d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);d3_layout_hierarchyVisitAfter(root, function(d){d.r -= dr;});}d3_layout_packTransform(root, w / 2, h / 2, radius?1:1 / Math.max(2 * root.r / w, 2 * root.r / h));return nodes;}pack.size = function(_){if(!arguments.length)return size;size = _;return pack;};pack.radius = function(_){if(!arguments.length)return radius;radius = _ == null || typeof _ === "function"?_:+_;return pack;};pack.padding = function(_){if(!arguments.length)return padding;padding = +_;return pack;};return d3_layout_hierarchyRebind(pack, hierarchy);};function d3_layout_packSort(a, b){return a.value - b.value;}function d3_layout_packInsert(a, b){var c=a._pack_next;a._pack_next = b;b._pack_prev = a;b._pack_next = c;c._pack_prev = b;}function d3_layout_packSplice(a, b){a._pack_next = b;b._pack_prev = a;}function d3_layout_packIntersects(a, b){var dx=b.x - a.x, dy=b.y - a.y, dr=a.r + b.r;return 0.999 * dr * dr > dx * dx + dy * dy;}function d3_layout_packSiblings(node){if(!(nodes = node.children) || !(n = nodes.length))return;var nodes, xMin=Infinity, xMax=-Infinity, yMin=Infinity, yMax=-Infinity, a, b, c, i, j, k, n;function bound(node){xMin = Math.min(node.x - node.r, xMin);xMax = Math.max(node.x + node.r, xMax);yMin = Math.min(node.y - node.r, yMin);yMax = Math.max(node.y + node.r, yMax);}nodes.forEach(d3_layout_packLink);a = nodes[0];a.x = -a.r;a.y = 0;bound(a);if(n > 1){b = nodes[1];b.x = b.r;b.y = 0;bound(b);if(n > 2){c = nodes[2];d3_layout_packPlace(a, b, c);bound(c);d3_layout_packInsert(a, c);a._pack_prev = c;d3_layout_packInsert(c, b);b = a._pack_next;for(i = 3; i < n; i++) {d3_layout_packPlace(a, b, c = nodes[i]);var isect=0, s1=1, s2=1;for(j = b._pack_next; j !== b; j = j._pack_next, s1++) {if(d3_layout_packIntersects(j, c)){isect = 1;break;}}if(isect == 1){for(k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {if(d3_layout_packIntersects(k, c)){break;}}}if(isect){if(s1 < s2 || s1 == s2 && b.r < a.r)d3_layout_packSplice(a, b = j);else d3_layout_packSplice(a = k, b);i--;}else {d3_layout_packInsert(a, c);b = c;bound(c);}}}}var cx=(xMin + xMax) / 2, cy=(yMin + yMax) / 2, cr=0;for(i = 0; i < n; i++) {c = nodes[i];c.x -= cx;c.y -= cy;cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));}node.r = cr;nodes.forEach(d3_layout_packUnlink);}function d3_layout_packLink(node){node._pack_next = node._pack_prev = node;}function d3_layout_packUnlink(node){delete node._pack_next;delete node._pack_prev;}function d3_layout_packTransform(node, x, y, k){var children=node.children;node.x = x += k * node.x;node.y = y += k * node.y;node.r *= k;if(children){var i=-1, n=children.length;while(++i < n) d3_layout_packTransform(children[i], x, y, k);}}function d3_layout_packPlace(a, b, c){var db=a.r + c.r, dx=b.x - a.x, dy=b.y - a.y;if(db && (dx || dy)){var da=b.r + c.r, dc=dx * dx + dy * dy;da *= da;db *= db;var x=0.5 + (db - da) / (2 * dc), y=Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);c.x = a.x + x * dx + y * dy;c.y = a.y + x * dy - y * dx;}else {c.x = a.x + db;c.y = a.y;}}d3.layout.tree = function(){var hierarchy=d3.layout.hierarchy().sort(null).value(null), separation=d3_layout_treeSeparation, size=[1, 1], nodeSize=null;function tree(d, i){var nodes=hierarchy.call(this, d, i), root0=nodes[0], root1=wrapTree(root0);d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;d3_layout_hierarchyVisitBefore(root1, secondWalk);if(nodeSize)d3_layout_hierarchyVisitBefore(root0, sizeNode);else {var left=root0, right=root0, bottom=root0;d3_layout_hierarchyVisitBefore(root0, function(node){if(node.x < left.x)left = node;if(node.x > right.x)right = node;if(node.depth > bottom.depth)bottom = node;});var tx=separation(left, right) / 2 - left.x, kx=size[0] / (right.x + separation(right, left) / 2 + tx), ky=size[1] / (bottom.depth || 1);d3_layout_hierarchyVisitBefore(root0, function(node){node.x = (node.x + tx) * kx;node.y = node.depth * ky;});}return nodes;}function wrapTree(root0){var root1={A:null, children:[root0]}, queue=[root1], node1;while((node1 = queue.pop()) != null) {for(var children=node1.children, child, i=0, n=children.length; i < n; ++i) {queue.push((children[i] = child = {_:children[i], parent:node1, children:(child = children[i].children) && child.slice() || [], A:null, a:null, z:0, m:0, c:0, s:0, t:null, i:i}).a = child);}}return root1.children[0];}function firstWalk(v){var children=v.children, siblings=v.parent.children, w=v.i?siblings[v.i - 1]:null;if(children.length){d3_layout_treeShift(v);var midpoint=(children[0].z + children[children.length - 1].z) / 2;if(w){v.z = w.z + separation(v._, w._);v.m = v.z - midpoint;}else {v.z = midpoint;}}else if(w){v.z = w.z + separation(v._, w._);}v.parent.A = apportion(v, w, v.parent.A || siblings[0]);}function secondWalk(v){v._.x = v.z + v.parent.m;v.m += v.parent.m;}function apportion(v, w, ancestor){if(w){var vip=v, vop=v, vim=w, vom=vip.parent.children[0], sip=vip.m, sop=vop.m, sim=vim.m, som=vom.m, shift;while((vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip)) {vom = d3_layout_treeLeft(vom);vop = d3_layout_treeRight(vop);vop.a = v;shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);if(shift > 0){d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);sip += shift;sop += shift;}sim += vim.m;sip += vip.m;som += vom.m;sop += vop.m;}if(vim && !d3_layout_treeRight(vop)){vop.t = vim;vop.m += sim - sop;}if(vip && !d3_layout_treeLeft(vom)){vom.t = vip;vom.m += sip - som;ancestor = v;}}return ancestor;}function sizeNode(node){node.x *= size[0];node.y = node.depth * size[1];}tree.separation = function(x){if(!arguments.length)return separation;separation = x;return tree;};tree.size = function(x){if(!arguments.length)return nodeSize?null:size;nodeSize = (size = x) == null?sizeNode:null;return tree;};tree.nodeSize = function(x){if(!arguments.length)return nodeSize?size:null;nodeSize = (size = x) == null?null:sizeNode;return tree;};return d3_layout_hierarchyRebind(tree, hierarchy);};function d3_layout_treeSeparation(a, b){return a.parent == b.parent?1:2;}function d3_layout_treeLeft(v){var children=v.children;return children.length?children[0]:v.t;}function d3_layout_treeRight(v){var children=v.children, n;return (n = children.length)?children[n - 1]:v.t;}function d3_layout_treeMove(wm, wp, shift){var change=shift / (wp.i - wm.i);wp.c -= change;wp.s += shift;wm.c += change;wp.z += shift;wp.m += shift;}function d3_layout_treeShift(v){var shift=0, change=0, children=v.children, i=children.length, w;while(--i >= 0) {w = children[i];w.z += shift;w.m += shift;shift += w.s + (change += w.c);}}function d3_layout_treeAncestor(vim, v, ancestor){return vim.a.parent === v.parent?vim.a:ancestor;}d3.layout.cluster = function(){var hierarchy=d3.layout.hierarchy().sort(null).value(null), separation=d3_layout_treeSeparation, size=[1, 1], nodeSize=false;function cluster(d, i){var nodes=hierarchy.call(this, d, i), root=nodes[0], previousNode, x=0;d3_layout_hierarchyVisitAfter(root, function(node){var children=node.children;if(children && children.length){node.x = d3_layout_clusterX(children);node.y = d3_layout_clusterY(children);}else {node.x = previousNode?x += separation(node, previousNode):0;node.y = 0;previousNode = node;}});var left=d3_layout_clusterLeft(root), right=d3_layout_clusterRight(root), x0=left.x - separation(left, right) / 2, x1=right.x + separation(right, left) / 2;d3_layout_hierarchyVisitAfter(root, nodeSize?function(node){node.x = (node.x - root.x) * size[0];node.y = (root.y - node.y) * size[1];}:function(node){node.x = (node.x - x0) / (x1 - x0) * size[0];node.y = (1 - (root.y?node.y / root.y:1)) * size[1];});return nodes;}cluster.separation = function(x){if(!arguments.length)return separation;separation = x;return cluster;};cluster.size = function(x){if(!arguments.length)return nodeSize?null:size;nodeSize = (size = x) == null;return cluster;};cluster.nodeSize = function(x){if(!arguments.length)return nodeSize?size:null;nodeSize = (size = x) != null;return cluster;};return d3_layout_hierarchyRebind(cluster, hierarchy);};function d3_layout_clusterY(children){return 1 + d3.max(children, function(child){return child.y;});}function d3_layout_clusterX(children){return children.reduce(function(x, child){return x + child.x;}, 0) / children.length;}function d3_layout_clusterLeft(_x2){var _again=true;_function: while(_again) {var node=_x2;children = undefined;_again = false;var children=node.children;if(children && children.length){_x2 = children[0];_again = true;continue _function;}else {return node;}}}function d3_layout_clusterRight(_x3){var _again2=true;_function2: while(_again2) {var node=_x3;children = n = undefined;_again2 = false;var children=node.children, n;if(children && (n = children.length)){_x3 = children[n - 1];_again2 = true;continue _function2;}else {return node;}}}d3.layout.treemap = function(){var hierarchy=d3.layout.hierarchy(), round=Math.round, size=[1, 1], padding=null, pad=d3_layout_treemapPadNull, sticky=false, stickies, mode="squarify", ratio=0.5 * (1 + Math.sqrt(5));function scale(children, k){var i=-1, n=children.length, child, area;while(++i < n) {area = (child = children[i]).value * (k < 0?0:k);child.area = isNaN(area) || area <= 0?0:area;}}function squarify(node){var children=node.children;if(children && children.length){var rect=pad(node), row=[], remaining=children.slice(), child, best=Infinity, score, u=mode === "slice"?rect.dx:mode === "dice"?rect.dy:mode === "slice-dice"?node.depth & 1?rect.dy:rect.dx:Math.min(rect.dx, rect.dy), n;scale(remaining, rect.dx * rect.dy / node.value);row.area = 0;while((n = remaining.length) > 0) {row.push(child = remaining[n - 1]);row.area += child.area;if(mode !== "squarify" || (score = worst(row, u)) <= best){remaining.pop();best = score;}else {row.area -= row.pop().area;position(row, u, rect, false);u = Math.min(rect.dx, rect.dy);row.length = row.area = 0;best = Infinity;}}if(row.length){position(row, u, rect, true);row.length = row.area = 0;}children.forEach(squarify);}}function stickify(node){var children=node.children;if(children && children.length){var rect=pad(node), remaining=children.slice(), child, row=[];scale(remaining, rect.dx * rect.dy / node.value);row.area = 0;while(child = remaining.pop()) {row.push(child);row.area += child.area;if(child.z != null){position(row, child.z?rect.dx:rect.dy, rect, !remaining.length);row.length = row.area = 0;}}children.forEach(stickify);}}function worst(row, u){var s=row.area, r, rmax=0, rmin=Infinity, i=-1, n=row.length;while(++i < n) {if(!(r = row[i].area))continue;if(r < rmin)rmin = r;if(r > rmax)rmax = r;}s *= s;u *= u;return s?Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)):Infinity;}function position(row, u, rect, flush){var i=-1, n=row.length, x=rect.x, y=rect.y, v=u?round(row.area / u):0, o;if(u == rect.dx){if(flush || v > rect.dy)v = rect.dy;while(++i < n) {o = row[i];o.x = x;o.y = y;o.dy = v;x += o.dx = Math.min(rect.x + rect.dx - x, v?round(o.area / v):0);}o.z = true;o.dx += rect.x + rect.dx - x;rect.y += v;rect.dy -= v;}else {if(flush || v > rect.dx)v = rect.dx;while(++i < n) {o = row[i];o.x = x;o.y = y;o.dx = v;y += o.dy = Math.min(rect.y + rect.dy - y, v?round(o.area / v):0);}o.z = false;o.dy += rect.y + rect.dy - y;rect.x += v;rect.dx -= v;}}function treemap(d){var nodes=stickies || hierarchy(d), root=nodes[0];root.x = 0;root.y = 0;root.dx = size[0];root.dy = size[1];if(stickies)hierarchy.revalue(root);scale([root], root.dx * root.dy / root.value);(stickies?stickify:squarify)(root);if(sticky)stickies = nodes;return nodes;}treemap.size = function(x){if(!arguments.length)return size;size = x;return treemap;};treemap.padding = function(x){if(!arguments.length)return padding;function padFunction(node){var p=x.call(treemap, node, node.depth);return p == null?d3_layout_treemapPadNull(node):d3_layout_treemapPad(node, typeof p === "number"?[p, p, p, p]:p);}function padConstant(node){return d3_layout_treemapPad(node, x);}var type;pad = (padding = x) == null?d3_layout_treemapPadNull:(type = typeof x) === "function"?padFunction:type === "number"?(x = [x, x, x, x], padConstant):padConstant;return treemap;};treemap.round = function(x){if(!arguments.length)return round != Number;round = x?Math.round:Number;return treemap;};treemap.sticky = function(x){if(!arguments.length)return sticky;sticky = x;stickies = null;return treemap;};treemap.ratio = function(x){if(!arguments.length)return ratio;ratio = x;return treemap;};treemap.mode = function(x){if(!arguments.length)return mode;mode = x + "";return treemap;};return d3_layout_hierarchyRebind(treemap, hierarchy);};function d3_layout_treemapPadNull(node){return {x:node.x, y:node.y, dx:node.dx, dy:node.dy};}function d3_layout_treemapPad(node, padding){var x=node.x + padding[3], y=node.y + padding[0], dx=node.dx - padding[1] - padding[3], dy=node.dy - padding[0] - padding[2];if(dx < 0){x += dx / 2;dx = 0;}if(dy < 0){y += dy / 2;dy = 0;}return {x:x, y:y, dx:dx, dy:dy};}d3.random = {normal:function normal(µ, σ){var n=arguments.length;if(n < 2)σ = 1;if(n < 1)µ = 0;return function(){var x, y, r;do {x = Math.random() * 2 - 1;y = Math.random() * 2 - 1;r = x * x + y * y;}while(!r || r > 1);return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);};}, logNormal:function logNormal(){var random=d3.random.normal.apply(d3, arguments);return function(){return Math.exp(random());};}, bates:function bates(m){var random=d3.random.irwinHall(m);return function(){return random() / m;};}, irwinHall:function irwinHall(m){return function(){for(var s=0, j=0; j < m; j++) s += Math.random();return s;};}};d3.scale = {};function d3_scaleExtent(domain){var start=domain[0], stop=domain[domain.length - 1];return start < stop?[start, stop]:[stop, start];}function d3_scaleRange(scale){return scale.rangeExtent?scale.rangeExtent():d3_scaleExtent(scale.range());}function d3_scale_bilinear(domain, range, uninterpolate, interpolate){var u=uninterpolate(domain[0], domain[1]), i=interpolate(range[0], range[1]);return function(x){return i(u(x));};}function d3_scale_nice(domain, nice){var i0=0, i1=domain.length - 1, x0=domain[i0], x1=domain[i1], dx;if(x1 < x0){dx = i0, i0 = i1, i1 = dx;dx = x0, x0 = x1, x1 = dx;}domain[i0] = nice.floor(x0);domain[i1] = nice.ceil(x1);return domain;}function d3_scale_niceStep(step){return step?{floor:function floor(x){return Math.floor(x / step) * step;}, ceil:function ceil(x){return Math.ceil(x / step) * step;}}:d3_scale_niceIdentity;}var d3_scale_niceIdentity={floor:d3_identity, ceil:d3_identity};function d3_scale_polylinear(domain, range, uninterpolate, interpolate){var u=[], i=[], j=0, k=Math.min(domain.length, range.length) - 1;if(domain[k] < domain[0]){domain = domain.slice().reverse();range = range.slice().reverse();}while(++j <= k) {u.push(uninterpolate(domain[j - 1], domain[j]));i.push(interpolate(range[j - 1], range[j]));}return function(x){var j=d3.bisect(domain, x, 1, k) - 1;return i[j](u[j](x));};}d3.scale.linear = function(){return d3_scale_linear([0, 1], [0, 1], d3_interpolate, false);};function d3_scale_linear(domain, range, interpolate, clamp){var output, input;function rescale(){var linear=Math.min(domain.length, range.length) > 2?d3_scale_polylinear:d3_scale_bilinear, uninterpolate=clamp?d3_uninterpolateClamp:d3_uninterpolateNumber;output = linear(domain, range, uninterpolate, interpolate);input = linear(range, domain, uninterpolate, d3_interpolate);return scale;}function scale(x){return output(x);}scale.invert = function(y){return input(y);};scale.domain = function(x){if(!arguments.length)return domain;domain = x.map(Number);return rescale();};scale.range = function(x){if(!arguments.length)return range;range = x;return rescale();};scale.rangeRound = function(x){return scale.range(x).interpolate(d3_interpolateRound);};scale.clamp = function(x){if(!arguments.length)return clamp;clamp = x;return rescale();};scale.interpolate = function(x){if(!arguments.length)return interpolate;interpolate = x;return rescale();};scale.ticks = function(m){return d3_scale_linearTicks(domain, m);};scale.tickFormat = function(m, format){return d3_scale_linearTickFormat(domain, m, format);};scale.nice = function(m){d3_scale_linearNice(domain, m);return rescale();};scale.copy = function(){return d3_scale_linear(domain, range, interpolate, clamp);};return rescale();}function d3_scale_linearRebind(scale, linear){return d3.rebind(scale, linear, "range", "rangeRound", "interpolate", "clamp");}function d3_scale_linearNice(domain, m){return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));}function d3_scale_linearTickRange(domain, m){if(m == null)m = 10;var extent=d3_scaleExtent(domain), span=extent[1] - extent[0], step=Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err=m / span * step;if(err <= 0.15)step *= 10;else if(err <= 0.35)step *= 5;else if(err <= 0.75)step *= 2;extent[0] = Math.ceil(extent[0] / step) * step;extent[1] = Math.floor(extent[1] / step) * step + step * 0.5;extent[2] = step;return extent;}function d3_scale_linearTicks(domain, m){return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));}function d3_scale_linearTickFormat(domain, m, format){var range=d3_scale_linearTickRange(domain, m);if(format){var match=d3_format_re.exec(format);match.shift();if(match[8] === "s"){var prefix=d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));if(!match[7])match[7] = "." + d3_scale_linearPrecision(prefix.scale(range[2]));match[8] = "f";format = d3.format(match.join(""));return function(d){return format(prefix.scale(d)) + prefix.symbol;};}if(!match[7])match[7] = "." + d3_scale_linearFormatPrecision(match[8], range);format = match.join("");}else {format = ",." + d3_scale_linearPrecision(range[2]) + "f";}return d3.format(format);}var d3_scale_linearFormatSignificant={s:1, g:1, p:1, r:1, e:1};function d3_scale_linearPrecision(value){return -Math.floor(Math.log(value) / Math.LN10 + 0.01);}function d3_scale_linearFormatPrecision(type, range){var p=d3_scale_linearPrecision(range[2]);return type in d3_scale_linearFormatSignificant?Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== "e"):p - (type === "%") * 2;}d3.scale.log = function(){return d3_scale_log(d3.scale.linear().domain([0, 1]), 10, true, [1, 10]);};function d3_scale_log(linear, base, positive, domain){function log(x){return (positive?Math.log(x < 0?0:x):-Math.log(x > 0?0:-x)) / Math.log(base);}function pow(x){return positive?Math.pow(base, x):-Math.pow(base, -x);}function scale(x){return linear(log(x));}scale.invert = function(x){return pow(linear.invert(x));};scale.domain = function(x){if(!arguments.length)return domain;positive = x[0] >= 0;linear.domain((domain = x.map(Number)).map(log));return scale;};scale.base = function(_){if(!arguments.length)return base;base = +_;linear.domain(domain.map(log));return scale;};scale.nice = function(){var niced=d3_scale_nice(domain.map(log), positive?Math:d3_scale_logNiceNegative);linear.domain(niced);domain = niced.map(pow);return scale;};scale.ticks = function(){var extent=d3_scaleExtent(domain), ticks=[], u=extent[0], v=extent[1], i=Math.floor(log(u)), j=Math.ceil(log(v)), n=base % 1?2:base;if(isFinite(j - i)){if(positive){for(; i < j; i++) for(var k=1; k < n; k++) ticks.push(pow(i) * k);ticks.push(pow(i));}else {ticks.push(pow(i));for(; i++ < j;) for(var k=n - 1; k > 0; k--) ticks.push(pow(i) * k);}for(i = 0; ticks[i] < u; i++) {}for(j = ticks.length; ticks[j - 1] > v; j--) {}ticks = ticks.slice(i, j);}return ticks;};scale.tickFormat = function(n, format){if(!arguments.length)return d3_scale_logFormat;if(arguments.length < 2)format = d3_scale_logFormat;else if(typeof format !== "function")format = d3.format(format);var k=Math.max(0.1, n / scale.ticks().length), f=positive?(e = 1e-12, Math.ceil):(e = -1e-12, Math.floor), e;return function(d){return d / pow(f(log(d) + e)) <= k?format(d):"";};};scale.copy = function(){return d3_scale_log(linear.copy(), base, positive, domain);};return d3_scale_linearRebind(scale, linear);}var d3_scale_logFormat=d3.format(".0e"), d3_scale_logNiceNegative={floor:function floor(x){return -Math.ceil(-x);}, ceil:function ceil(x){return -Math.floor(-x);}};d3.scale.pow = function(){return d3_scale_pow(d3.scale.linear(), 1, [0, 1]);};function d3_scale_pow(linear, exponent, domain){var powp=d3_scale_powPow(exponent), powb=d3_scale_powPow(1 / exponent);function scale(x){return linear(powp(x));}scale.invert = function(x){return powb(linear.invert(x));};scale.domain = function(x){if(!arguments.length)return domain;linear.domain((domain = x.map(Number)).map(powp));return scale;};scale.ticks = function(m){return d3_scale_linearTicks(domain, m);};scale.tickFormat = function(m, format){return d3_scale_linearTickFormat(domain, m, format);};scale.nice = function(m){return scale.domain(d3_scale_linearNice(domain, m));};scale.exponent = function(x){if(!arguments.length)return exponent;powp = d3_scale_powPow(exponent = x);powb = d3_scale_powPow(1 / exponent);linear.domain(domain.map(powp));return scale;};scale.copy = function(){return d3_scale_pow(linear.copy(), exponent, domain);};return d3_scale_linearRebind(scale, linear);}function d3_scale_powPow(e){return function(x){return x < 0?-Math.pow(-x, e):Math.pow(x, e);};}d3.scale.sqrt = function(){return d3.scale.pow().exponent(0.5);};d3.scale.ordinal = function(){return d3_scale_ordinal([], {t:"range", a:[[]]});};function d3_scale_ordinal(domain, ranger){var index, range, rangeBand;function scale(x){return range[((index.get(x) || (ranger.t === "range"?index.set(x, domain.push(x)):NaN)) - 1) % range.length];}function steps(start, step){return d3.range(domain.length).map(function(i){return start + step * i;});}scale.domain = function(x){if(!arguments.length)return domain;domain = [];index = new d3_Map();var i=-1, n=x.length, xi;while(++i < n) if(!index.has(xi = x[i]))index.set(xi, domain.push(xi));return scale[ranger.t].apply(scale, ranger.a);};scale.range = function(x){if(!arguments.length)return range;range = x;rangeBand = 0;ranger = {t:"range", a:arguments};return scale;};scale.rangePoints = function(x, padding){if(arguments.length < 2)padding = 0;var start=x[0], stop=x[1], step=domain.length < 2?(start = (start + stop) / 2, 0):(stop - start) / (domain.length - 1 + padding);range = steps(start + step * padding / 2, step);rangeBand = 0;ranger = {t:"rangePoints", a:arguments};return scale;};scale.rangeRoundPoints = function(x, padding){if(arguments.length < 2)padding = 0;var start=x[0], stop=x[1], step=domain.length < 2?(start = stop = Math.round((start + stop) / 2), 0):(stop - start) / (domain.length - 1 + padding) | 0;range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);rangeBand = 0;ranger = {t:"rangeRoundPoints", a:arguments};return scale;};scale.rangeBands = function(x, padding, outerPadding){if(arguments.length < 2)padding = 0;if(arguments.length < 3)outerPadding = padding;var reverse=x[1] < x[0], start=x[reverse - 0], stop=x[1 - reverse], step=(stop - start) / (domain.length - padding + 2 * outerPadding);range = steps(start + step * outerPadding, step);if(reverse)range.reverse();rangeBand = step * (1 - padding);ranger = {t:"rangeBands", a:arguments};return scale;};scale.rangeRoundBands = function(x, padding, outerPadding){if(arguments.length < 2)padding = 0;if(arguments.length < 3)outerPadding = padding;var reverse=x[1] < x[0], start=x[reverse - 0], stop=x[1 - reverse], step=Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);if(reverse)range.reverse();rangeBand = Math.round(step * (1 - padding));ranger = {t:"rangeRoundBands", a:arguments};return scale;};scale.rangeBand = function(){return rangeBand;};scale.rangeExtent = function(){return d3_scaleExtent(ranger.a[0]);};scale.copy = function(){return d3_scale_ordinal(domain, ranger);};return scale.domain(domain);}d3.scale.category10 = function(){return d3.scale.ordinal().range(d3_category10);};d3.scale.category20 = function(){return d3.scale.ordinal().range(d3_category20);};d3.scale.category20b = function(){return d3.scale.ordinal().range(d3_category20b);};d3.scale.category20c = function(){return d3.scale.ordinal().range(d3_category20c);};var d3_category10=[2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175].map(d3_rgbString);var d3_category20=[2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725].map(d3_rgbString);var d3_category20b=[3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654].map(d3_rgbString);var d3_category20c=[3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081].map(d3_rgbString);d3.scale.quantile = function(){return d3_scale_quantile([], []);};function d3_scale_quantile(domain, range){var thresholds;function rescale(){var k=0, q=range.length;thresholds = [];while(++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);return scale;}function scale(x){if(!isNaN(x = +x))return range[d3.bisect(thresholds, x)];}scale.domain = function(x){if(!arguments.length)return domain;domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);return rescale();};scale.range = function(x){if(!arguments.length)return range;range = x;return rescale();};scale.quantiles = function(){return thresholds;};scale.invertExtent = function(y){y = range.indexOf(y);return y < 0?[NaN, NaN]:[y > 0?thresholds[y - 1]:domain[0], y < thresholds.length?thresholds[y]:domain[domain.length - 1]];};scale.copy = function(){return d3_scale_quantile(domain, range);};return rescale();}d3.scale.quantize = function(){return d3_scale_quantize(0, 1, [0, 1]);};function d3_scale_quantize(x0, x1, range){var kx, i;function scale(x){return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];}function rescale(){kx = range.length / (x1 - x0);i = range.length - 1;return scale;}scale.domain = function(x){if(!arguments.length)return [x0, x1];x0 = +x[0];x1 = +x[x.length - 1];return rescale();};scale.range = function(x){if(!arguments.length)return range;range = x;return rescale();};scale.invertExtent = function(y){y = range.indexOf(y);y = y < 0?NaN:y / kx + x0;return [y, y + 1 / kx];};scale.copy = function(){return d3_scale_quantize(x0, x1, range);};return rescale();}d3.scale.threshold = function(){return d3_scale_threshold([0.5], [0, 1]);};function d3_scale_threshold(domain, range){function scale(x){if(x <= x)return range[d3.bisect(domain, x)];}scale.domain = function(_){if(!arguments.length)return domain;domain = _;return scale;};scale.range = function(_){if(!arguments.length)return range;range = _;return scale;};scale.invertExtent = function(y){y = range.indexOf(y);return [domain[y - 1], domain[y]];};scale.copy = function(){return d3_scale_threshold(domain, range);};return scale;}d3.scale.identity = function(){return d3_scale_identity([0, 1]);};function d3_scale_identity(domain){function identity(x){return +x;}identity.invert = identity;identity.domain = identity.range = function(x){if(!arguments.length)return domain;domain = x.map(identity);return identity;};identity.ticks = function(m){return d3_scale_linearTicks(domain, m);};identity.tickFormat = function(m, format){return d3_scale_linearTickFormat(domain, m, format);};identity.copy = function(){return d3_scale_identity(domain);};return identity;}d3.svg = {};function d3_zero(){return 0;}d3.svg.arc = function(){var innerRadius=d3_svg_arcInnerRadius, outerRadius=d3_svg_arcOuterRadius, cornerRadius=d3_zero, padRadius=d3_svg_arcAuto, startAngle=d3_svg_arcStartAngle, endAngle=d3_svg_arcEndAngle, padAngle=d3_svg_arcPadAngle;function arc(){var r0=Math.max(0, +innerRadius.apply(this, arguments)), r1=Math.max(0, +outerRadius.apply(this, arguments)), a0=startAngle.apply(this, arguments) - halfπ, a1=endAngle.apply(this, arguments) - halfπ, da=Math.abs(a1 - a0), cw=a0 > a1?0:1;if(r1 < r0)rc = r1, r1 = r0, r0 = rc;if(da >= τε)return circleSegment(r1, cw) + (r0?circleSegment(r0, 1 - cw):"") + "Z";var rc, cr, rp, ap, p0=0, p1=0, x0, y0, x1, y1, x2, y2, x3, y3, path=[];if(ap = (+padAngle.apply(this, arguments) || 0) / 2){rp = padRadius === d3_svg_arcAuto?Math.sqrt(r0 * r0 + r1 * r1):+padRadius.apply(this, arguments);if(!cw)p1 *= -1;if(r1)p1 = d3_asin(rp / r1 * Math.sin(ap));if(r0)p0 = d3_asin(rp / r0 * Math.sin(ap));}if(r1){x0 = r1 * Math.cos(a0 + p1);y0 = r1 * Math.sin(a0 + p1);x1 = r1 * Math.cos(a1 - p1);y1 = r1 * Math.sin(a1 - p1);var l1=Math.abs(a1 - a0 - 2 * p1) <= π?0:1;if(p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1){var h1=(a0 + a1) / 2;x0 = r1 * Math.cos(h1);y0 = r1 * Math.sin(h1);x1 = y1 = null;}}else {x0 = y0 = 0;}if(r0){x2 = r0 * Math.cos(a1 - p0);y2 = r0 * Math.sin(a1 - p0);x3 = r0 * Math.cos(a0 + p0);y3 = r0 * Math.sin(a0 + p0);var l0=Math.abs(a0 - a1 + 2 * p0) <= π?0:1;if(p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0){var h0=(a0 + a1) / 2;x2 = r0 * Math.cos(h0);y2 = r0 * Math.sin(h0);x3 = y3 = null;}}else {x2 = y2 = 0;}if((rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > 0.001){cr = r0 < r1 ^ cw?0:1;var oc=x3 == null?[x2, y2]:x1 == null?[x0, y0]:d3_geom_polygonIntersect([x0, y0], [x3, y3], [x1, y1], [x2, y2]), ax=x0 - oc[0], ay=y0 - oc[1], bx=x1 - oc[0], by=y1 - oc[1], kc=1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc=Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);if(x1 != null){var rc1=Math.min(rc, (r1 - lc) / (kc + 1)), t30=d3_svg_arcCornerTangents(x3 == null?[x2, y2]:[x3, y3], [x0, y0], r1, rc1, cw), t12=d3_svg_arcCornerTangents([x1, y1], [x2, y2], r1, rc1, cw);if(rc === rc1){path.push("M", t30[0], "A", rc1, ",", rc1, " 0 0,", cr, " ", t30[1], "A", r1, ",", r1, " 0 ", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), ",", cw, " ", t12[1], "A", rc1, ",", rc1, " 0 0,", cr, " ", t12[0]);}else {path.push("M", t30[0], "A", rc1, ",", rc1, " 0 1,", cr, " ", t12[0]);}}else {path.push("M", x0, ",", y0);}if(x3 != null){var rc0=Math.min(rc, (r0 - lc) / (kc - 1)), t03=d3_svg_arcCornerTangents([x0, y0], [x3, y3], r0, -rc0, cw), t21=d3_svg_arcCornerTangents([x2, y2], x1 == null?[x0, y0]:[x1, y1], r0, -rc0, cw);if(rc === rc0){path.push("L", t21[0], "A", rc0, ",", rc0, " 0 0,", cr, " ", t21[1], "A", r0, ",", r0, " 0 ", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), ",", 1 - cw, " ", t03[1], "A", rc0, ",", rc0, " 0 0,", cr, " ", t03[0]);}else {path.push("L", t21[0], "A", rc0, ",", rc0, " 0 0,", cr, " ", t03[0]);}}else {path.push("L", x2, ",", y2);}}else {path.push("M", x0, ",", y0);if(x1 != null)path.push("A", r1, ",", r1, " 0 ", l1, ",", cw, " ", x1, ",", y1);path.push("L", x2, ",", y2);if(x3 != null)path.push("A", r0, ",", r0, " 0 ", l0, ",", 1 - cw, " ", x3, ",", y3);}path.push("Z");return path.join("");}function circleSegment(r1, cw){return "M0," + r1 + "A" + r1 + "," + r1 + " 0 1," + cw + " 0," + -r1 + "A" + r1 + "," + r1 + " 0 1," + cw + " 0," + r1;}arc.innerRadius = function(v){if(!arguments.length)return innerRadius;innerRadius = d3_functor(v);return arc;};arc.outerRadius = function(v){if(!arguments.length)return outerRadius;outerRadius = d3_functor(v);return arc;};arc.cornerRadius = function(v){if(!arguments.length)return cornerRadius;cornerRadius = d3_functor(v);return arc;};arc.padRadius = function(v){if(!arguments.length)return padRadius;padRadius = v == d3_svg_arcAuto?d3_svg_arcAuto:d3_functor(v);return arc;};arc.startAngle = function(v){if(!arguments.length)return startAngle;startAngle = d3_functor(v);return arc;};arc.endAngle = function(v){if(!arguments.length)return endAngle;endAngle = d3_functor(v);return arc;};arc.padAngle = function(v){if(!arguments.length)return padAngle;padAngle = d3_functor(v);return arc;};arc.centroid = function(){var r=(+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a=(+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;return [Math.cos(a) * r, Math.sin(a) * r];};return arc;};var d3_svg_arcAuto="auto";function d3_svg_arcInnerRadius(d){return d.innerRadius;}function d3_svg_arcOuterRadius(d){return d.outerRadius;}function d3_svg_arcStartAngle(d){return d.startAngle;}function d3_svg_arcEndAngle(d){return d.endAngle;}function d3_svg_arcPadAngle(d){return d && d.padAngle;}function d3_svg_arcSweep(x0, y0, x1, y1){return (x0 - x1) * y0 - (y0 - y1) * x0 > 0?0:1;}function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw){var x01=p0[0] - p1[0], y01=p0[1] - p1[1], lo=(cw?rc:-rc) / Math.sqrt(x01 * x01 + y01 * y01), ox=lo * y01, oy=-lo * x01, x1=p0[0] + ox, y1=p0[1] + oy, x2=p1[0] + ox, y2=p1[1] + oy, x3=(x1 + x2) / 2, y3=(y1 + y2) / 2, dx=x2 - x1, dy=y2 - y1, d2=dx * dx + dy * dy, r=r1 - rc, D=x1 * y2 - x2 * y1, d=(dy < 0?-1:1) * Math.sqrt(r * r * d2 - D * D), cx0=(D * dy - dx * d) / d2, cy0=(-D * dx - dy * d) / d2, cx1=(D * dy + dx * d) / d2, cy1=(-D * dx + dy * d) / d2, dx0=cx0 - x3, dy0=cy0 - y3, dx1=cx1 - x3, dy1=cy1 - y3;if(dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1)cx0 = cx1, cy0 = cy1;return [[cx0 - ox, cy0 - oy], [cx0 * r1 / r, cy0 * r1 / r]];}function d3_svg_line(projection){var x=d3_geom_pointX, y=d3_geom_pointY, defined=d3_true, interpolate=d3_svg_lineLinear, interpolateKey=interpolate.key, tension=0.7;function line(data){var segments=[], points=[], i=-1, n=data.length, d, fx=d3_functor(x), fy=d3_functor(y);function segment(){segments.push("M", interpolate(projection(points), tension));}while(++i < n) {if(defined.call(this, d = data[i], i)){points.push([+fx.call(this, d, i), +fy.call(this, d, i)]);}else if(points.length){segment();points = [];}}if(points.length)segment();return segments.length?segments.join(""):null;}line.x = function(_){if(!arguments.length)return x;x = _;return line;};line.y = function(_){if(!arguments.length)return y;y = _;return line;};line.defined = function(_){if(!arguments.length)return defined;defined = _;return line;};line.interpolate = function(_){if(!arguments.length)return interpolateKey;if(typeof _ === "function")interpolateKey = interpolate = _;else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;return line;};line.tension = function(_){if(!arguments.length)return tension;tension = _;return line;};return line;}d3.svg.line = function(){return d3_svg_line(d3_identity);};var d3_svg_lineInterpolators=d3.map({linear:d3_svg_lineLinear, "linear-closed":d3_svg_lineLinearClosed, step:d3_svg_lineStep, "step-before":d3_svg_lineStepBefore, "step-after":d3_svg_lineStepAfter, basis:d3_svg_lineBasis, "basis-open":d3_svg_lineBasisOpen, "basis-closed":d3_svg_lineBasisClosed, bundle:d3_svg_lineBundle, cardinal:d3_svg_lineCardinal, "cardinal-open":d3_svg_lineCardinalOpen, "cardinal-closed":d3_svg_lineCardinalClosed, monotone:d3_svg_lineMonotone});d3_svg_lineInterpolators.forEach(function(key, value){value.key = key;value.closed = /-closed$/.test(key);});function d3_svg_lineLinear(points){return points.join("L");}function d3_svg_lineLinearClosed(points){return d3_svg_lineLinear(points) + "Z";}function d3_svg_lineStep(points){var i=0, n=points.length, p=points[0], path=[p[0], ",", p[1]];while(++i < n) path.push("H", (p[0] + (p = points[i])[0]) / 2, "V", p[1]);if(n > 1)path.push("H", p[0]);return path.join("");}function d3_svg_lineStepBefore(points){var i=0, n=points.length, p=points[0], path=[p[0], ",", p[1]];while(++i < n) path.push("V", (p = points[i])[1], "H", p[0]);return path.join("");}function d3_svg_lineStepAfter(points){var i=0, n=points.length, p=points[0], path=[p[0], ",", p[1]];while(++i < n) path.push("H", (p = points[i])[0], "V", p[1]);return path.join("");}function d3_svg_lineCardinalOpen(points, tension){return points.length < 4?d3_svg_lineLinear(points):points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));}function d3_svg_lineCardinalClosed(points, tension){return points.length < 3?d3_svg_lineLinear(points):points[0] + d3_svg_lineHermite((points.push(points[0]), points), d3_svg_lineCardinalTangents([points[points.length - 2]].concat(points, [points[1]]), tension));}function d3_svg_lineCardinal(points, tension){return points.length < 3?d3_svg_lineLinear(points):points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));}function d3_svg_lineHermite(points, tangents){if(tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2){return d3_svg_lineLinear(points);}var quad=points.length != tangents.length, path="", p0=points[0], p=points[1], t0=tangents[0], t=t0, pi=1;if(quad){path += "Q" + (p[0] - t0[0] * 2 / 3) + "," + (p[1] - t0[1] * 2 / 3) + "," + p[0] + "," + p[1];p0 = points[1];pi = 2;}if(tangents.length > 1){t = tangents[1];p = points[pi];pi++;path += "C" + (p0[0] + t0[0]) + "," + (p0[1] + t0[1]) + "," + (p[0] - t[0]) + "," + (p[1] - t[1]) + "," + p[0] + "," + p[1];for(var i=2; i < tangents.length; i++, pi++) {p = points[pi];t = tangents[i];path += "S" + (p[0] - t[0]) + "," + (p[1] - t[1]) + "," + p[0] + "," + p[1];}}if(quad){var lp=points[pi];path += "Q" + (p[0] + t[0] * 2 / 3) + "," + (p[1] + t[1] * 2 / 3) + "," + lp[0] + "," + lp[1];}return path;}function d3_svg_lineCardinalTangents(points, tension){var tangents=[], a=(1 - tension) / 2, p0, p1=points[0], p2=points[1], i=1, n=points.length;while(++i < n) {p0 = p1;p1 = p2;p2 = points[i];tangents.push([a * (p2[0] - p0[0]), a * (p2[1] - p0[1])]);}return tangents;}function d3_svg_lineBasis(points){if(points.length < 3)return d3_svg_lineLinear(points);var i=1, n=points.length, pi=points[0], x0=pi[0], y0=pi[1], px=[x0, x0, x0, (pi = points[1])[0]], py=[y0, y0, y0, pi[1]], path=[x0, ",", y0, "L", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py)];points.push(points[n - 1]);while(++i <= n) {pi = points[i];px.shift();px.push(pi[0]);py.shift();py.push(pi[1]);d3_svg_lineBasisBezier(path, px, py);}points.pop();path.push("L", pi);return path.join("");}function d3_svg_lineBasisOpen(points){if(points.length < 4)return d3_svg_lineLinear(points);var path=[], i=-1, n=points.length, pi, px=[0], py=[0];while(++i < 3) {pi = points[i];px.push(pi[0]);py.push(pi[1]);}path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + "," + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));--i;while(++i < n) {pi = points[i];px.shift();px.push(pi[0]);py.shift();py.push(pi[1]);d3_svg_lineBasisBezier(path, px, py);}return path.join("");}function d3_svg_lineBasisClosed(points){var path, i=-1, n=points.length, m=n + 4, pi, px=[], py=[];while(++i < 4) {pi = points[i % n];px.push(pi[0]);py.push(pi[1]);}path = [d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py)];--i;while(++i < m) {pi = points[i % n];px.shift();px.push(pi[0]);py.shift();py.push(pi[1]);d3_svg_lineBasisBezier(path, px, py);}return path.join("");}function d3_svg_lineBundle(points, tension){var n=points.length - 1;if(n){var x0=points[0][0], y0=points[0][1], dx=points[n][0] - x0, dy=points[n][1] - y0, i=-1, p, t;while(++i <= n) {p = points[i];t = i / n;p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);}}return d3_svg_lineBasis(points);}function d3_svg_lineDot4(a, b){return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];}var d3_svg_lineBasisBezier1=[0, 2 / 3, 1 / 3, 0], d3_svg_lineBasisBezier2=[0, 1 / 3, 2 / 3, 0], d3_svg_lineBasisBezier3=[0, 1 / 6, 2 / 3, 1 / 6];function d3_svg_lineBasisBezier(path, x, y){path.push("C", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));}function d3_svg_lineSlope(p0, p1){return (p1[1] - p0[1]) / (p1[0] - p0[0]);}function d3_svg_lineFiniteDifferences(points){var i=0, j=points.length - 1, m=[], p0=points[0], p1=points[1], d=m[0] = d3_svg_lineSlope(p0, p1);while(++i < j) {m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;}m[i] = d;return m;}function d3_svg_lineMonotoneTangents(points){var tangents=[], d, a, b, s, m=d3_svg_lineFiniteDifferences(points), i=-1, j=points.length - 1;while(++i < j) {d = d3_svg_lineSlope(points[i], points[i + 1]);if(abs(d) < ε){m[i] = m[i + 1] = 0;}else {a = m[i] / d;b = m[i + 1] / d;s = a * a + b * b;if(s > 9){s = d * 3 / Math.sqrt(s);m[i] = s * a;m[i + 1] = s * b;}}}i = -1;while(++i <= j) {s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));tangents.push([s || 0, m[i] * s || 0]);}return tangents;}function d3_svg_lineMonotone(points){return points.length < 3?d3_svg_lineLinear(points):points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));}d3.svg.line.radial = function(){var line=d3_svg_line(d3_svg_lineRadial);line.radius = line.x, delete line.x;line.angle = line.y, delete line.y;return line;};function d3_svg_lineRadial(points){var point, i=-1, n=points.length, r, a;while(++i < n) {point = points[i];r = point[0];a = point[1] - halfπ;point[0] = r * Math.cos(a);point[1] = r * Math.sin(a);}return points;}function d3_svg_area(projection){var x0=d3_geom_pointX, x1=d3_geom_pointX, y0=0, y1=d3_geom_pointY, defined=d3_true, interpolate=d3_svg_lineLinear, interpolateKey=interpolate.key, interpolateReverse=interpolate, L="L", tension=0.7;function area(data){var segments=[], points0=[], points1=[], i=-1, n=data.length, d, fx0=d3_functor(x0), fy0=d3_functor(y0), fx1=x0 === x1?function(){return x;}:d3_functor(x1), fy1=y0 === y1?function(){return y;}:d3_functor(y1), x, y;function segment(){segments.push("M", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), "Z");}while(++i < n) {if(defined.call(this, d = data[i], i)){points0.push([x = +fx0.call(this, d, i), y = +fy0.call(this, d, i)]);points1.push([+fx1.call(this, d, i), +fy1.call(this, d, i)]);}else if(points0.length){segment();points0 = [];points1 = [];}}if(points0.length)segment();return segments.length?segments.join(""):null;}area.x = function(_){if(!arguments.length)return x1;x0 = x1 = _;return area;};area.x0 = function(_){if(!arguments.length)return x0;x0 = _;return area;};area.x1 = function(_){if(!arguments.length)return x1;x1 = _;return area;};area.y = function(_){if(!arguments.length)return y1;y0 = y1 = _;return area;};area.y0 = function(_){if(!arguments.length)return y0;y0 = _;return area;};area.y1 = function(_){if(!arguments.length)return y1;y1 = _;return area;};area.defined = function(_){if(!arguments.length)return defined;defined = _;return area;};area.interpolate = function(_){if(!arguments.length)return interpolateKey;if(typeof _ === "function")interpolateKey = interpolate = _;else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;interpolateReverse = interpolate.reverse || interpolate;L = interpolate.closed?"M":"L";return area;};area.tension = function(_){if(!arguments.length)return tension;tension = _;return area;};return area;}d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;d3.svg.area = function(){return d3_svg_area(d3_identity);};d3.svg.area.radial = function(){var area=d3_svg_area(d3_svg_lineRadial);area.radius = area.x, delete area.x;area.innerRadius = area.x0, delete area.x0;area.outerRadius = area.x1, delete area.x1;area.angle = area.y, delete area.y;area.startAngle = area.y0, delete area.y0;area.endAngle = area.y1, delete area.y1;return area;};d3.svg.chord = function(){var source=d3_source, target=d3_target, radius=d3_svg_chordRadius, startAngle=d3_svg_arcStartAngle, endAngle=d3_svg_arcEndAngle;function chord(d, i){var s=subgroup(this, source, d, i), t=subgroup(this, target, d, i);return "M" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t)?curve(s.r, s.p1, s.r, s.p0):curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + "Z";}function subgroup(self, f, d, i){var subgroup=f.call(self, d, i), r=radius.call(self, subgroup, i), a0=startAngle.call(self, subgroup, i) - halfπ, a1=endAngle.call(self, subgroup, i) - halfπ;return {r:r, a0:a0, a1:a1, p0:[r * Math.cos(a0), r * Math.sin(a0)], p1:[r * Math.cos(a1), r * Math.sin(a1)]};}function equals(a, b){return a.a0 == b.a0 && a.a1 == b.a1;}function arc(r, p, a){return "A" + r + "," + r + " 0 " + +(a > π) + ",1 " + p;}function curve(r0, p0, r1, p1){return "Q 0,0 " + p1;}chord.radius = function(v){if(!arguments.length)return radius;radius = d3_functor(v);return chord;};chord.source = function(v){if(!arguments.length)return source;source = d3_functor(v);return chord;};chord.target = function(v){if(!arguments.length)return target;target = d3_functor(v);return chord;};chord.startAngle = function(v){if(!arguments.length)return startAngle;startAngle = d3_functor(v);return chord;};chord.endAngle = function(v){if(!arguments.length)return endAngle;endAngle = d3_functor(v);return chord;};return chord;};function d3_svg_chordRadius(d){return d.radius;}d3.svg.diagonal = function(){var source=d3_source, target=d3_target, projection=d3_svg_diagonalProjection;function diagonal(d, i){var p0=source.call(this, d, i), p3=target.call(this, d, i), m=(p0.y + p3.y) / 2, p=[p0, {x:p0.x, y:m}, {x:p3.x, y:m}, p3];p = p.map(projection);return "M" + p[0] + "C" + p[1] + " " + p[2] + " " + p[3];}diagonal.source = function(x){if(!arguments.length)return source;source = d3_functor(x);return diagonal;};diagonal.target = function(x){if(!arguments.length)return target;target = d3_functor(x);return diagonal;};diagonal.projection = function(x){if(!arguments.length)return projection;projection = x;return diagonal;};return diagonal;};function d3_svg_diagonalProjection(d){return [d.x, d.y];}d3.svg.diagonal.radial = function(){var diagonal=d3.svg.diagonal(), projection=d3_svg_diagonalProjection, projection_=diagonal.projection;diagonal.projection = function(x){return arguments.length?projection_(d3_svg_diagonalRadialProjection(projection = x)):projection;};return diagonal;};function d3_svg_diagonalRadialProjection(projection){return function(){var d=projection.apply(this, arguments), r=d[0], a=d[1] - halfπ;return [r * Math.cos(a), r * Math.sin(a)];};}d3.svg.symbol = function(){var type=d3_svg_symbolType, size=d3_svg_symbolSize;function symbol(d, i){return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));}symbol.type = function(x){if(!arguments.length)return type;type = d3_functor(x);return symbol;};symbol.size = function(x){if(!arguments.length)return size;size = d3_functor(x);return symbol;};return symbol;};function d3_svg_symbolSize(){return 64;}function d3_svg_symbolType(){return "circle";}function d3_svg_symbolCircle(size){var r=Math.sqrt(size / π);return "M0," + r + "A" + r + "," + r + " 0 1,1 0," + -r + "A" + r + "," + r + " 0 1,1 0," + r + "Z";}var d3_svg_symbols=d3.map({circle:d3_svg_symbolCircle, cross:function cross(size){var r=Math.sqrt(size / 5) / 2;return "M" + -3 * r + "," + -r + "H" + -r + "V" + -3 * r + "H" + r + "V" + -r + "H" + 3 * r + "V" + r + "H" + r + "V" + 3 * r + "H" + -r + "V" + r + "H" + -3 * r + "Z";}, diamond:function diamond(size){var ry=Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx=ry * d3_svg_symbolTan30;return "M0," + -ry + "L" + rx + ",0" + " 0," + ry + " " + -rx + ",0" + "Z";}, square:function square(size){var r=Math.sqrt(size) / 2;return "M" + -r + "," + -r + "L" + r + "," + -r + " " + r + "," + r + " " + -r + "," + r + "Z";}, "triangle-down":function triangleDown(size){var rx=Math.sqrt(size / d3_svg_symbolSqrt3), ry=rx * d3_svg_symbolSqrt3 / 2;return "M0," + ry + "L" + rx + "," + -ry + " " + -rx + "," + -ry + "Z";}, "triangle-up":function triangleUp(size){var rx=Math.sqrt(size / d3_svg_symbolSqrt3), ry=rx * d3_svg_symbolSqrt3 / 2;return "M0," + -ry + "L" + rx + "," + ry + " " + -rx + "," + ry + "Z";}});d3.svg.symbolTypes = d3_svg_symbols.keys();var d3_svg_symbolSqrt3=Math.sqrt(3), d3_svg_symbolTan30=Math.tan(30 * d3_radians);d3_selectionPrototype.transition = function(name){var id=d3_transitionInheritId || ++d3_transitionId, ns=d3_transitionNamespace(name), subgroups=[], subgroup, node, transition=d3_transitionInherit || {time:Date.now(), ease:d3_ease_cubicInOut, delay:0, duration:250};for(var j=-1, m=this.length; ++j < m;) {subgroups.push(subgroup = []);for(var group=this[j], i=-1, n=group.length; ++i < n;) {if(node = group[i])d3_transitionNode(node, i, ns, id, transition);subgroup.push(node);}}return d3_transition(subgroups, ns, id);};d3_selectionPrototype.interrupt = function(name){return this.each(name == null?d3_selection_interrupt:d3_selection_interruptNS(d3_transitionNamespace(name)));};var d3_selection_interrupt=d3_selection_interruptNS(d3_transitionNamespace());function d3_selection_interruptNS(ns){return function(){var lock, active;if((lock = this[ns]) && (active = lock[lock.active])){if(--lock.count)delete lock[lock.active];else delete this[ns];lock.active += 0.5;active.event && active.event.interrupt.call(this, this.__data__, active.index);}};}function d3_transition(groups, ns, id){d3_subclass(groups, d3_transitionPrototype);groups.namespace = ns;groups.id = id;return groups;}var d3_transitionPrototype=[], d3_transitionId=0, d3_transitionInheritId, d3_transitionInherit;d3_transitionPrototype.call = d3_selectionPrototype.call;d3_transitionPrototype.empty = d3_selectionPrototype.empty;d3_transitionPrototype.node = d3_selectionPrototype.node;d3_transitionPrototype.size = d3_selectionPrototype.size;d3.transition = function(selection, name){return selection && selection.transition?d3_transitionInheritId?selection.transition(name):selection:d3.selection().transition(selection);};d3.transition.prototype = d3_transitionPrototype;d3_transitionPrototype.select = function(selector){var id=this.id, ns=this.namespace, subgroups=[], subgroup, subnode, node;selector = d3_selection_selector(selector);for(var j=-1, m=this.length; ++j < m;) {subgroups.push(subgroup = []);for(var group=this[j], i=-1, n=group.length; ++i < n;) {if((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))){if("__data__" in node)subnode.__data__ = node.__data__;d3_transitionNode(subnode, i, ns, id, node[ns][id]);subgroup.push(subnode);}else {subgroup.push(null);}}}return d3_transition(subgroups, ns, id);};d3_transitionPrototype.selectAll = function(selector){var id=this.id, ns=this.namespace, subgroups=[], subgroup, subnodes, node, subnode, transition;selector = d3_selection_selectorAll(selector);for(var j=-1, m=this.length; ++j < m;) {for(var group=this[j], i=-1, n=group.length; ++i < n;) {if(node = group[i]){transition = node[ns][id];subnodes = selector.call(node, node.__data__, i, j);subgroups.push(subgroup = []);for(var k=-1, o=subnodes.length; ++k < o;) {if(subnode = subnodes[k])d3_transitionNode(subnode, k, ns, id, transition);subgroup.push(subnode);}}}}return d3_transition(subgroups, ns, id);};d3_transitionPrototype.filter = function(filter){var subgroups=[], subgroup, group, node;if(typeof filter !== "function")filter = d3_selection_filter(filter);for(var j=0, m=this.length; j < m; j++) {subgroups.push(subgroup = []);for(var group=this[j], i=0, n=group.length; i < n; i++) {if((node = group[i]) && filter.call(node, node.__data__, i, j)){subgroup.push(node);}}}return d3_transition(subgroups, this.namespace, this.id);};d3_transitionPrototype.tween = function(name, tween){var id=this.id, ns=this.namespace;if(arguments.length < 2)return this.node()[ns][id].tween.get(name);return d3_selection_each(this, tween == null?function(node){node[ns][id].tween.remove(name);}:function(node){node[ns][id].tween.set(name, tween);});};function d3_transition_tween(groups, name, value, tween){var id=groups.id, ns=groups.namespace;return d3_selection_each(groups, typeof value === "function"?function(node, i, j){node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));}:(value = tween(value), function(node){node[ns][id].tween.set(name, value);}));}d3_transitionPrototype.attr = function(nameNS, value){if(arguments.length < 2){for(value in nameNS) this.attr(value, nameNS[value]);return this;}var interpolate=nameNS == "transform"?d3_interpolateTransform:d3_interpolate, name=d3.ns.qualify(nameNS);function attrNull(){this.removeAttribute(name);}function attrNullNS(){this.removeAttributeNS(name.space, name.local);}function attrTween(b){return b == null?attrNull:(b += "", function(){var a=this.getAttribute(name), i;return a !== b && (i = interpolate(a, b), function(t){this.setAttribute(name, i(t));});});}function attrTweenNS(b){return b == null?attrNullNS:(b += "", function(){var a=this.getAttributeNS(name.space, name.local), i;return a !== b && (i = interpolate(a, b), function(t){this.setAttributeNS(name.space, name.local, i(t));});});}return d3_transition_tween(this, "attr." + nameNS, value, name.local?attrTweenNS:attrTween);};d3_transitionPrototype.attrTween = function(nameNS, tween){var name=d3.ns.qualify(nameNS);function attrTween(d, i){var f=tween.call(this, d, i, this.getAttribute(name));return f && function(t){this.setAttribute(name, f(t));};}function attrTweenNS(d, i){var f=tween.call(this, d, i, this.getAttributeNS(name.space, name.local));return f && function(t){this.setAttributeNS(name.space, name.local, f(t));};}return this.tween("attr." + nameNS, name.local?attrTweenNS:attrTween);};d3_transitionPrototype.style = function(name, value, priority){var n=arguments.length;if(n < 3){if(typeof name !== "string"){if(n < 2)value = "";for(priority in name) this.style(priority, name[priority], value);return this;}priority = "";}function styleNull(){this.style.removeProperty(name);}function styleString(b){return b == null?styleNull:(b += "", function(){var a=d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;return a !== b && (i = d3_interpolate(a, b), function(t){this.style.setProperty(name, i(t), priority);});});}return d3_transition_tween(this, "style." + name, value, styleString);};d3_transitionPrototype.styleTween = function(name, tween, priority){if(arguments.length < 3)priority = "";function styleTween(d, i){var f=tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));return f && function(t){this.style.setProperty(name, f(t), priority);};}return this.tween("style." + name, styleTween);};d3_transitionPrototype.text = function(value){return d3_transition_tween(this, "text", value, d3_transition_text);};function d3_transition_text(b){if(b == null)b = "";return function(){this.textContent = b;};}d3_transitionPrototype.remove = function(){var ns=this.namespace;return this.each("end.transition", function(){var p;if(this[ns].count < 2 && (p = this.parentNode))p.removeChild(this);});};d3_transitionPrototype.ease = function(value){var id=this.id, ns=this.namespace;if(arguments.length < 1)return this.node()[ns][id].ease;if(typeof value !== "function")value = d3.ease.apply(d3, arguments);return d3_selection_each(this, function(node){node[ns][id].ease = value;});};d3_transitionPrototype.delay = function(value){var id=this.id, ns=this.namespace;if(arguments.length < 1)return this.node()[ns][id].delay;return d3_selection_each(this, typeof value === "function"?function(node, i, j){node[ns][id].delay = +value.call(node, node.__data__, i, j);}:(value = +value, function(node){node[ns][id].delay = value;}));};d3_transitionPrototype.duration = function(value){var id=this.id, ns=this.namespace;if(arguments.length < 1)return this.node()[ns][id].duration;return d3_selection_each(this, typeof value === "function"?function(node, i, j){node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));}:(value = Math.max(1, value), function(node){node[ns][id].duration = value;}));};d3_transitionPrototype.each = function(type, listener){var id=this.id, ns=this.namespace;if(arguments.length < 2){var inherit=d3_transitionInherit, inheritId=d3_transitionInheritId;try{d3_transitionInheritId = id;d3_selection_each(this, function(node, i, j){d3_transitionInherit = node[ns][id];type.call(node, node.__data__, i, j);});}finally {d3_transitionInherit = inherit;d3_transitionInheritId = inheritId;}}else {d3_selection_each(this, function(node){var transition=node[ns][id];(transition.event || (transition.event = d3.dispatch("start", "end", "interrupt"))).on(type, listener);});}return this;};d3_transitionPrototype.transition = function(){var id0=this.id, id1=++d3_transitionId, ns=this.namespace, subgroups=[], subgroup, group, node, transition;for(var j=0, m=this.length; j < m; j++) {subgroups.push(subgroup = []);for(var group=this[j], i=0, n=group.length; i < n; i++) {if(node = group[i]){transition = node[ns][id0];d3_transitionNode(node, i, ns, id1, {time:transition.time, ease:transition.ease, delay:transition.delay + transition.duration, duration:transition.duration});}subgroup.push(node);}}return d3_transition(subgroups, ns, id1);};function d3_transitionNamespace(name){return name == null?"__transition__":"__transition_" + name + "__";}function d3_transitionNode(node, i, ns, id, inherit){var lock=node[ns] || (node[ns] = {active:0, count:0}), transition=lock[id];if(!transition){var time=inherit.time;transition = lock[id] = {tween:new d3_Map(), time:time, delay:inherit.delay, duration:inherit.duration, ease:inherit.ease, index:i};inherit = null;++lock.count;d3.timer(function(elapsed){var delay=transition.delay, duration, ease, timer=d3_timer_active, tweened=[];timer.t = delay + time;if(delay <= elapsed)return start(elapsed - delay);timer.c = start;function start(elapsed){if(lock.active > id)return stop();var active=lock[lock.active];if(active){--lock.count;delete lock[lock.active];active.event && active.event.interrupt.call(node, node.__data__, active.index);}lock.active = id;transition.event && transition.event.start.call(node, node.__data__, i);transition.tween.forEach(function(key, value){if(value = value.call(node, node.__data__, i)){tweened.push(value);}});ease = transition.ease;duration = transition.duration;d3.timer(function(){timer.c = tick(elapsed || 1)?d3_true:tick;return 1;}, 0, time);}function tick(elapsed){if(lock.active !== id)return 1;var t=elapsed / duration, e=ease(t), n=tweened.length;while(n > 0) {tweened[--n].call(node, e);}if(t >= 1){transition.event && transition.event.end.call(node, node.__data__, i);return stop();}}function stop(){if(--lock.count)delete lock[id];else delete node[ns];return 1;}}, 0, time);}}d3.svg.axis = function(){var scale=d3.scale.linear(), orient=d3_svg_axisDefaultOrient, innerTickSize=6, outerTickSize=6, tickPadding=3, tickArguments_=[10], tickValues=null, tickFormat_;function axis(g){g.each(function(){var g=d3.select(this);var scale0=this.__chart__ || scale, scale1=this.__chart__ = scale.copy();var ticks=tickValues == null?scale1.ticks?scale1.ticks.apply(scale1, tickArguments_):scale1.domain():tickValues, tickFormat=tickFormat_ == null?scale1.tickFormat?scale1.tickFormat.apply(scale1, tickArguments_):d3_identity:tickFormat_, tick=g.selectAll(".tick").data(ticks, scale1), tickEnter=tick.enter().insert("g", ".domain").attr("class", "tick").style("opacity", ε), tickExit=d3.transition(tick.exit()).style("opacity", ε).remove(), tickUpdate=d3.transition(tick.order()).style("opacity", 1), tickSpacing=Math.max(innerTickSize, 0) + tickPadding, tickTransform;var range=d3_scaleRange(scale1), path=g.selectAll(".domain").data([0]), pathUpdate=(path.enter().append("path").attr("class", "domain"), d3.transition(path));tickEnter.append("line");tickEnter.append("text");var lineEnter=tickEnter.select("line"), lineUpdate=tickUpdate.select("line"), text=tick.select("text").text(tickFormat), textEnter=tickEnter.select("text"), textUpdate=tickUpdate.select("text"), sign=orient === "top" || orient === "left"?-1:1, x1, x2, y1, y2;if(orient === "bottom" || orient === "top"){tickTransform = d3_svg_axisX, x1 = "x", y1 = "y", x2 = "x2", y2 = "y2";text.attr("dy", sign < 0?"0em":".71em").style("text-anchor", "middle");pathUpdate.attr("d", "M" + range[0] + "," + sign * outerTickSize + "V0H" + range[1] + "V" + sign * outerTickSize);}else {tickTransform = d3_svg_axisY, x1 = "y", y1 = "x", x2 = "y2", y2 = "x2";text.attr("dy", ".32em").style("text-anchor", sign < 0?"end":"start");pathUpdate.attr("d", "M" + sign * outerTickSize + "," + range[0] + "H0V" + range[1] + "H" + sign * outerTickSize);}lineEnter.attr(y2, sign * innerTickSize);textEnter.attr(y1, sign * tickSpacing);lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);if(scale1.rangeBand){var x=scale1, dx=x.rangeBand() / 2;scale0 = scale1 = function(d){return x(d) + dx;};}else if(scale0.rangeBand){scale0 = scale1;}else {tickExit.call(tickTransform, scale1, scale0);}tickEnter.call(tickTransform, scale0, scale1);tickUpdate.call(tickTransform, scale1, scale1);});}axis.scale = function(x){if(!arguments.length)return scale;scale = x;return axis;};axis.orient = function(x){if(!arguments.length)return orient;orient = x in d3_svg_axisOrients?x + "":d3_svg_axisDefaultOrient;return axis;};axis.ticks = function(){if(!arguments.length)return tickArguments_;tickArguments_ = arguments;return axis;};axis.tickValues = function(x){if(!arguments.length)return tickValues;tickValues = x;return axis;};axis.tickFormat = function(x){if(!arguments.length)return tickFormat_;tickFormat_ = x;return axis;};axis.tickSize = function(x){var n=arguments.length;if(!n)return innerTickSize;innerTickSize = +x;outerTickSize = +arguments[n - 1];return axis;};axis.innerTickSize = function(x){if(!arguments.length)return innerTickSize;innerTickSize = +x;return axis;};axis.outerTickSize = function(x){if(!arguments.length)return outerTickSize;outerTickSize = +x;return axis;};axis.tickPadding = function(x){if(!arguments.length)return tickPadding;tickPadding = +x;return axis;};axis.tickSubdivide = function(){return arguments.length && axis;};return axis;};var d3_svg_axisDefaultOrient="bottom", d3_svg_axisOrients={top:1, right:1, bottom:1, left:1};function d3_svg_axisX(selection, x0, x1){selection.attr("transform", function(d){var v0=x0(d);return "translate(" + (isFinite(v0)?v0:x1(d)) + ",0)";});}function d3_svg_axisY(selection, y0, y1){selection.attr("transform", function(d){var v0=y0(d);return "translate(0," + (isFinite(v0)?v0:y1(d)) + ")";});}d3.svg.brush = function(){var event=d3_eventDispatch(brush, "brushstart", "brush", "brushend"), x=null, y=null, xExtent=[0, 0], yExtent=[0, 0], xExtentDomain, yExtentDomain, xClamp=true, yClamp=true, resizes=d3_svg_brushResizes[0];function brush(g){g.each(function(){var g=d3.select(this).style("pointer-events", "all").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)").on("mousedown.brush", brushstart).on("touchstart.brush", brushstart);var background=g.selectAll(".background").data([0]);background.enter().append("rect").attr("class", "background").style("visibility", "hidden").style("cursor", "crosshair");g.selectAll(".extent").data([0]).enter().append("rect").attr("class", "extent").style("cursor", "move");var resize=g.selectAll(".resize").data(resizes, d3_identity);resize.exit().remove();resize.enter().append("g").attr("class", function(d){return "resize " + d;}).style("cursor", function(d){return d3_svg_brushCursor[d];}).append("rect").attr("x", function(d){return /[ew]$/.test(d)?-3:null;}).attr("y", function(d){return /^[ns]/.test(d)?-3:null;}).attr("width", 6).attr("height", 6).style("visibility", "hidden");resize.style("display", brush.empty()?"none":null);var gUpdate=d3.transition(g), backgroundUpdate=d3.transition(background), range;if(x){range = d3_scaleRange(x);backgroundUpdate.attr("x", range[0]).attr("width", range[1] - range[0]);redrawX(gUpdate);}if(y){range = d3_scaleRange(y);backgroundUpdate.attr("y", range[0]).attr("height", range[1] - range[0]);redrawY(gUpdate);}redraw(gUpdate);});}brush.event = function(g){g.each(function(){var event_=event.of(this, arguments), extent1={x:xExtent, y:yExtent, i:xExtentDomain, j:yExtentDomain}, extent0=this.__chart__ || extent1;this.__chart__ = extent1;if(d3_transitionInheritId){d3.select(this).transition().each("start.brush", function(){xExtentDomain = extent0.i;yExtentDomain = extent0.j;xExtent = extent0.x;yExtent = extent0.y;event_({type:"brushstart"});}).tween("brush:brush", function(){var xi=d3_interpolateArray(xExtent, extent1.x), yi=d3_interpolateArray(yExtent, extent1.y);xExtentDomain = yExtentDomain = null;return function(t){xExtent = extent1.x = xi(t);yExtent = extent1.y = yi(t);event_({type:"brush", mode:"resize"});};}).each("end.brush", function(){xExtentDomain = extent1.i;yExtentDomain = extent1.j;event_({type:"brush", mode:"resize"});event_({type:"brushend"});});}else {event_({type:"brushstart"});event_({type:"brush", mode:"resize"});event_({type:"brushend"});}});};function redraw(g){g.selectAll(".resize").attr("transform", function(d){return "translate(" + xExtent[+/e$/.test(d)] + "," + yExtent[+/^s/.test(d)] + ")";});}function redrawX(g){g.select(".extent").attr("x", xExtent[0]);g.selectAll(".extent,.n>rect,.s>rect").attr("width", xExtent[1] - xExtent[0]);}function redrawY(g){g.select(".extent").attr("y", yExtent[0]);g.selectAll(".extent,.e>rect,.w>rect").attr("height", yExtent[1] - yExtent[0]);}function brushstart(){var target=this, eventTarget=d3.select(d3.event.target), event_=event.of(target, arguments), g=d3.select(target), resizing=eventTarget.datum(), resizingX=!/^(n|s)$/.test(resizing) && x, resizingY=!/^(e|w)$/.test(resizing) && y, dragging=eventTarget.classed("extent"), dragRestore=d3_event_dragSuppress(target), center, origin=d3.mouse(target), offset;var w=d3.select(d3_window(target)).on("keydown.brush", keydown).on("keyup.brush", keyup);if(d3.event.changedTouches){w.on("touchmove.brush", brushmove).on("touchend.brush", brushend);}else {w.on("mousemove.brush", brushmove).on("mouseup.brush", brushend);}g.interrupt().selectAll("*").interrupt();if(dragging){origin[0] = xExtent[0] - origin[0];origin[1] = yExtent[0] - origin[1];}else if(resizing){var ex=+/w$/.test(resizing), ey=+/^n/.test(resizing);offset = [xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1]];origin[0] = xExtent[ex];origin[1] = yExtent[ey];}else if(d3.event.altKey)center = origin.slice();g.style("pointer-events", "none").selectAll(".resize").style("display", null);d3.select("body").style("cursor", eventTarget.style("cursor"));event_({type:"brushstart"});brushmove();function keydown(){if(d3.event.keyCode == 32){if(!dragging){center = null;origin[0] -= xExtent[1];origin[1] -= yExtent[1];dragging = 2;}d3_eventPreventDefault();}}function keyup(){if(d3.event.keyCode == 32 && dragging == 2){origin[0] += xExtent[1];origin[1] += yExtent[1];dragging = 0;d3_eventPreventDefault();}}function brushmove(){var point=d3.mouse(target), moved=false;if(offset){point[0] += offset[0];point[1] += offset[1];}if(!dragging){if(d3.event.altKey){if(!center)center = [(xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2];origin[0] = xExtent[+(point[0] < center[0])];origin[1] = yExtent[+(point[1] < center[1])];}else center = null;}if(resizingX && move1(point, x, 0)){redrawX(g);moved = true;}if(resizingY && move1(point, y, 1)){redrawY(g);moved = true;}if(moved){redraw(g);event_({type:"brush", mode:dragging?"move":"resize"});}}function move1(point, scale, i){var range=d3_scaleRange(scale), r0=range[0], r1=range[1], position=origin[i], extent=i?yExtent:xExtent, size=extent[1] - extent[0], min, max;if(dragging){r0 -= position;r1 -= size + position;}min = (i?yClamp:xClamp)?Math.max(r0, Math.min(r1, point[i])):point[i];if(dragging){max = (min += position) + size;}else {if(center)position = Math.max(r0, Math.min(r1, 2 * center[i] - min));if(position < min){max = min;min = position;}else {max = position;}}if(extent[0] != min || extent[1] != max){if(i)yExtentDomain = null;else xExtentDomain = null;extent[0] = min;extent[1] = max;return true;}}function brushend(){brushmove();g.style("pointer-events", "all").selectAll(".resize").style("display", brush.empty()?"none":null);d3.select("body").style("cursor", null);w.on("mousemove.brush", null).on("mouseup.brush", null).on("touchmove.brush", null).on("touchend.brush", null).on("keydown.brush", null).on("keyup.brush", null);dragRestore();event_({type:"brushend"});}}brush.x = function(z){if(!arguments.length)return x;x = z;resizes = d3_svg_brushResizes[!x << 1 | !y];return brush;};brush.y = function(z){if(!arguments.length)return y;y = z;resizes = d3_svg_brushResizes[!x << 1 | !y];return brush;};brush.clamp = function(z){if(!arguments.length)return x && y?[xClamp, yClamp]:x?xClamp:y?yClamp:null;if(x && y)xClamp = !!z[0], yClamp = !!z[1];else if(x)xClamp = !!z;else if(y)yClamp = !!z;return brush;};brush.extent = function(z){var x0, x1, y0, y1, t;if(!arguments.length){if(x){if(xExtentDomain){x0 = xExtentDomain[0], x1 = xExtentDomain[1];}else {x0 = xExtent[0], x1 = xExtent[1];if(x.invert)x0 = x.invert(x0), x1 = x.invert(x1);if(x1 < x0)t = x0, x0 = x1, x1 = t;}}if(y){if(yExtentDomain){y0 = yExtentDomain[0], y1 = yExtentDomain[1];}else {y0 = yExtent[0], y1 = yExtent[1];if(y.invert)y0 = y.invert(y0), y1 = y.invert(y1);if(y1 < y0)t = y0, y0 = y1, y1 = t;}}return x && y?[[x0, y0], [x1, y1]]:x?[x0, x1]:y && [y0, y1];}if(x){x0 = z[0], x1 = z[1];if(y)x0 = x0[0], x1 = x1[0];xExtentDomain = [x0, x1];if(x.invert)x0 = x(x0), x1 = x(x1);if(x1 < x0)t = x0, x0 = x1, x1 = t;if(x0 != xExtent[0] || x1 != xExtent[1])xExtent = [x0, x1];}if(y){y0 = z[0], y1 = z[1];if(x)y0 = y0[1], y1 = y1[1];yExtentDomain = [y0, y1];if(y.invert)y0 = y(y0), y1 = y(y1);if(y1 < y0)t = y0, y0 = y1, y1 = t;if(y0 != yExtent[0] || y1 != yExtent[1])yExtent = [y0, y1];}return brush;};brush.clear = function(){if(!brush.empty()){xExtent = [0, 0], yExtent = [0, 0];xExtentDomain = yExtentDomain = null;}return brush;};brush.empty = function(){return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];};return d3.rebind(brush, event, "on");};var d3_svg_brushCursor={n:"ns-resize", e:"ew-resize", s:"ns-resize", w:"ew-resize", nw:"nwse-resize", ne:"nesw-resize", se:"nwse-resize", sw:"nesw-resize"};var d3_svg_brushResizes=[["n", "e", "s", "w", "nw", "ne", "se", "sw"], ["e", "w"], ["n", "s"], []];var d3_time_format=d3_time.format = d3_locale_enUS.timeFormat;var d3_time_formatUtc=d3_time_format.utc;var d3_time_formatIso=d3_time_formatUtc("%Y-%m-%dT%H:%M:%S.%LZ");d3_time_format.iso = Date.prototype.toISOString && +new Date("2000-01-01T00:00:00.000Z")?d3_time_formatIsoNative:d3_time_formatIso;function d3_time_formatIsoNative(date){return date.toISOString();}d3_time_formatIsoNative.parse = function(string){var date=new Date(string);return isNaN(date)?null:date;};d3_time_formatIsoNative.toString = d3_time_formatIso.toString;d3_time.second = d3_time_interval(function(date){return new d3_date(Math.floor(date / 1000) * 1000);}, function(date, offset){date.setTime(date.getTime() + Math.floor(offset) * 1000);}, function(date){return date.getSeconds();});d3_time.seconds = d3_time.second.range;d3_time.seconds.utc = d3_time.second.utc.range;d3_time.minute = d3_time_interval(function(date){return new d3_date(Math.floor(date / 60000) * 60000);}, function(date, offset){date.setTime(date.getTime() + Math.floor(offset) * 60000);}, function(date){return date.getMinutes();});d3_time.minutes = d3_time.minute.range;d3_time.minutes.utc = d3_time.minute.utc.range;d3_time.hour = d3_time_interval(function(date){var timezone=date.getTimezoneOffset() / 60;return new d3_date((Math.floor(date / 3600000 - timezone) + timezone) * 3600000);}, function(date, offset){date.setTime(date.getTime() + Math.floor(offset) * 3600000);}, function(date){return date.getHours();});d3_time.hours = d3_time.hour.range;d3_time.hours.utc = d3_time.hour.utc.range;d3_time.month = d3_time_interval(function(date){date = d3_time.day(date);date.setDate(1);return date;}, function(date, offset){date.setMonth(date.getMonth() + offset);}, function(date){return date.getMonth();});d3_time.months = d3_time.month.range;d3_time.months.utc = d3_time.month.utc.range;function d3_time_scale(linear, methods, format){function scale(x){return linear(x);}scale.invert = function(x){return d3_time_scaleDate(linear.invert(x));};scale.domain = function(x){if(!arguments.length)return linear.domain().map(d3_time_scaleDate);linear.domain(x);return scale;};function tickMethod(extent, count){var span=extent[1] - extent[0], target=span / count, i=d3.bisect(d3_time_scaleSteps, target);return i == d3_time_scaleSteps.length?[methods.year, d3_scale_linearTickRange(extent.map(function(d){return d / 31536000000;}), count)[2]]:!i?[d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2]]:methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target?i - 1:i];}scale.nice = function(interval, skip){var domain=scale.domain(), extent=d3_scaleExtent(domain), method=interval == null?tickMethod(extent, 10):typeof interval === "number" && tickMethod(extent, interval);if(method)interval = method[0], skip = method[1];function skipped(date){return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;}return scale.domain(d3_scale_nice(domain, skip > 1?{floor:function floor(date){while(skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);return date;}, ceil:function ceil(date){while(skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);return date;}}:interval));};scale.ticks = function(interval, skip){var extent=d3_scaleExtent(scale.domain()), method=interval == null?tickMethod(extent, 10):typeof interval === "number"?tickMethod(extent, interval):!interval.range && [{range:interval}, skip];if(method)interval = method[0], skip = method[1];return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1?1:skip);};scale.tickFormat = function(){return format;};scale.copy = function(){return d3_time_scale(linear.copy(), methods, format);};return d3_scale_linearRebind(scale, linear);}function d3_time_scaleDate(t){return new Date(t);}var d3_time_scaleSteps=[1000, 5000, 15000, 30000, 60000, 300000, 900000, 1800000, 3600000, 10800000, 21600000, 43200000, 86400000, 172800000, 604800000, 2592000000, 7776000000, 31536000000];var d3_time_scaleLocalMethods=[[d3_time.second, 1], [d3_time.second, 5], [d3_time.second, 15], [d3_time.second, 30], [d3_time.minute, 1], [d3_time.minute, 5], [d3_time.minute, 15], [d3_time.minute, 30], [d3_time.hour, 1], [d3_time.hour, 3], [d3_time.hour, 6], [d3_time.hour, 12], [d3_time.day, 1], [d3_time.day, 2], [d3_time.week, 1], [d3_time.month, 1], [d3_time.month, 3], [d3_time.year, 1]];var d3_time_scaleLocalFormat=d3_time_format.multi([[".%L", function(d){return d.getMilliseconds();}], [":%S", function(d){return d.getSeconds();}], ["%I:%M", function(d){return d.getMinutes();}], ["%I %p", function(d){return d.getHours();}], ["%a %d", function(d){return d.getDay() && d.getDate() != 1;}], ["%b %d", function(d){return d.getDate() != 1;}], ["%B", function(d){return d.getMonth();}], ["%Y", d3_true]]);var d3_time_scaleMilliseconds={range:function range(start, stop, step){return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);}, floor:d3_identity, ceil:d3_identity};d3_time_scaleLocalMethods.year = d3_time.year;d3_time.scale = function(){return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);};var d3_time_scaleUtcMethods=d3_time_scaleLocalMethods.map(function(m){return [m[0].utc, m[1]];});var d3_time_scaleUtcFormat=d3_time_formatUtc.multi([[".%L", function(d){return d.getUTCMilliseconds();}], [":%S", function(d){return d.getUTCSeconds();}], ["%I:%M", function(d){return d.getUTCMinutes();}], ["%I %p", function(d){return d.getUTCHours();}], ["%a %d", function(d){return d.getUTCDay() && d.getUTCDate() != 1;}], ["%b %d", function(d){return d.getUTCDate() != 1;}], ["%B", function(d){return d.getUTCMonth();}], ["%Y", d3_true]]);d3_time_scaleUtcMethods.year = d3_time.year.utc;d3_time.scale.utc = function(){return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);};d3.text = d3_xhrType(function(request){return request.responseText;});d3.json = function(url, callback){return d3_xhr(url, "application/json", d3_json, callback);};function d3_json(request){return JSON.parse(request.responseText);}d3.html = function(url, callback){return d3_xhr(url, "text/html", d3_html, callback);};function d3_html(request){var range=d3_document.createRange();range.selectNode(d3_document.body);return range.createContextualFragment(request.responseText);}d3.xml = d3_xhrType(function(request){return request.responseXML;});if(true)!(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else if(typeof module === "object" && module.exports)module.exports = d3;this.d3 = d3;})();

/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;//     Underscore.js 1.7.0
	//     http://underscorejs.org
	//     (c) 2009-2014 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
	//     Underscore may be freely distributed under the MIT license.

	'use strict';

	(function () {

	  // Baseline setup
	  // --------------

	  // Establish the root object, `window` in the browser, or `exports` on the server.
	  var root = this;

	  // Save the previous value of the `_` variable.
	  var previousUnderscore = root._;

	  // Save bytes in the minified (but not gzipped) version:
	  var ArrayProto = Array.prototype,
	      ObjProto = Object.prototype,
	      FuncProto = Function.prototype;

	  // Create quick reference variables for speed access to core prototypes.
	  var push = ArrayProto.push,
	      slice = ArrayProto.slice,
	      concat = ArrayProto.concat,
	      toString = ObjProto.toString,
	      hasOwnProperty = ObjProto.hasOwnProperty;

	  // All **ECMAScript 5** native function implementations that we hope to use
	  // are declared here.
	  var nativeIsArray = Array.isArray,
	      nativeKeys = Object.keys,
	      nativeBind = FuncProto.bind;

	  // Create a safe reference to the Underscore object for use below.
	  var _ = function _(obj) {
	    if (obj instanceof _) return obj;
	    if (!(this instanceof _)) return new _(obj);
	    this._wrapped = obj;
	  };

	  // Export the Underscore object for **Node.js**, with
	  // backwards-compatibility for the old `require()` API. If we're in
	  // the browser, add `_` as a global object.
	  if (true) {
	    if (typeof module !== 'undefined' && module.exports) {
	      exports = module.exports = _;
	    }
	    exports._ = _;
	  } else {
	    root._ = _;
	  }

	  // Current version.
	  _.VERSION = '1.7.0';

	  // Internal function that returns an efficient (for current engines) version
	  // of the passed-in callback, to be repeatedly applied in other Underscore
	  // functions.
	  var createCallback = function createCallback(func, context, argCount) {
	    if (context === void 0) return func;
	    switch (argCount == null ? 3 : argCount) {
	      case 1:
	        return function (value) {
	          return func.call(context, value);
	        };
	      case 2:
	        return function (value, other) {
	          return func.call(context, value, other);
	        };
	      case 3:
	        return function (value, index, collection) {
	          return func.call(context, value, index, collection);
	        };
	      case 4:
	        return function (accumulator, value, index, collection) {
	          return func.call(context, accumulator, value, index, collection);
	        };
	    }
	    return function () {
	      return func.apply(context, arguments);
	    };
	  };

	  // A mostly-internal function to generate callbacks that can be applied
	  // to each element in a collection, returning the desired result — either
	  // identity, an arbitrary callback, a property matcher, or a property accessor.
	  _.iteratee = function (value, context, argCount) {
	    if (value == null) return _.identity;
	    if (_.isFunction(value)) return createCallback(value, context, argCount);
	    if (_.isObject(value)) return _.matches(value);
	    return _.property(value);
	  };

	  // Collection Functions
	  // --------------------

	  // The cornerstone, an `each` implementation, aka `forEach`.
	  // Handles raw objects in addition to array-likes. Treats all
	  // sparse array-likes as if they were dense.
	  _.each = _.forEach = function (obj, iteratee, context) {
	    if (obj == null) return obj;
	    iteratee = createCallback(iteratee, context);
	    var i,
	        length = obj.length;
	    if (length === +length) {
	      for (i = 0; i < length; i++) {
	        iteratee(obj[i], i, obj);
	      }
	    } else {
	      var keys = _.keys(obj);
	      for (i = 0, length = keys.length; i < length; i++) {
	        iteratee(obj[keys[i]], keys[i], obj);
	      }
	    }
	    return obj;
	  };

	  // Return the results of applying the iteratee to each element.
	  _.map = _.collect = function (obj, iteratee, context) {
	    if (obj == null) return [];
	    iteratee = _.iteratee(iteratee, context);
	    var keys = obj.length !== +obj.length && _.keys(obj),
	        length = (keys || obj).length,
	        results = Array(length),
	        currentKey;
	    for (var index = 0; index < length; index++) {
	      currentKey = keys ? keys[index] : index;
	      results[index] = iteratee(obj[currentKey], currentKey, obj);
	    }
	    return results;
	  };

	  var reduceError = 'Reduce of empty array with no initial value';

	  // **Reduce** builds up a single result from a list of values, aka `inject`,
	  // or `foldl`.
	  _.reduce = _.foldl = _.inject = function (obj, iteratee, memo, context) {
	    if (obj == null) obj = [];
	    iteratee = createCallback(iteratee, context, 4);
	    var keys = obj.length !== +obj.length && _.keys(obj),
	        length = (keys || obj).length,
	        index = 0,
	        currentKey;
	    if (arguments.length < 3) {
	      if (!length) throw new TypeError(reduceError);
	      memo = obj[keys ? keys[index++] : index++];
	    }
	    for (; index < length; index++) {
	      currentKey = keys ? keys[index] : index;
	      memo = iteratee(memo, obj[currentKey], currentKey, obj);
	    }
	    return memo;
	  };

	  // The right-associative version of reduce, also known as `foldr`.
	  _.reduceRight = _.foldr = function (obj, iteratee, memo, context) {
	    if (obj == null) obj = [];
	    iteratee = createCallback(iteratee, context, 4);
	    var keys = obj.length !== +obj.length && _.keys(obj),
	        index = (keys || obj).length,
	        currentKey;
	    if (arguments.length < 3) {
	      if (!index) throw new TypeError(reduceError);
	      memo = obj[keys ? keys[--index] : --index];
	    }
	    while (index--) {
	      currentKey = keys ? keys[index] : index;
	      memo = iteratee(memo, obj[currentKey], currentKey, obj);
	    }
	    return memo;
	  };

	  // Return the first value which passes a truth test. Aliased as `detect`.
	  _.find = _.detect = function (obj, predicate, context) {
	    var result;
	    predicate = _.iteratee(predicate, context);
	    _.some(obj, function (value, index, list) {
	      if (predicate(value, index, list)) {
	        result = value;
	        return true;
	      }
	    });
	    return result;
	  };

	  // Return all the elements that pass a truth test.
	  // Aliased as `select`.
	  _.filter = _.select = function (obj, predicate, context) {
	    var results = [];
	    if (obj == null) return results;
	    predicate = _.iteratee(predicate, context);
	    _.each(obj, function (value, index, list) {
	      if (predicate(value, index, list)) results.push(value);
	    });
	    return results;
	  };

	  // Return all the elements for which a truth test fails.
	  _.reject = function (obj, predicate, context) {
	    return _.filter(obj, _.negate(_.iteratee(predicate)), context);
	  };

	  // Determine whether all of the elements match a truth test.
	  // Aliased as `all`.
	  _.every = _.all = function (obj, predicate, context) {
	    if (obj == null) return true;
	    predicate = _.iteratee(predicate, context);
	    var keys = obj.length !== +obj.length && _.keys(obj),
	        length = (keys || obj).length,
	        index,
	        currentKey;
	    for (index = 0; index < length; index++) {
	      currentKey = keys ? keys[index] : index;
	      if (!predicate(obj[currentKey], currentKey, obj)) return false;
	    }
	    return true;
	  };

	  // Determine if at least one element in the object matches a truth test.
	  // Aliased as `any`.
	  _.some = _.any = function (obj, predicate, context) {
	    if (obj == null) return false;
	    predicate = _.iteratee(predicate, context);
	    var keys = obj.length !== +obj.length && _.keys(obj),
	        length = (keys || obj).length,
	        index,
	        currentKey;
	    for (index = 0; index < length; index++) {
	      currentKey = keys ? keys[index] : index;
	      if (predicate(obj[currentKey], currentKey, obj)) return true;
	    }
	    return false;
	  };

	  // Determine if the array or object contains a given value (using `===`).
	  // Aliased as `include`.
	  _.contains = _.include = function (obj, target) {
	    if (obj == null) return false;
	    if (obj.length !== +obj.length) obj = _.values(obj);
	    return _.indexOf(obj, target) >= 0;
	  };

	  // Invoke a method (with arguments) on every item in a collection.
	  _.invoke = function (obj, method) {
	    var args = slice.call(arguments, 2);
	    var isFunc = _.isFunction(method);
	    return _.map(obj, function (value) {
	      return (isFunc ? method : value[method]).apply(value, args);
	    });
	  };

	  // Convenience version of a common use case of `map`: fetching a property.
	  _.pluck = function (obj, key) {
	    return _.map(obj, _.property(key));
	  };

	  // Convenience version of a common use case of `filter`: selecting only objects
	  // containing specific `key:value` pairs.
	  _.where = function (obj, attrs) {
	    return _.filter(obj, _.matches(attrs));
	  };

	  // Convenience version of a common use case of `find`: getting the first object
	  // containing specific `key:value` pairs.
	  _.findWhere = function (obj, attrs) {
	    return _.find(obj, _.matches(attrs));
	  };

	  // Return the maximum element (or element-based computation).
	  _.max = function (obj, iteratee, context) {
	    var result = -Infinity,
	        lastComputed = -Infinity,
	        value,
	        computed;
	    if (iteratee == null && obj != null) {
	      obj = obj.length === +obj.length ? obj : _.values(obj);
	      for (var i = 0, length = obj.length; i < length; i++) {
	        value = obj[i];
	        if (value > result) {
	          result = value;
	        }
	      }
	    } else {
	      iteratee = _.iteratee(iteratee, context);
	      _.each(obj, function (value, index, list) {
	        computed = iteratee(value, index, list);
	        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {
	          result = value;
	          lastComputed = computed;
	        }
	      });
	    }
	    return result;
	  };

	  // Return the minimum element (or element-based computation).
	  _.min = function (obj, iteratee, context) {
	    var result = Infinity,
	        lastComputed = Infinity,
	        value,
	        computed;
	    if (iteratee == null && obj != null) {
	      obj = obj.length === +obj.length ? obj : _.values(obj);
	      for (var i = 0, length = obj.length; i < length; i++) {
	        value = obj[i];
	        if (value < result) {
	          result = value;
	        }
	      }
	    } else {
	      iteratee = _.iteratee(iteratee, context);
	      _.each(obj, function (value, index, list) {
	        computed = iteratee(value, index, list);
	        if (computed < lastComputed || computed === Infinity && result === Infinity) {
	          result = value;
	          lastComputed = computed;
	        }
	      });
	    }
	    return result;
	  };

	  // Shuffle a collection, using the modern version of the
	  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).
	  _.shuffle = function (obj) {
	    var set = obj && obj.length === +obj.length ? obj : _.values(obj);
	    var length = set.length;
	    var shuffled = Array(length);
	    for (var index = 0, rand; index < length; index++) {
	      rand = _.random(0, index);
	      if (rand !== index) shuffled[index] = shuffled[rand];
	      shuffled[rand] = set[index];
	    }
	    return shuffled;
	  };

	  // Sample **n** random values from a collection.
	  // If **n** is not specified, returns a single random element.
	  // The internal `guard` argument allows it to work with `map`.
	  _.sample = function (obj, n, guard) {
	    if (n == null || guard) {
	      if (obj.length !== +obj.length) obj = _.values(obj);
	      return obj[_.random(obj.length - 1)];
	    }
	    return _.shuffle(obj).slice(0, Math.max(0, n));
	  };

	  // Sort the object's values by a criterion produced by an iteratee.
	  _.sortBy = function (obj, iteratee, context) {
	    iteratee = _.iteratee(iteratee, context);
	    return _.pluck(_.map(obj, function (value, index, list) {
	      return {
	        value: value,
	        index: index,
	        criteria: iteratee(value, index, list)
	      };
	    }).sort(function (left, right) {
	      var a = left.criteria;
	      var b = right.criteria;
	      if (a !== b) {
	        if (a > b || a === void 0) return 1;
	        if (a < b || b === void 0) return -1;
	      }
	      return left.index - right.index;
	    }), 'value');
	  };

	  // An internal function used for aggregate "group by" operations.
	  var group = function group(behavior) {
	    return function (obj, iteratee, context) {
	      var result = {};
	      iteratee = _.iteratee(iteratee, context);
	      _.each(obj, function (value, index) {
	        var key = iteratee(value, index, obj);
	        behavior(result, value, key);
	      });
	      return result;
	    };
	  };

	  // Groups the object's values by a criterion. Pass either a string attribute
	  // to group by, or a function that returns the criterion.
	  _.groupBy = group(function (result, value, key) {
	    if (_.has(result, key)) result[key].push(value);else result[key] = [value];
	  });

	  // Indexes the object's values by a criterion, similar to `groupBy`, but for
	  // when you know that your index values will be unique.
	  _.indexBy = group(function (result, value, key) {
	    result[key] = value;
	  });

	  // Counts instances of an object that group by a certain criterion. Pass
	  // either a string attribute to count by, or a function that returns the
	  // criterion.
	  _.countBy = group(function (result, value, key) {
	    if (_.has(result, key)) result[key]++;else result[key] = 1;
	  });

	  // Use a comparator function to figure out the smallest index at which
	  // an object should be inserted so as to maintain order. Uses binary search.
	  _.sortedIndex = function (array, obj, iteratee, context) {
	    iteratee = _.iteratee(iteratee, context, 1);
	    var value = iteratee(obj);
	    var low = 0,
	        high = array.length;
	    while (low < high) {
	      var mid = low + high >>> 1;
	      if (iteratee(array[mid]) < value) low = mid + 1;else high = mid;
	    }
	    return low;
	  };

	  // Safely create a real, live array from anything iterable.
	  _.toArray = function (obj) {
	    if (!obj) return [];
	    if (_.isArray(obj)) return slice.call(obj);
	    if (obj.length === +obj.length) return _.map(obj, _.identity);
	    return _.values(obj);
	  };

	  // Return the number of elements in an object.
	  _.size = function (obj) {
	    if (obj == null) return 0;
	    return obj.length === +obj.length ? obj.length : _.keys(obj).length;
	  };

	  // Split a collection into two arrays: one whose elements all satisfy the given
	  // predicate, and one whose elements all do not satisfy the predicate.
	  _.partition = function (obj, predicate, context) {
	    predicate = _.iteratee(predicate, context);
	    var pass = [],
	        fail = [];
	    _.each(obj, function (value, key, obj) {
	      (predicate(value, key, obj) ? pass : fail).push(value);
	    });
	    return [pass, fail];
	  };

	  // Array Functions
	  // ---------------

	  // Get the first element of an array. Passing **n** will return the first N
	  // values in the array. Aliased as `head` and `take`. The **guard** check
	  // allows it to work with `_.map`.
	  _.first = _.head = _.take = function (array, n, guard) {
	    if (array == null) return void 0;
	    if (n == null || guard) return array[0];
	    if (n < 0) return [];
	    return slice.call(array, 0, n);
	  };

	  // Returns everything but the last entry of the array. Especially useful on
	  // the arguments object. Passing **n** will return all the values in
	  // the array, excluding the last N. The **guard** check allows it to work with
	  // `_.map`.
	  _.initial = function (array, n, guard) {
	    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));
	  };

	  // Get the last element of an array. Passing **n** will return the last N
	  // values in the array. The **guard** check allows it to work with `_.map`.
	  _.last = function (array, n, guard) {
	    if (array == null) return void 0;
	    if (n == null || guard) return array[array.length - 1];
	    return slice.call(array, Math.max(array.length - n, 0));
	  };

	  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.
	  // Especially useful on the arguments object. Passing an **n** will return
	  // the rest N values in the array. The **guard**
	  // check allows it to work with `_.map`.
	  _.rest = _.tail = _.drop = function (array, n, guard) {
	    return slice.call(array, n == null || guard ? 1 : n);
	  };

	  // Trim out all falsy values from an array.
	  _.compact = function (array) {
	    return _.filter(array, _.identity);
	  };

	  // Internal implementation of a recursive `flatten` function.
	  var flatten = function flatten(input, shallow, strict, output) {
	    if (shallow && _.every(input, _.isArray)) {
	      return concat.apply(output, input);
	    }
	    for (var i = 0, length = input.length; i < length; i++) {
	      var value = input[i];
	      if (!_.isArray(value) && !_.isArguments(value)) {
	        if (!strict) output.push(value);
	      } else if (shallow) {
	        push.apply(output, value);
	      } else {
	        flatten(value, shallow, strict, output);
	      }
	    }
	    return output;
	  };

	  // Flatten out an array, either recursively (by default), or just one level.
	  _.flatten = function (array, shallow) {
	    return flatten(array, shallow, false, []);
	  };

	  // Return a version of the array that does not contain the specified value(s).
	  _.without = function (array) {
	    return _.difference(array, slice.call(arguments, 1));
	  };

	  // Produce a duplicate-free version of the array. If the array has already
	  // been sorted, you have the option of using a faster algorithm.
	  // Aliased as `unique`.
	  _.uniq = _.unique = function (array, isSorted, iteratee, context) {
	    if (array == null) return [];
	    if (!_.isBoolean(isSorted)) {
	      context = iteratee;
	      iteratee = isSorted;
	      isSorted = false;
	    }
	    if (iteratee != null) iteratee = _.iteratee(iteratee, context);
	    var result = [];
	    var seen = [];
	    for (var i = 0, length = array.length; i < length; i++) {
	      var value = array[i];
	      if (isSorted) {
	        if (!i || seen !== value) result.push(value);
	        seen = value;
	      } else if (iteratee) {
	        var computed = iteratee(value, i, array);
	        if (_.indexOf(seen, computed) < 0) {
	          seen.push(computed);
	          result.push(value);
	        }
	      } else if (_.indexOf(result, value) < 0) {
	        result.push(value);
	      }
	    }
	    return result;
	  };

	  // Produce an array that contains the union: each distinct element from all of
	  // the passed-in arrays.
	  _.union = function () {
	    return _.uniq(flatten(arguments, true, true, []));
	  };

	  // Produce an array that contains every item shared between all the
	  // passed-in arrays.
	  _.intersection = function (array) {
	    if (array == null) return [];
	    var result = [];
	    var argsLength = arguments.length;
	    for (var i = 0, length = array.length; i < length; i++) {
	      var item = array[i];
	      if (_.contains(result, item)) continue;
	      for (var j = 1; j < argsLength; j++) {
	        if (!_.contains(arguments[j], item)) break;
	      }
	      if (j === argsLength) result.push(item);
	    }
	    return result;
	  };

	  // Take the difference between one array and a number of other arrays.
	  // Only the elements present in just the first array will remain.
	  _.difference = function (array) {
	    var rest = flatten(slice.call(arguments, 1), true, true, []);
	    return _.filter(array, function (value) {
	      return !_.contains(rest, value);
	    });
	  };

	  // Zip together multiple lists into a single array -- elements that share
	  // an index go together.
	  _.zip = function (array) {
	    if (array == null) return [];
	    var length = _.max(arguments, 'length').length;
	    var results = Array(length);
	    for (var i = 0; i < length; i++) {
	      results[i] = _.pluck(arguments, i);
	    }
	    return results;
	  };

	  // Converts lists into objects. Pass either a single array of `[key, value]`
	  // pairs, or two parallel arrays of the same length -- one of keys, and one of
	  // the corresponding values.
	  _.object = function (list, values) {
	    if (list == null) return {};
	    var result = {};
	    for (var i = 0, length = list.length; i < length; i++) {
	      if (values) {
	        result[list[i]] = values[i];
	      } else {
	        result[list[i][0]] = list[i][1];
	      }
	    }
	    return result;
	  };

	  // Return the position of the first occurrence of an item in an array,
	  // or -1 if the item is not included in the array.
	  // If the array is large and already in sort order, pass `true`
	  // for **isSorted** to use binary search.
	  _.indexOf = function (array, item, isSorted) {
	    if (array == null) return -1;
	    var i = 0,
	        length = array.length;
	    if (isSorted) {
	      if (typeof isSorted == 'number') {
	        i = isSorted < 0 ? Math.max(0, length + isSorted) : isSorted;
	      } else {
	        i = _.sortedIndex(array, item);
	        return array[i] === item ? i : -1;
	      }
	    }
	    for (; i < length; i++) if (array[i] === item) return i;
	    return -1;
	  };

	  _.lastIndexOf = function (array, item, from) {
	    if (array == null) return -1;
	    var idx = array.length;
	    if (typeof from == 'number') {
	      idx = from < 0 ? idx + from + 1 : Math.min(idx, from + 1);
	    }
	    while (--idx >= 0) if (array[idx] === item) return idx;
	    return -1;
	  };

	  // Generate an integer Array containing an arithmetic progression. A port of
	  // the native Python `range()` function. See
	  // [the Python documentation](http://docs.python.org/library/functions.html#range).
	  _.range = function (start, stop, step) {
	    if (arguments.length <= 1) {
	      stop = start || 0;
	      start = 0;
	    }
	    step = step || 1;

	    var length = Math.max(Math.ceil((stop - start) / step), 0);
	    var range = Array(length);

	    for (var idx = 0; idx < length; idx++, start += step) {
	      range[idx] = start;
	    }

	    return range;
	  };

	  // Function (ahem) Functions
	  // ------------------

	  // Reusable constructor function for prototype setting.
	  var Ctor = function Ctor() {};

	  // Create a function bound to a given object (assigning `this`, and arguments,
	  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if
	  // available.
	  _.bind = function (func, context) {
	    var args, bound;
	    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));
	    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');
	    args = slice.call(arguments, 2);
	    bound = function () {
	      if (!(this instanceof bound)) return func.apply(context, args.concat(slice.call(arguments)));
	      Ctor.prototype = func.prototype;
	      var self = new Ctor();
	      Ctor.prototype = null;
	      var result = func.apply(self, args.concat(slice.call(arguments)));
	      if (_.isObject(result)) return result;
	      return self;
	    };
	    return bound;
	  };

	  // Partially apply a function by creating a version that has had some of its
	  // arguments pre-filled, without changing its dynamic `this` context. _ acts
	  // as a placeholder, allowing any combination of arguments to be pre-filled.
	  _.partial = function (func) {
	    var boundArgs = slice.call(arguments, 1);
	    return function () {
	      var position = 0;
	      var args = boundArgs.slice();
	      for (var i = 0, length = args.length; i < length; i++) {
	        if (args[i] === _) args[i] = arguments[position++];
	      }
	      while (position < arguments.length) args.push(arguments[position++]);
	      return func.apply(this, args);
	    };
	  };

	  // Bind a number of an object's methods to that object. Remaining arguments
	  // are the method names to be bound. Useful for ensuring that all callbacks
	  // defined on an object belong to it.
	  _.bindAll = function (obj) {
	    var i,
	        length = arguments.length,
	        key;
	    if (length <= 1) throw new Error('bindAll must be passed function names');
	    for (i = 1; i < length; i++) {
	      key = arguments[i];
	      obj[key] = _.bind(obj[key], obj);
	    }
	    return obj;
	  };

	  // Memoize an expensive function by storing its results.
	  _.memoize = function (func, hasher) {
	    var memoize = function memoize(key) {
	      var cache = memoize.cache;
	      var address = hasher ? hasher.apply(this, arguments) : key;
	      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);
	      return cache[address];
	    };
	    memoize.cache = {};
	    return memoize;
	  };

	  // Delays a function for the given number of milliseconds, and then calls
	  // it with the arguments supplied.
	  _.delay = function (func, wait) {
	    var args = slice.call(arguments, 2);
	    return setTimeout(function () {
	      return func.apply(null, args);
	    }, wait);
	  };

	  // Defers a function, scheduling it to run after the current call stack has
	  // cleared.
	  _.defer = function (func) {
	    return _.delay.apply(_, [func, 1].concat(slice.call(arguments, 1)));
	  };

	  // Returns a function, that, when invoked, will only be triggered at most once
	  // during a given window of time. Normally, the throttled function will run
	  // as much as it can, without ever going more than once per `wait` duration;
	  // but if you'd like to disable the execution on the leading edge, pass
	  // `{leading: false}`. To disable execution on the trailing edge, ditto.
	  _.throttle = function (func, wait, options) {
	    var context, args, result;
	    var timeout = null;
	    var previous = 0;
	    if (!options) options = {};
	    var later = function later() {
	      previous = options.leading === false ? 0 : _.now();
	      timeout = null;
	      result = func.apply(context, args);
	      if (!timeout) context = args = null;
	    };
	    return function () {
	      var now = _.now();
	      if (!previous && options.leading === false) previous = now;
	      var remaining = wait - (now - previous);
	      context = this;
	      args = arguments;
	      if (remaining <= 0 || remaining > wait) {
	        clearTimeout(timeout);
	        timeout = null;
	        previous = now;
	        result = func.apply(context, args);
	        if (!timeout) context = args = null;
	      } else if (!timeout && options.trailing !== false) {
	        timeout = setTimeout(later, remaining);
	      }
	      return result;
	    };
	  };

	  // Returns a function, that, as long as it continues to be invoked, will not
	  // be triggered. The function will be called after it stops being called for
	  // N milliseconds. If `immediate` is passed, trigger the function on the
	  // leading edge, instead of the trailing.
	  _.debounce = function (func, wait, immediate) {
	    var timeout, args, context, timestamp, result;

	    var later = function later() {
	      var last = _.now() - timestamp;

	      if (last < wait && last > 0) {
	        timeout = setTimeout(later, wait - last);
	      } else {
	        timeout = null;
	        if (!immediate) {
	          result = func.apply(context, args);
	          if (!timeout) context = args = null;
	        }
	      }
	    };

	    return function () {
	      context = this;
	      args = arguments;
	      timestamp = _.now();
	      var callNow = immediate && !timeout;
	      if (!timeout) timeout = setTimeout(later, wait);
	      if (callNow) {
	        result = func.apply(context, args);
	        context = args = null;
	      }

	      return result;
	    };
	  };

	  // Returns the first function passed as an argument to the second,
	  // allowing you to adjust arguments, run code before and after, and
	  // conditionally execute the original function.
	  _.wrap = function (func, wrapper) {
	    return _.partial(wrapper, func);
	  };

	  // Returns a negated version of the passed-in predicate.
	  _.negate = function (predicate) {
	    return function () {
	      return !predicate.apply(this, arguments);
	    };
	  };

	  // Returns a function that is the composition of a list of functions, each
	  // consuming the return value of the function that follows.
	  _.compose = function () {
	    var args = arguments;
	    var start = args.length - 1;
	    return function () {
	      var i = start;
	      var result = args[start].apply(this, arguments);
	      while (i--) result = args[i].call(this, result);
	      return result;
	    };
	  };

	  // Returns a function that will only be executed after being called N times.
	  _.after = function (times, func) {
	    return function () {
	      if (--times < 1) {
	        return func.apply(this, arguments);
	      }
	    };
	  };

	  // Returns a function that will only be executed before being called N times.
	  _.before = function (times, func) {
	    var memo;
	    return function () {
	      if (--times > 0) {
	        memo = func.apply(this, arguments);
	      } else {
	        func = null;
	      }
	      return memo;
	    };
	  };

	  // Returns a function that will be executed at most one time, no matter how
	  // often you call it. Useful for lazy initialization.
	  _.once = _.partial(_.before, 2);

	  // Object Functions
	  // ----------------

	  // Retrieve the names of an object's properties.
	  // Delegates to **ECMAScript 5**'s native `Object.keys`
	  _.keys = function (obj) {
	    if (!_.isObject(obj)) return [];
	    if (nativeKeys) return nativeKeys(obj);
	    var keys = [];
	    for (var key in obj) if (_.has(obj, key)) keys.push(key);
	    return keys;
	  };

	  // Retrieve the values of an object's properties.
	  _.values = function (obj) {
	    var keys = _.keys(obj);
	    var length = keys.length;
	    var values = Array(length);
	    for (var i = 0; i < length; i++) {
	      values[i] = obj[keys[i]];
	    }
	    return values;
	  };

	  // Convert an object into a list of `[key, value]` pairs.
	  _.pairs = function (obj) {
	    var keys = _.keys(obj);
	    var length = keys.length;
	    var pairs = Array(length);
	    for (var i = 0; i < length; i++) {
	      pairs[i] = [keys[i], obj[keys[i]]];
	    }
	    return pairs;
	  };

	  // Invert the keys and values of an object. The values must be serializable.
	  _.invert = function (obj) {
	    var result = {};
	    var keys = _.keys(obj);
	    for (var i = 0, length = keys.length; i < length; i++) {
	      result[obj[keys[i]]] = keys[i];
	    }
	    return result;
	  };

	  // Return a sorted list of the function names available on the object.
	  // Aliased as `methods`
	  _.functions = _.methods = function (obj) {
	    var names = [];
	    for (var key in obj) {
	      if (_.isFunction(obj[key])) names.push(key);
	    }
	    return names.sort();
	  };

	  // Extend a given object with all the properties in passed-in object(s).
	  _.extend = function (obj) {
	    if (!_.isObject(obj)) return obj;
	    var source, prop;
	    for (var i = 1, length = arguments.length; i < length; i++) {
	      source = arguments[i];
	      for (prop in source) {
	        if (hasOwnProperty.call(source, prop)) {
	          obj[prop] = source[prop];
	        }
	      }
	    }
	    return obj;
	  };

	  // Return a copy of the object only containing the whitelisted properties.
	  _.pick = function (obj, iteratee, context) {
	    var result = {},
	        key;
	    if (obj == null) return result;
	    if (_.isFunction(iteratee)) {
	      iteratee = createCallback(iteratee, context);
	      for (key in obj) {
	        var value = obj[key];
	        if (iteratee(value, key, obj)) result[key] = value;
	      }
	    } else {
	      var keys = concat.apply([], slice.call(arguments, 1));
	      obj = new Object(obj);
	      for (var i = 0, length = keys.length; i < length; i++) {
	        key = keys[i];
	        if (key in obj) result[key] = obj[key];
	      }
	    }
	    return result;
	  };

	  // Return a copy of the object without the blacklisted properties.
	  _.omit = function (obj, iteratee, context) {
	    if (_.isFunction(iteratee)) {
	      iteratee = _.negate(iteratee);
	    } else {
	      var keys = _.map(concat.apply([], slice.call(arguments, 1)), String);
	      iteratee = function (value, key) {
	        return !_.contains(keys, key);
	      };
	    }
	    return _.pick(obj, iteratee, context);
	  };

	  // Fill in a given object with default properties.
	  _.defaults = function (obj) {
	    if (!_.isObject(obj)) return obj;
	    for (var i = 1, length = arguments.length; i < length; i++) {
	      var source = arguments[i];
	      for (var prop in source) {
	        if (obj[prop] === void 0) obj[prop] = source[prop];
	      }
	    }
	    return obj;
	  };

	  // Create a (shallow-cloned) duplicate of an object.
	  _.clone = function (obj) {
	    if (!_.isObject(obj)) return obj;
	    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);
	  };

	  // Invokes interceptor with the obj, and then returns obj.
	  // The primary purpose of this method is to "tap into" a method chain, in
	  // order to perform operations on intermediate results within the chain.
	  _.tap = function (obj, interceptor) {
	    interceptor(obj);
	    return obj;
	  };

	  // Internal recursive comparison function for `isEqual`.
	  var eq = function eq(a, b, aStack, bStack) {
	    // Identical objects are equal. `0 === -0`, but they aren't identical.
	    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).
	    if (a === b) return a !== 0 || 1 / a === 1 / b;
	    // A strict comparison is necessary because `null == undefined`.
	    if (a == null || b == null) return a === b;
	    // Unwrap any wrapped objects.
	    if (a instanceof _) a = a._wrapped;
	    if (b instanceof _) b = b._wrapped;
	    // Compare `[[Class]]` names.
	    var className = toString.call(a);
	    if (className !== toString.call(b)) return false;
	    switch (className) {
	      // Strings, numbers, regular expressions, dates, and booleans are compared by value.
	      case '[object RegExp]':
	      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')
	      case '[object String]':
	        // Primitives and their corresponding object wrappers are equivalent; thus, `"5"` is
	        // equivalent to `new String("5")`.
	        return '' + a === '' + b;
	      case '[object Number]':
	        // `NaN`s are equivalent, but non-reflexive.
	        // Object(NaN) is equivalent to NaN
	        if (+a !== +a) return +b !== +b;
	        // An `egal` comparison is performed for other numeric values.
	        return +a === 0 ? 1 / +a === 1 / b : +a === +b;
	      case '[object Date]':
	      case '[object Boolean]':
	        // Coerce dates and booleans to numeric primitive values. Dates are compared by their
	        // millisecond representations. Note that invalid dates with millisecond representations
	        // of `NaN` are not equivalent.
	        return +a === +b;
	    }
	    if (typeof a != 'object' || typeof b != 'object') return false;
	    // Assume equality for cyclic structures. The algorithm for detecting cyclic
	    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.
	    var length = aStack.length;
	    while (length--) {
	      // Linear search. Performance is inversely proportional to the number of
	      // unique nested structures.
	      if (aStack[length] === a) return bStack[length] === b;
	    }
	    // Objects with different constructors are not equivalent, but `Object`s
	    // from different frames are.
	    var aCtor = a.constructor,
	        bCtor = b.constructor;
	    if (aCtor !== bCtor &&
	    // Handle Object.create(x) cases
	    'constructor' in a && 'constructor' in b && !(_.isFunction(aCtor) && aCtor instanceof aCtor && _.isFunction(bCtor) && bCtor instanceof bCtor)) {
	      return false;
	    }
	    // Add the first object to the stack of traversed objects.
	    aStack.push(a);
	    bStack.push(b);
	    var size, result;
	    // Recursively compare objects and arrays.
	    if (className === '[object Array]') {
	      // Compare array lengths to determine if a deep comparison is necessary.
	      size = a.length;
	      result = size === b.length;
	      if (result) {
	        // Deep compare the contents, ignoring non-numeric properties.
	        while (size--) {
	          if (!(result = eq(a[size], b[size], aStack, bStack))) break;
	        }
	      }
	    } else {
	      // Deep compare objects.
	      var keys = _.keys(a),
	          key;
	      size = keys.length;
	      // Ensure that both objects contain the same number of properties before comparing deep equality.
	      result = _.keys(b).length === size;
	      if (result) {
	        while (size--) {
	          // Deep compare each member
	          key = keys[size];
	          if (!(result = _.has(b, key) && eq(a[key], b[key], aStack, bStack))) break;
	        }
	      }
	    }
	    // Remove the first object from the stack of traversed objects.
	    aStack.pop();
	    bStack.pop();
	    return result;
	  };

	  // Perform a deep comparison to check if two objects are equal.
	  _.isEqual = function (a, b) {
	    return eq(a, b, [], []);
	  };

	  // Is a given array, string, or object empty?
	  // An "empty" object has no enumerable own-properties.
	  _.isEmpty = function (obj) {
	    if (obj == null) return true;
	    if (_.isArray(obj) || _.isString(obj) || _.isArguments(obj)) return obj.length === 0;
	    for (var key in obj) if (_.has(obj, key)) return false;
	    return true;
	  };

	  // Is a given value a DOM element?
	  _.isElement = function (obj) {
	    return !!(obj && obj.nodeType === 1);
	  };

	  // Is a given value an array?
	  // Delegates to ECMA5's native Array.isArray
	  _.isArray = nativeIsArray || function (obj) {
	    return toString.call(obj) === '[object Array]';
	  };

	  // Is a given variable an object?
	  _.isObject = function (obj) {
	    var type = typeof obj;
	    return type === 'function' || type === 'object' && !!obj;
	  };

	  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp.
	  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp'], function (name) {
	    _['is' + name] = function (obj) {
	      return toString.call(obj) === '[object ' + name + ']';
	    };
	  });

	  // Define a fallback version of the method in browsers (ahem, IE), where
	  // there isn't any inspectable "Arguments" type.
	  if (!_.isArguments(arguments)) {
	    _.isArguments = function (obj) {
	      return _.has(obj, 'callee');
	    };
	  }

	  // Optimize `isFunction` if appropriate. Work around an IE 11 bug.
	  if (true) {
	    _.isFunction = function (obj) {
	      return typeof obj == 'function' || false;
	    };
	  }

	  // Is a given object a finite number?
	  _.isFinite = function (obj) {
	    return isFinite(obj) && !isNaN(parseFloat(obj));
	  };

	  // Is the given value `NaN`? (NaN is the only number which does not equal itself).
	  _.isNaN = function (obj) {
	    return _.isNumber(obj) && obj !== +obj;
	  };

	  // Is a given value a boolean?
	  _.isBoolean = function (obj) {
	    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';
	  };

	  // Is a given value equal to null?
	  _.isNull = function (obj) {
	    return obj === null;
	  };

	  // Is a given variable undefined?
	  _.isUndefined = function (obj) {
	    return obj === void 0;
	  };

	  // Shortcut function for checking if an object has a given property directly
	  // on itself (in other words, not on a prototype).
	  _.has = function (obj, key) {
	    return obj != null && hasOwnProperty.call(obj, key);
	  };

	  // Utility Functions
	  // -----------------

	  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its
	  // previous owner. Returns a reference to the Underscore object.
	  _.noConflict = function () {
	    root._ = previousUnderscore;
	    return this;
	  };

	  // Keep the identity function around for default iteratees.
	  _.identity = function (value) {
	    return value;
	  };

	  _.constant = function (value) {
	    return function () {
	      return value;
	    };
	  };

	  _.noop = function () {};

	  _.property = function (key) {
	    return function (obj) {
	      return obj[key];
	    };
	  };

	  // Returns a predicate for checking whether an object has a given set of `key:value` pairs.
	  _.matches = function (attrs) {
	    var pairs = _.pairs(attrs),
	        length = pairs.length;
	    return function (obj) {
	      if (obj == null) return !length;
	      obj = new Object(obj);
	      for (var i = 0; i < length; i++) {
	        var pair = pairs[i],
	            key = pair[0];
	        if (pair[1] !== obj[key] || !(key in obj)) return false;
	      }
	      return true;
	    };
	  };

	  // Run a function **n** times.
	  _.times = function (n, iteratee, context) {
	    var accum = Array(Math.max(0, n));
	    iteratee = createCallback(iteratee, context, 1);
	    for (var i = 0; i < n; i++) accum[i] = iteratee(i);
	    return accum;
	  };

	  // Return a random integer between min and max (inclusive).
	  _.random = function (min, max) {
	    if (max == null) {
	      max = min;
	      min = 0;
	    }
	    return min + Math.floor(Math.random() * (max - min + 1));
	  };

	  // A (possibly faster) way to get the current timestamp as an integer.
	  _.now = Date.now || function () {
	    return new Date().getTime();
	  };

	  // List of HTML entities for escaping.
	  var escapeMap = {
	    '&': '&amp;',
	    '<': '&lt;',
	    '>': '&gt;',
	    '"': '&quot;',
	    '\'': '&#x27;',
	    '`': '&#x60;'
	  };
	  var unescapeMap = _.invert(escapeMap);

	  // Functions for escaping and unescaping strings to/from HTML interpolation.
	  var createEscaper = function createEscaper(map) {
	    var escaper = function escaper(match) {
	      return map[match];
	    };
	    // Regexes for identifying a key that needs to be escaped
	    var source = '(?:' + _.keys(map).join('|') + ')';
	    var testRegexp = RegExp(source);
	    var replaceRegexp = RegExp(source, 'g');
	    return function (string) {
	      string = string == null ? '' : '' + string;
	      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;
	    };
	  };
	  _.escape = createEscaper(escapeMap);
	  _.unescape = createEscaper(unescapeMap);

	  // If the value of the named `property` is a function then invoke it with the
	  // `object` as context; otherwise, return it.
	  _.result = function (object, property) {
	    if (object == null) return void 0;
	    var value = object[property];
	    return _.isFunction(value) ? object[property]() : value;
	  };

	  // Generate a unique integer id (unique within the entire client session).
	  // Useful for temporary DOM ids.
	  var idCounter = 0;
	  _.uniqueId = function (prefix) {
	    var id = ++idCounter + '';
	    return prefix ? prefix + id : id;
	  };

	  // By default, Underscore uses ERB-style template delimiters, change the
	  // following template settings to use alternative delimiters.
	  _.templateSettings = {
	    evaluate: /<%([\s\S]+?)%>/g,
	    interpolate: /<%=([\s\S]+?)%>/g,
	    escape: /<%-([\s\S]+?)%>/g
	  };

	  // When customizing `templateSettings`, if you don't want to define an
	  // interpolation, evaluation or escaping regex, we need one that is
	  // guaranteed not to match.
	  var noMatch = /(.)^/;

	  // Certain characters need to be escaped so that they can be put into a
	  // string literal.
	  var escapes = {
	    '\'': '\'',
	    '\\': '\\',
	    '\r': 'r',
	    '\n': 'n',
	    '\u2028': 'u2028',
	    '\u2029': 'u2029'
	  };

	  var escaper = /\\|'|\r|\n|\u2028|\u2029/g;

	  var escapeChar = function escapeChar(match) {
	    return '\\' + escapes[match];
	  };

	  // JavaScript micro-templating, similar to John Resig's implementation.
	  // Underscore templating handles arbitrary delimiters, preserves whitespace,
	  // and correctly escapes quotes within interpolated code.
	  // NB: `oldSettings` only exists for backwards compatibility.
	  _.template = function (text, settings, oldSettings) {
	    if (!settings && oldSettings) settings = oldSettings;
	    settings = _.defaults({}, settings, _.templateSettings);

	    // Combine delimiters into one regular expression via alternation.
	    var matcher = RegExp([(settings.escape || noMatch).source, (settings.interpolate || noMatch).source, (settings.evaluate || noMatch).source].join('|') + '|$', 'g');

	    // Compile the template source, escaping string literals appropriately.
	    var index = 0;
	    var source = '__p+=\'';
	    text.replace(matcher, function (match, escape, interpolate, evaluate, offset) {
	      source += text.slice(index, offset).replace(escaper, escapeChar);
	      index = offset + match.length;

	      if (escape) {
	        source += '\'+\n((__t=(' + escape + '))==null?\'\':_.escape(__t))+\n\'';
	      } else if (interpolate) {
	        source += '\'+\n((__t=(' + interpolate + '))==null?\'\':__t)+\n\'';
	      } else if (evaluate) {
	        source += '\';\n' + evaluate + '\n__p+=\'';
	      }

	      // Adobe VMs need the match returned to produce the correct offest.
	      return match;
	    });
	    source += '\';\n';

	    // If a variable is not specified, place data values in local scope.
	    if (!settings.variable) source = 'with(obj||{}){\n' + source + '}\n';

	    source = 'var __t,__p=\'\',__j=Array.prototype.join,' + 'print=function(){__p+=__j.call(arguments,\'\');};\n' + source + 'return __p;\n';

	    try {
	      var render = new Function(settings.variable || 'obj', '_', source);
	    } catch (e) {
	      e.source = source;
	      throw e;
	    }

	    var template = function template(data) {
	      return render.call(this, data, _);
	    };

	    // Provide the compiled source as a convenience for precompilation.
	    var argument = settings.variable || 'obj';
	    template.source = 'function(' + argument + '){\n' + source + '}';

	    return template;
	  };

	  // Add a "chain" function. Start chaining a wrapped Underscore object.
	  _.chain = function (obj) {
	    var instance = _(obj);
	    instance._chain = true;
	    return instance;
	  };

	  // OOP
	  // ---------------
	  // If Underscore is called as a function, it returns a wrapped object that
	  // can be used OO-style. This wrapper holds altered versions of all the
	  // underscore functions. Wrapped objects may be chained.

	  // Helper function to continue chaining intermediate results.
	  var result = function result(obj) {
	    return this._chain ? _(obj).chain() : obj;
	  };

	  // Add your own custom functions to the Underscore object.
	  _.mixin = function (obj) {
	    _.each(_.functions(obj), function (name) {
	      var func = _[name] = obj[name];
	      _.prototype[name] = function () {
	        var args = [this._wrapped];
	        push.apply(args, arguments);
	        return result.call(this, func.apply(_, args));
	      };
	    });
	  };

	  // Add all of the Underscore functions to the wrapper object.
	  _.mixin(_);

	  // Add all mutator Array functions to the wrapper.
	  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function (name) {
	    var method = ArrayProto[name];
	    _.prototype[name] = function () {
	      var obj = this._wrapped;
	      method.apply(obj, arguments);
	      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];
	      return result.call(this, obj);
	    };
	  });

	  // Add all accessor Array functions to the wrapper.
	  _.each(['concat', 'join', 'slice'], function (name) {
	    var method = ArrayProto[name];
	    _.prototype[name] = function () {
	      return result.call(this, method.apply(this._wrapped, arguments));
	    };
	  });

	  // Extracts the result from a wrapped and chained object.
	  _.prototype.value = function () {
	    return this._wrapped;
	  };

	  // AMD registration happens at the end for compatibility with AMD loaders
	  // that may not enforce next-turn semantics on modules. Even though general
	  // practice for AMD registration is to be anonymous, underscore registers
	  // as a named module because, like jQuery, it is a base library that is
	  // popular enough to be bundled in a third party lib, but not be part of
	  // an AMD load request. Those cases could generate an error when an
	  // anonymous define() is called outside of a loader request.
	  if (true) {
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
	      return _;
	    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  }
	}).call(undefined);

/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(global, module) {//! moment.js
	//! version : 2.9.0
	//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
	//! license : MIT
	//! momentjs.com

	'use strict';

	(function (undefined) {
	    /************************************
	        Constants
	    ************************************/

	    var moment,
	        VERSION = '2.9.0',

	    // the global-scope this is NOT the global object in Node.js
	    globalScope = typeof global !== 'undefined' && (typeof window === 'undefined' || window === global.window) ? global : this,
	        oldGlobalMoment,
	        round = Math.round,
	        hasOwnProperty = Object.prototype.hasOwnProperty,
	        i,
	        YEAR = 0,
	        MONTH = 1,
	        DATE = 2,
	        HOUR = 3,
	        MINUTE = 4,
	        SECOND = 5,
	        MILLISECOND = 6,

	    // internal storage for locale config files
	    locales = {},

	    // extra moment internal properties (plugins register props here)
	    momentProperties = [],

	    // check for nodeJS
	    hasModule = typeof module !== 'undefined' && module && module.exports,

	    // ASP.NET json date format regex
	    aspNetJsonRegex = /^\/?Date\((\-?\d+)/i,
	        aspNetTimeSpanJsonRegex = /(\-)?(?:(\d*)\.)?(\d+)\:(\d+)(?:\:(\d+)\.?(\d{3})?)?/,

	    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
	    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
	    isoDurationRegex = /^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/,

	    // format tokens
	    formattingTokens = /(\[[^\[]*\])|(\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,4}|x|X|zz?|ZZ?|.)/g,
	        localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,

	    // parsing token regexes
	    parseTokenOneOrTwoDigits = /\d\d?/,
	        // 0 - 99
	    parseTokenOneToThreeDigits = /\d{1,3}/,
	        // 0 - 999
	    parseTokenOneToFourDigits = /\d{1,4}/,
	        // 0 - 9999
	    parseTokenOneToSixDigits = /[+\-]?\d{1,6}/,
	        // -999,999 - 999,999
	    parseTokenDigits = /\d+/,
	        // nonzero number of digits
	    parseTokenWord = /[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i,
	        // any word (or two) characters or numbers including two/three word month in arabic.
	    parseTokenTimezone = /Z|[\+\-]\d\d:?\d\d/gi,
	        // +00:00 -00:00 +0000 -0000 or Z
	    parseTokenT = /T/i,
	        // T (ISO separator)
	    parseTokenOffsetMs = /[\+\-]?\d+/,
	        // 1234567890123
	    parseTokenTimestampMs = /[\+\-]?\d+(\.\d{1,3})?/,
	        // 123456789 123456789.123

	    //strict parsing regexes
	    parseTokenOneDigit = /\d/,
	        // 0 - 9
	    parseTokenTwoDigits = /\d\d/,
	        // 00 - 99
	    parseTokenThreeDigits = /\d{3}/,
	        // 000 - 999
	    parseTokenFourDigits = /\d{4}/,
	        // 0000 - 9999
	    parseTokenSixDigits = /[+-]?\d{6}/,
	        // -999,999 - 999,999
	    parseTokenSignedNumber = /[+-]?\d+/,
	        // -inf - inf

	    // iso 8601 regex
	    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
	    isoRegex = /^\s*(?:[+-]\d{6}|\d{4})-(?:(\d\d-\d\d)|(W\d\d$)|(W\d\d-\d)|(\d\d\d))((T| )(\d\d(:\d\d(:\d\d(\.\d+)?)?)?)?([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
	        isoFormat = 'YYYY-MM-DDTHH:mm:ssZ',
	        isoDates = [['YYYYYY-MM-DD', /[+-]\d{6}-\d{2}-\d{2}/], ['YYYY-MM-DD', /\d{4}-\d{2}-\d{2}/], ['GGGG-[W]WW-E', /\d{4}-W\d{2}-\d/], ['GGGG-[W]WW', /\d{4}-W\d{2}/], ['YYYY-DDD', /\d{4}-\d{3}/]],

	    // iso time formats and regexes
	    isoTimes = [['HH:mm:ss.SSSS', /(T| )\d\d:\d\d:\d\d\.\d+/], ['HH:mm:ss', /(T| )\d\d:\d\d:\d\d/], ['HH:mm', /(T| )\d\d:\d\d/], ['HH', /(T| )\d\d/]],

	    // timezone chunker '+10:00' > ['10', '00'] or '-1530' > ['-', '15', '30']
	    parseTimezoneChunker = /([\+\-]|\d\d)/gi,

	    // getter and setter names
	    proxyGettersAndSetters = 'Date|Hours|Minutes|Seconds|Milliseconds'.split('|'),
	        unitMillisecondFactors = {
	        'Milliseconds': 1,
	        'Seconds': 1000,
	        'Minutes': 60000,
	        'Hours': 3600000,
	        'Days': 86400000,
	        'Months': 2592000000,
	        'Years': 31536000000
	    },
	        unitAliases = {
	        ms: 'millisecond',
	        s: 'second',
	        m: 'minute',
	        h: 'hour',
	        d: 'day',
	        D: 'date',
	        w: 'week',
	        W: 'isoWeek',
	        M: 'month',
	        Q: 'quarter',
	        y: 'year',
	        DDD: 'dayOfYear',
	        e: 'weekday',
	        E: 'isoWeekday',
	        gg: 'weekYear',
	        GG: 'isoWeekYear'
	    },
	        camelFunctions = {
	        dayofyear: 'dayOfYear',
	        isoweekday: 'isoWeekday',
	        isoweek: 'isoWeek',
	        weekyear: 'weekYear',
	        isoweekyear: 'isoWeekYear'
	    },

	    // format function strings
	    formatFunctions = {},

	    // default relative time thresholds
	    relativeTimeThresholds = {
	        s: 45, // seconds to minute
	        m: 45, // minutes to hour
	        h: 22, // hours to day
	        d: 26, // days to month
	        M: 11 // months to year
	    },

	    // tokens to ordinalize and pad
	    ordinalizeTokens = 'DDD w W M D d'.split(' '),
	        paddedTokens = 'M D H h m s w W'.split(' '),
	        formatTokenFunctions = {
	        M: function M() {
	            return this.month() + 1;
	        },
	        MMM: function MMM(format) {
	            return this.localeData().monthsShort(this, format);
	        },
	        MMMM: function MMMM(format) {
	            return this.localeData().months(this, format);
	        },
	        D: function D() {
	            return this.date();
	        },
	        DDD: function DDD() {
	            return this.dayOfYear();
	        },
	        d: function d() {
	            return this.day();
	        },
	        dd: function dd(format) {
	            return this.localeData().weekdaysMin(this, format);
	        },
	        ddd: function ddd(format) {
	            return this.localeData().weekdaysShort(this, format);
	        },
	        dddd: function dddd(format) {
	            return this.localeData().weekdays(this, format);
	        },
	        w: function w() {
	            return this.week();
	        },
	        W: function W() {
	            return this.isoWeek();
	        },
	        YY: function YY() {
	            return leftZeroFill(this.year() % 100, 2);
	        },
	        YYYY: function YYYY() {
	            return leftZeroFill(this.year(), 4);
	        },
	        YYYYY: function YYYYY() {
	            return leftZeroFill(this.year(), 5);
	        },
	        YYYYYY: function YYYYYY() {
	            var y = this.year(),
	                sign = y >= 0 ? '+' : '-';
	            return sign + leftZeroFill(Math.abs(y), 6);
	        },
	        gg: function gg() {
	            return leftZeroFill(this.weekYear() % 100, 2);
	        },
	        gggg: function gggg() {
	            return leftZeroFill(this.weekYear(), 4);
	        },
	        ggggg: function ggggg() {
	            return leftZeroFill(this.weekYear(), 5);
	        },
	        GG: function GG() {
	            return leftZeroFill(this.isoWeekYear() % 100, 2);
	        },
	        GGGG: function GGGG() {
	            return leftZeroFill(this.isoWeekYear(), 4);
	        },
	        GGGGG: function GGGGG() {
	            return leftZeroFill(this.isoWeekYear(), 5);
	        },
	        e: function e() {
	            return this.weekday();
	        },
	        E: function E() {
	            return this.isoWeekday();
	        },
	        a: function a() {
	            return this.localeData().meridiem(this.hours(), this.minutes(), true);
	        },
	        A: function A() {
	            return this.localeData().meridiem(this.hours(), this.minutes(), false);
	        },
	        H: function H() {
	            return this.hours();
	        },
	        h: function h() {
	            return this.hours() % 12 || 12;
	        },
	        m: function m() {
	            return this.minutes();
	        },
	        s: function s() {
	            return this.seconds();
	        },
	        S: function S() {
	            return toInt(this.milliseconds() / 100);
	        },
	        SS: function SS() {
	            return leftZeroFill(toInt(this.milliseconds() / 10), 2);
	        },
	        SSS: function SSS() {
	            return leftZeroFill(this.milliseconds(), 3);
	        },
	        SSSS: function SSSS() {
	            return leftZeroFill(this.milliseconds(), 3);
	        },
	        Z: function Z() {
	            var a = this.utcOffset(),
	                b = '+';
	            if (a < 0) {
	                a = -a;
	                b = '-';
	            }
	            return b + leftZeroFill(toInt(a / 60), 2) + ':' + leftZeroFill(toInt(a) % 60, 2);
	        },
	        ZZ: function ZZ() {
	            var a = this.utcOffset(),
	                b = '+';
	            if (a < 0) {
	                a = -a;
	                b = '-';
	            }
	            return b + leftZeroFill(toInt(a / 60), 2) + leftZeroFill(toInt(a) % 60, 2);
	        },
	        z: function z() {
	            return this.zoneAbbr();
	        },
	        zz: function zz() {
	            return this.zoneName();
	        },
	        x: function x() {
	            return this.valueOf();
	        },
	        X: function X() {
	            return this.unix();
	        },
	        Q: function Q() {
	            return this.quarter();
	        }
	    },
	        deprecations = {},
	        lists = ['months', 'monthsShort', 'weekdays', 'weekdaysShort', 'weekdaysMin'],
	        updateInProgress = false;

	    // Pick the first defined of two or three arguments. dfl comes from
	    // default.
	    function dfl(a, b, c) {
	        switch (arguments.length) {
	            case 2:
	                return a != null ? a : b;
	            case 3:
	                return a != null ? a : b != null ? b : c;
	            default:
	                throw new Error('Implement me');
	        }
	    }

	    function hasOwnProp(a, b) {
	        return hasOwnProperty.call(a, b);
	    }

	    function defaultParsingFlags() {
	        // We need to deep clone this object, and es5 standard is not very
	        // helpful.
	        return {
	            empty: false,
	            unusedTokens: [],
	            unusedInput: [],
	            overflow: -2,
	            charsLeftOver: 0,
	            nullInput: false,
	            invalidMonth: null,
	            invalidFormat: false,
	            userInvalidated: false,
	            iso: false
	        };
	    }

	    function printMsg(msg) {
	        if (moment.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {
	            console.warn('Deprecation warning: ' + msg);
	        }
	    }

	    function deprecate(msg, fn) {
	        var firstTime = true;
	        return extend(function () {
	            if (firstTime) {
	                printMsg(msg);
	                firstTime = false;
	            }
	            return fn.apply(this, arguments);
	        }, fn);
	    }

	    function deprecateSimple(name, msg) {
	        if (!deprecations[name]) {
	            printMsg(msg);
	            deprecations[name] = true;
	        }
	    }

	    function padToken(func, count) {
	        return function (a) {
	            return leftZeroFill(func.call(this, a), count);
	        };
	    }
	    function ordinalizeToken(func, period) {
	        return function (a) {
	            return this.localeData().ordinal(func.call(this, a), period);
	        };
	    }

	    function monthDiff(a, b) {
	        // difference in months
	        var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),

	        // b is in (anchor - 1 month, anchor + 1 month)
	        anchor = a.clone().add(wholeMonthDiff, 'months'),
	            anchor2,
	            adjust;

	        if (b - anchor < 0) {
	            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
	            // linear across the month
	            adjust = (b - anchor) / (anchor - anchor2);
	        } else {
	            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
	            // linear across the month
	            adjust = (b - anchor) / (anchor2 - anchor);
	        }

	        return -(wholeMonthDiff + adjust);
	    }

	    while (ordinalizeTokens.length) {
	        i = ordinalizeTokens.pop();
	        formatTokenFunctions[i + 'o'] = ordinalizeToken(formatTokenFunctions[i], i);
	    }
	    while (paddedTokens.length) {
	        i = paddedTokens.pop();
	        formatTokenFunctions[i + i] = padToken(formatTokenFunctions[i], 2);
	    }
	    formatTokenFunctions.DDDD = padToken(formatTokenFunctions.DDD, 3);

	    function meridiemFixWrap(locale, hour, meridiem) {
	        var isPm;

	        if (meridiem == null) {
	            // nothing to do
	            return hour;
	        }
	        if (locale.meridiemHour != null) {
	            return locale.meridiemHour(hour, meridiem);
	        } else if (locale.isPM != null) {
	            // Fallback
	            isPm = locale.isPM(meridiem);
	            if (isPm && hour < 12) {
	                hour += 12;
	            }
	            if (!isPm && hour === 12) {
	                hour = 0;
	            }
	            return hour;
	        } else {
	            // thie is not supposed to happen
	            return hour;
	        }
	    }

	    /************************************
	        Constructors
	    ************************************/

	    function Locale() {}

	    // Moment prototype object
	    function Moment(config, skipOverflow) {
	        if (skipOverflow !== false) {
	            checkOverflow(config);
	        }
	        copyConfig(this, config);
	        this._d = new Date(+config._d);
	        // Prevent infinite loop in case updateOffset creates new moment
	        // objects.
	        if (updateInProgress === false) {
	            updateInProgress = true;
	            moment.updateOffset(this);
	            updateInProgress = false;
	        }
	    }

	    // Duration Constructor
	    function Duration(duration) {
	        var normalizedInput = normalizeObjectUnits(duration),
	            years = normalizedInput.year || 0,
	            quarters = normalizedInput.quarter || 0,
	            months = normalizedInput.month || 0,
	            weeks = normalizedInput.week || 0,
	            days = normalizedInput.day || 0,
	            hours = normalizedInput.hour || 0,
	            minutes = normalizedInput.minute || 0,
	            seconds = normalizedInput.second || 0,
	            milliseconds = normalizedInput.millisecond || 0;

	        // representation for dateAddRemove
	        this._milliseconds = +milliseconds + seconds * 1000 + // 1000
	        minutes * 60000 + // 1000 * 60
	        hours * 3600000; // 1000 * 60 * 60
	        // Because of dateAddRemove treats 24 hours as different from a
	        // day when working around DST, we need to store them separately
	        this._days = +days + weeks * 7;
	        // It is impossible translate months into days without knowing
	        // which months you are are talking about, so we have to store
	        // it separately.
	        this._months = +months + quarters * 3 + years * 12;

	        this._data = {};

	        this._locale = moment.localeData();

	        this._bubble();
	    }

	    /************************************
	        Helpers
	    ************************************/

	    function extend(a, b) {
	        for (var i in b) {
	            if (hasOwnProp(b, i)) {
	                a[i] = b[i];
	            }
	        }

	        if (hasOwnProp(b, 'toString')) {
	            a.toString = b.toString;
	        }

	        if (hasOwnProp(b, 'valueOf')) {
	            a.valueOf = b.valueOf;
	        }

	        return a;
	    }

	    function copyConfig(to, from) {
	        var i, prop, val;

	        if (typeof from._isAMomentObject !== 'undefined') {
	            to._isAMomentObject = from._isAMomentObject;
	        }
	        if (typeof from._i !== 'undefined') {
	            to._i = from._i;
	        }
	        if (typeof from._f !== 'undefined') {
	            to._f = from._f;
	        }
	        if (typeof from._l !== 'undefined') {
	            to._l = from._l;
	        }
	        if (typeof from._strict !== 'undefined') {
	            to._strict = from._strict;
	        }
	        if (typeof from._tzm !== 'undefined') {
	            to._tzm = from._tzm;
	        }
	        if (typeof from._isUTC !== 'undefined') {
	            to._isUTC = from._isUTC;
	        }
	        if (typeof from._offset !== 'undefined') {
	            to._offset = from._offset;
	        }
	        if (typeof from._pf !== 'undefined') {
	            to._pf = from._pf;
	        }
	        if (typeof from._locale !== 'undefined') {
	            to._locale = from._locale;
	        }

	        if (momentProperties.length > 0) {
	            for (i in momentProperties) {
	                prop = momentProperties[i];
	                val = from[prop];
	                if (typeof val !== 'undefined') {
	                    to[prop] = val;
	                }
	            }
	        }

	        return to;
	    }

	    function absRound(number) {
	        if (number < 0) {
	            return Math.ceil(number);
	        } else {
	            return Math.floor(number);
	        }
	    }

	    // left zero fill a number
	    // see http://jsperf.com/left-zero-filling for performance comparison
	    function leftZeroFill(number, targetLength, forceSign) {
	        var output = '' + Math.abs(number),
	            sign = number >= 0;

	        while (output.length < targetLength) {
	            output = '0' + output;
	        }
	        return (sign ? forceSign ? '+' : '' : '-') + output;
	    }

	    function positiveMomentsDifference(base, other) {
	        var res = { milliseconds: 0, months: 0 };

	        res.months = other.month() - base.month() + (other.year() - base.year()) * 12;
	        if (base.clone().add(res.months, 'M').isAfter(other)) {
	            --res.months;
	        }

	        res.milliseconds = +other - +base.clone().add(res.months, 'M');

	        return res;
	    }

	    function momentsDifference(base, other) {
	        var res;
	        other = makeAs(other, base);
	        if (base.isBefore(other)) {
	            res = positiveMomentsDifference(base, other);
	        } else {
	            res = positiveMomentsDifference(other, base);
	            res.milliseconds = -res.milliseconds;
	            res.months = -res.months;
	        }

	        return res;
	    }

	    // TODO: remove 'name' arg after deprecation is removed
	    function createAdder(direction, name) {
	        return function (val, period) {
	            var dur, tmp;
	            //invert the arguments, but complain about it
	            if (period !== null && !isNaN(+period)) {
	                deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period).');
	                tmp = val;val = period;period = tmp;
	            }

	            val = typeof val === 'string' ? +val : val;
	            dur = moment.duration(val, period);
	            addOrSubtractDurationFromMoment(this, dur, direction);
	            return this;
	        };
	    }

	    function addOrSubtractDurationFromMoment(mom, duration, isAdding, updateOffset) {
	        var milliseconds = duration._milliseconds,
	            days = duration._days,
	            months = duration._months;
	        updateOffset = updateOffset == null ? true : updateOffset;

	        if (milliseconds) {
	            mom._d.setTime(+mom._d + milliseconds * isAdding);
	        }
	        if (days) {
	            rawSetter(mom, 'Date', rawGetter(mom, 'Date') + days * isAdding);
	        }
	        if (months) {
	            rawMonthSetter(mom, rawGetter(mom, 'Month') + months * isAdding);
	        }
	        if (updateOffset) {
	            moment.updateOffset(mom, days || months);
	        }
	    }

	    // check if is an array
	    function isArray(input) {
	        return Object.prototype.toString.call(input) === '[object Array]';
	    }

	    function isDate(input) {
	        return Object.prototype.toString.call(input) === '[object Date]' || input instanceof Date;
	    }

	    // compare two arrays, return the number of differences
	    function compareArrays(array1, array2, dontConvert) {
	        var len = Math.min(array1.length, array2.length),
	            lengthDiff = Math.abs(array1.length - array2.length),
	            diffs = 0,
	            i;
	        for (i = 0; i < len; i++) {
	            if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {
	                diffs++;
	            }
	        }
	        return diffs + lengthDiff;
	    }

	    function normalizeUnits(units) {
	        if (units) {
	            var lowered = units.toLowerCase().replace(/(.)s$/, '$1');
	            units = unitAliases[units] || camelFunctions[lowered] || lowered;
	        }
	        return units;
	    }

	    function normalizeObjectUnits(inputObject) {
	        var normalizedInput = {},
	            normalizedProp,
	            prop;

	        for (prop in inputObject) {
	            if (hasOwnProp(inputObject, prop)) {
	                normalizedProp = normalizeUnits(prop);
	                if (normalizedProp) {
	                    normalizedInput[normalizedProp] = inputObject[prop];
	                }
	            }
	        }

	        return normalizedInput;
	    }

	    function makeList(field) {
	        var count, setter;

	        if (field.indexOf('week') === 0) {
	            count = 7;
	            setter = 'day';
	        } else if (field.indexOf('month') === 0) {
	            count = 12;
	            setter = 'month';
	        } else {
	            return;
	        }

	        moment[field] = function (format, index) {
	            var i,
	                getter,
	                method = moment._locale[field],
	                results = [];

	            if (typeof format === 'number') {
	                index = format;
	                format = undefined;
	            }

	            getter = function (i) {
	                var m = moment().utc().set(setter, i);
	                return method.call(moment._locale, m, format || '');
	            };

	            if (index != null) {
	                return getter(index);
	            } else {
	                for (i = 0; i < count; i++) {
	                    results.push(getter(i));
	                }
	                return results;
	            }
	        };
	    }

	    function toInt(argumentForCoercion) {
	        var coercedNumber = +argumentForCoercion,
	            value = 0;

	        if (coercedNumber !== 0 && isFinite(coercedNumber)) {
	            if (coercedNumber >= 0) {
	                value = Math.floor(coercedNumber);
	            } else {
	                value = Math.ceil(coercedNumber);
	            }
	        }

	        return value;
	    }

	    function _daysInMonth(year, month) {
	        return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();
	    }

	    function _weeksInYear(year, dow, doy) {
	        return weekOfYear(moment([year, 11, 31 + dow - doy]), dow, doy).week;
	    }

	    function daysInYear(year) {
	        return _isLeapYear(year) ? 366 : 365;
	    }

	    function _isLeapYear(year) {
	        return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;
	    }

	    function checkOverflow(m) {
	        var overflow;
	        if (m._a && m._pf.overflow === -2) {
	            overflow = m._a[MONTH] < 0 || m._a[MONTH] > 11 ? MONTH : m._a[DATE] < 1 || m._a[DATE] > _daysInMonth(m._a[YEAR], m._a[MONTH]) ? DATE : m._a[HOUR] < 0 || m._a[HOUR] > 24 || m._a[HOUR] === 24 && (m._a[MINUTE] !== 0 || m._a[SECOND] !== 0 || m._a[MILLISECOND] !== 0) ? HOUR : m._a[MINUTE] < 0 || m._a[MINUTE] > 59 ? MINUTE : m._a[SECOND] < 0 || m._a[SECOND] > 59 ? SECOND : m._a[MILLISECOND] < 0 || m._a[MILLISECOND] > 999 ? MILLISECOND : -1;

	            if (m._pf._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {
	                overflow = DATE;
	            }

	            m._pf.overflow = overflow;
	        }
	    }

	    function _isValid(m) {
	        if (m._isValid == null) {
	            m._isValid = !isNaN(m._d.getTime()) && m._pf.overflow < 0 && !m._pf.empty && !m._pf.invalidMonth && !m._pf.nullInput && !m._pf.invalidFormat && !m._pf.userInvalidated;

	            if (m._strict) {
	                m._isValid = m._isValid && m._pf.charsLeftOver === 0 && m._pf.unusedTokens.length === 0 && m._pf.bigHour === undefined;
	            }
	        }
	        return m._isValid;
	    }

	    function normalizeLocale(key) {
	        return key ? key.toLowerCase().replace('_', '-') : key;
	    }

	    // pick the locale from the array
	    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
	    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
	    function chooseLocale(names) {
	        var i = 0,
	            j,
	            next,
	            locale,
	            split;

	        while (i < names.length) {
	            split = normalizeLocale(names[i]).split('-');
	            j = split.length;
	            next = normalizeLocale(names[i + 1]);
	            next = next ? next.split('-') : null;
	            while (j > 0) {
	                locale = loadLocale(split.slice(0, j).join('-'));
	                if (locale) {
	                    return locale;
	                }
	                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {
	                    //the next array item is better than a shallower substring of this one
	                    break;
	                }
	                j--;
	            }
	            i++;
	        }
	        return null;
	    }

	    function loadLocale(name) {
	        var oldLocale = null;
	        if (!locales[name] && hasModule) {
	            try {
	                oldLocale = moment.locale();
	                __webpack_require__(49)("./" + name);
	                // because defineLocale currently also sets the global locale, we want to undo that for lazy loaded locales
	                moment.locale(oldLocale);
	            } catch (e) {}
	        }
	        return locales[name];
	    }

	    // Return a moment from input, that is local/utc/utcOffset equivalent to
	    // model.
	    function makeAs(input, model) {
	        var res, diff;
	        if (model._isUTC) {
	            res = model.clone();
	            diff = (moment.isMoment(input) || isDate(input) ? +input : +moment(input)) - +res;
	            // Use low-level api, because this fn is low-level api.
	            res._d.setTime(+res._d + diff);
	            moment.updateOffset(res, false);
	            return res;
	        } else {
	            return moment(input).local();
	        }
	    }

	    /************************************
	        Locale
	    ************************************/

	    extend(Locale.prototype, {

	        set: function set(config) {
	            var prop, i;
	            for (i in config) {
	                prop = config[i];
	                if (typeof prop === 'function') {
	                    this[i] = prop;
	                } else {
	                    this['_' + i] = prop;
	                }
	            }
	            // Lenient ordinal parsing accepts just a number in addition to
	            // number + (possibly) stuff coming from _ordinalParseLenient.
	            this._ordinalParseLenient = new RegExp(this._ordinalParse.source + '|' + /\d{1,2}/.source);
	        },

	        _months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	        months: function months(m) {
	            return this._months[m.month()];
	        },

	        _monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	        monthsShort: function monthsShort(m) {
	            return this._monthsShort[m.month()];
	        },

	        monthsParse: function monthsParse(monthName, format, strict) {
	            var i, mom, regex;

	            if (!this._monthsParse) {
	                this._monthsParse = [];
	                this._longMonthsParse = [];
	                this._shortMonthsParse = [];
	            }

	            for (i = 0; i < 12; i++) {
	                // make the regex if we don't have it already
	                mom = moment.utc([2000, i]);
	                if (strict && !this._longMonthsParse[i]) {
	                    this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');
	                    this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');
	                }
	                if (!strict && !this._monthsParse[i]) {
	                    regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
	                    this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
	                }
	                // test the regex
	                if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {
	                    return i;
	                } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {
	                    return i;
	                } else if (!strict && this._monthsParse[i].test(monthName)) {
	                    return i;
	                }
	            }
	        },

	        _weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	        weekdays: function weekdays(m) {
	            return this._weekdays[m.day()];
	        },

	        _weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	        weekdaysShort: function weekdaysShort(m) {
	            return this._weekdaysShort[m.day()];
	        },

	        _weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	        weekdaysMin: function weekdaysMin(m) {
	            return this._weekdaysMin[m.day()];
	        },

	        weekdaysParse: function weekdaysParse(weekdayName) {
	            var i, mom, regex;

	            if (!this._weekdaysParse) {
	                this._weekdaysParse = [];
	            }

	            for (i = 0; i < 7; i++) {
	                // make the regex if we don't have it already
	                if (!this._weekdaysParse[i]) {
	                    mom = moment([2000, 1]).day(i);
	                    regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');
	                    this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
	                }
	                // test the regex
	                if (this._weekdaysParse[i].test(weekdayName)) {
	                    return i;
	                }
	            }
	        },

	        _longDateFormat: {
	            LTS: 'h:mm:ss A',
	            LT: 'h:mm A',
	            L: 'MM/DD/YYYY',
	            LL: 'MMMM D, YYYY',
	            LLL: 'MMMM D, YYYY LT',
	            LLLL: 'dddd, MMMM D, YYYY LT'
	        },
	        longDateFormat: function longDateFormat(key) {
	            var output = this._longDateFormat[key];
	            if (!output && this._longDateFormat[key.toUpperCase()]) {
	                output = this._longDateFormat[key.toUpperCase()].replace(/MMMM|MM|DD|dddd/g, function (val) {
	                    return val.slice(1);
	                });
	                this._longDateFormat[key] = output;
	            }
	            return output;
	        },

	        isPM: function isPM(input) {
	            // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
	            // Using charAt should be more compatible.
	            return (input + '').toLowerCase().charAt(0) === 'p';
	        },

	        _meridiemParse: /[ap]\.?m?\.?/i,
	        meridiem: function meridiem(hours, minutes, isLower) {
	            if (hours > 11) {
	                return isLower ? 'pm' : 'PM';
	            } else {
	                return isLower ? 'am' : 'AM';
	            }
	        },

	        _calendar: {
	            sameDay: '[Today at] LT',
	            nextDay: '[Tomorrow at] LT',
	            nextWeek: 'dddd [at] LT',
	            lastDay: '[Yesterday at] LT',
	            lastWeek: '[Last] dddd [at] LT',
	            sameElse: 'L'
	        },
	        calendar: function calendar(key, mom, now) {
	            var output = this._calendar[key];
	            return typeof output === 'function' ? output.apply(mom, [now]) : output;
	        },

	        _relativeTime: {
	            future: 'in %s',
	            past: '%s ago',
	            s: 'a few seconds',
	            m: 'a minute',
	            mm: '%d minutes',
	            h: 'an hour',
	            hh: '%d hours',
	            d: 'a day',
	            dd: '%d days',
	            M: 'a month',
	            MM: '%d months',
	            y: 'a year',
	            yy: '%d years'
	        },

	        relativeTime: function relativeTime(number, withoutSuffix, string, isFuture) {
	            var output = this._relativeTime[string];
	            return typeof output === 'function' ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);
	        },

	        pastFuture: function pastFuture(diff, output) {
	            var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
	            return typeof format === 'function' ? format(output) : format.replace(/%s/i, output);
	        },

	        ordinal: function ordinal(number) {
	            return this._ordinal.replace('%d', number);
	        },
	        _ordinal: '%d',
	        _ordinalParse: /\d{1,2}/,

	        preparse: function preparse(string) {
	            return string;
	        },

	        postformat: function postformat(string) {
	            return string;
	        },

	        week: function week(mom) {
	            return weekOfYear(mom, this._week.dow, this._week.doy).week;
	        },

	        _week: {
	            dow: 0, // Sunday is the first day of the week.
	            doy: 6 // The week that contains Jan 1st is the first week of the year.
	        },

	        firstDayOfWeek: function firstDayOfWeek() {
	            return this._week.dow;
	        },

	        firstDayOfYear: function firstDayOfYear() {
	            return this._week.doy;
	        },

	        _invalidDate: 'Invalid date',
	        invalidDate: function invalidDate() {
	            return this._invalidDate;
	        }
	    });

	    /************************************
	        Formatting
	    ************************************/

	    function removeFormattingTokens(input) {
	        if (input.match(/\[[\s\S]/)) {
	            return input.replace(/^\[|\]$/g, '');
	        }
	        return input.replace(/\\/g, '');
	    }

	    function makeFormatFunction(format) {
	        var array = format.match(formattingTokens),
	            i,
	            length;

	        for (i = 0, length = array.length; i < length; i++) {
	            if (formatTokenFunctions[array[i]]) {
	                array[i] = formatTokenFunctions[array[i]];
	            } else {
	                array[i] = removeFormattingTokens(array[i]);
	            }
	        }

	        return function (mom) {
	            var output = '';
	            for (i = 0; i < length; i++) {
	                output += array[i] instanceof Function ? array[i].call(mom, format) : array[i];
	            }
	            return output;
	        };
	    }

	    // format date using native date object
	    function formatMoment(m, format) {
	        if (!m.isValid()) {
	            return m.localeData().invalidDate();
	        }

	        format = expandFormat(format, m.localeData());

	        if (!formatFunctions[format]) {
	            formatFunctions[format] = makeFormatFunction(format);
	        }

	        return formatFunctions[format](m);
	    }

	    function expandFormat(format, locale) {
	        var i = 5;

	        function replaceLongDateFormatTokens(input) {
	            return locale.longDateFormat(input) || input;
	        }

	        localFormattingTokens.lastIndex = 0;
	        while (i >= 0 && localFormattingTokens.test(format)) {
	            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);
	            localFormattingTokens.lastIndex = 0;
	            i -= 1;
	        }

	        return format;
	    }

	    /************************************
	        Parsing
	    ************************************/

	    // get the regex to find the next token
	    function getParseRegexForToken(token, config) {
	        var a,
	            strict = config._strict;
	        switch (token) {
	            case 'Q':
	                return parseTokenOneDigit;
	            case 'DDDD':
	                return parseTokenThreeDigits;
	            case 'YYYY':
	            case 'GGGG':
	            case 'gggg':
	                return strict ? parseTokenFourDigits : parseTokenOneToFourDigits;
	            case 'Y':
	            case 'G':
	            case 'g':
	                return parseTokenSignedNumber;
	            case 'YYYYYY':
	            case 'YYYYY':
	            case 'GGGGG':
	            case 'ggggg':
	                return strict ? parseTokenSixDigits : parseTokenOneToSixDigits;
	            case 'S':
	                if (strict) {
	                    return parseTokenOneDigit;
	                }
	            /* falls through */
	            case 'SS':
	                if (strict) {
	                    return parseTokenTwoDigits;
	                }
	            /* falls through */
	            case 'SSS':
	                if (strict) {
	                    return parseTokenThreeDigits;
	                }
	            /* falls through */
	            case 'DDD':
	                return parseTokenOneToThreeDigits;
	            case 'MMM':
	            case 'MMMM':
	            case 'dd':
	            case 'ddd':
	            case 'dddd':
	                return parseTokenWord;
	            case 'a':
	            case 'A':
	                return config._locale._meridiemParse;
	            case 'x':
	                return parseTokenOffsetMs;
	            case 'X':
	                return parseTokenTimestampMs;
	            case 'Z':
	            case 'ZZ':
	                return parseTokenTimezone;
	            case 'T':
	                return parseTokenT;
	            case 'SSSS':
	                return parseTokenDigits;
	            case 'MM':
	            case 'DD':
	            case 'YY':
	            case 'GG':
	            case 'gg':
	            case 'HH':
	            case 'hh':
	            case 'mm':
	            case 'ss':
	            case 'ww':
	            case 'WW':
	                return strict ? parseTokenTwoDigits : parseTokenOneOrTwoDigits;
	            case 'M':
	            case 'D':
	            case 'd':
	            case 'H':
	            case 'h':
	            case 'm':
	            case 's':
	            case 'w':
	            case 'W':
	            case 'e':
	            case 'E':
	                return parseTokenOneOrTwoDigits;
	            case 'Do':
	                return strict ? config._locale._ordinalParse : config._locale._ordinalParseLenient;
	            default:
	                a = new RegExp(regexpEscape(unescapeFormat(token.replace('\\', '')), 'i'));
	                return a;
	        }
	    }

	    function utcOffsetFromString(string) {
	        string = string || '';
	        var possibleTzMatches = string.match(parseTokenTimezone) || [],
	            tzChunk = possibleTzMatches[possibleTzMatches.length - 1] || [],
	            parts = (tzChunk + '').match(parseTimezoneChunker) || ['-', 0, 0],
	            minutes = +(parts[1] * 60) + toInt(parts[2]);

	        return parts[0] === '+' ? minutes : -minutes;
	    }

	    // function to convert string input to date
	    function addTimeToArrayFromToken(token, input, config) {
	        var a,
	            datePartArray = config._a;

	        switch (token) {
	            // QUARTER
	            case 'Q':
	                if (input != null) {
	                    datePartArray[MONTH] = (toInt(input) - 1) * 3;
	                }
	                break;
	            // MONTH
	            case 'M': // fall through to MM
	            case 'MM':
	                if (input != null) {
	                    datePartArray[MONTH] = toInt(input) - 1;
	                }
	                break;
	            case 'MMM': // fall through to MMMM
	            case 'MMMM':
	                a = config._locale.monthsParse(input, token, config._strict);
	                // if we didn't find a month name, mark the date as invalid.
	                if (a != null) {
	                    datePartArray[MONTH] = a;
	                } else {
	                    config._pf.invalidMonth = input;
	                }
	                break;
	            // DAY OF MONTH
	            case 'D': // fall through to DD
	            case 'DD':
	                if (input != null) {
	                    datePartArray[DATE] = toInt(input);
	                }
	                break;
	            case 'Do':
	                if (input != null) {
	                    datePartArray[DATE] = toInt(parseInt(input.match(/\d{1,2}/)[0], 10));
	                }
	                break;
	            // DAY OF YEAR
	            case 'DDD': // fall through to DDDD
	            case 'DDDD':
	                if (input != null) {
	                    config._dayOfYear = toInt(input);
	                }

	                break;
	            // YEAR
	            case 'YY':
	                datePartArray[YEAR] = moment.parseTwoDigitYear(input);
	                break;
	            case 'YYYY':
	            case 'YYYYY':
	            case 'YYYYYY':
	                datePartArray[YEAR] = toInt(input);
	                break;
	            // AM / PM
	            case 'a': // fall through to A
	            case 'A':
	                config._meridiem = input;
	                // config._isPm = config._locale.isPM(input);
	                break;
	            // HOUR
	            case 'h': // fall through to hh
	            case 'hh':
	                config._pf.bigHour = true;
	            /* falls through */
	            case 'H': // fall through to HH
	            case 'HH':
	                datePartArray[HOUR] = toInt(input);
	                break;
	            // MINUTE
	            case 'm': // fall through to mm
	            case 'mm':
	                datePartArray[MINUTE] = toInt(input);
	                break;
	            // SECOND
	            case 's': // fall through to ss
	            case 'ss':
	                datePartArray[SECOND] = toInt(input);
	                break;
	            // MILLISECOND
	            case 'S':
	            case 'SS':
	            case 'SSS':
	            case 'SSSS':
	                datePartArray[MILLISECOND] = toInt(('0.' + input) * 1000);
	                break;
	            // UNIX OFFSET (MILLISECONDS)
	            case 'x':
	                config._d = new Date(toInt(input));
	                break;
	            // UNIX TIMESTAMP WITH MS
	            case 'X':
	                config._d = new Date(parseFloat(input) * 1000);
	                break;
	            // TIMEZONE
	            case 'Z': // fall through to ZZ
	            case 'ZZ':
	                config._useUTC = true;
	                config._tzm = utcOffsetFromString(input);
	                break;
	            // WEEKDAY - human
	            case 'dd':
	            case 'ddd':
	            case 'dddd':
	                a = config._locale.weekdaysParse(input);
	                // if we didn't get a weekday name, mark the date as invalid
	                if (a != null) {
	                    config._w = config._w || {};
	                    config._w['d'] = a;
	                } else {
	                    config._pf.invalidWeekday = input;
	                }
	                break;
	            // WEEK, WEEK DAY - numeric
	            case 'w':
	            case 'ww':
	            case 'W':
	            case 'WW':
	            case 'd':
	            case 'e':
	            case 'E':
	                token = token.substr(0, 1);
	            /* falls through */
	            case 'gggg':
	            case 'GGGG':
	            case 'GGGGG':
	                token = token.substr(0, 2);
	                if (input) {
	                    config._w = config._w || {};
	                    config._w[token] = toInt(input);
	                }
	                break;
	            case 'gg':
	            case 'GG':
	                config._w = config._w || {};
	                config._w[token] = moment.parseTwoDigitYear(input);
	        }
	    }

	    function dayOfYearFromWeekInfo(config) {
	        var w, weekYear, week, weekday, dow, doy, temp;

	        w = config._w;
	        if (w.GG != null || w.W != null || w.E != null) {
	            dow = 1;
	            doy = 4;

	            // TODO: We need to take the current isoWeekYear, but that depends on
	            // how we interpret now (local, utc, fixed offset). So create
	            // a now version of current config (take local/utc/offset flags, and
	            // create now).
	            weekYear = dfl(w.GG, config._a[YEAR], weekOfYear(moment(), 1, 4).year);
	            week = dfl(w.W, 1);
	            weekday = dfl(w.E, 1);
	        } else {
	            dow = config._locale._week.dow;
	            doy = config._locale._week.doy;

	            weekYear = dfl(w.gg, config._a[YEAR], weekOfYear(moment(), dow, doy).year);
	            week = dfl(w.w, 1);

	            if (w.d != null) {
	                // weekday -- low day numbers are considered next week
	                weekday = w.d;
	                if (weekday < dow) {
	                    ++week;
	                }
	            } else if (w.e != null) {
	                // local weekday -- counting starts from begining of week
	                weekday = w.e + dow;
	            } else {
	                // default to begining of week
	                weekday = dow;
	            }
	        }
	        temp = dayOfYearFromWeeks(weekYear, week, weekday, doy, dow);

	        config._a[YEAR] = temp.year;
	        config._dayOfYear = temp.dayOfYear;
	    }

	    // convert an array to a date.
	    // the array should mirror the parameters below
	    // note: all values past the year are optional and will default to the lowest possible value.
	    // [year, month, day , hour, minute, second, millisecond]
	    function dateFromConfig(config) {
	        var i,
	            date,
	            input = [],
	            currentDate,
	            yearToUse;

	        if (config._d) {
	            return;
	        }

	        currentDate = currentDateArray(config);

	        //compute day of the year from weeks and weekdays
	        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
	            dayOfYearFromWeekInfo(config);
	        }

	        //if the day of the year is set, figure out what it is
	        if (config._dayOfYear) {
	            yearToUse = dfl(config._a[YEAR], currentDate[YEAR]);

	            if (config._dayOfYear > daysInYear(yearToUse)) {
	                config._pf._overflowDayOfYear = true;
	            }

	            date = makeUTCDate(yearToUse, 0, config._dayOfYear);
	            config._a[MONTH] = date.getUTCMonth();
	            config._a[DATE] = date.getUTCDate();
	        }

	        // Default to current date.
	        // * if no year, month, day of month are given, default to today
	        // * if day of month is given, default month and year
	        // * if month is given, default only year
	        // * if year is given, don't default anything
	        for (i = 0; i < 3 && config._a[i] == null; ++i) {
	            config._a[i] = input[i] = currentDate[i];
	        }

	        // Zero out whatever was not defaulted, including time
	        for (; i < 7; i++) {
	            config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];
	        }

	        // Check for 24:00:00.000
	        if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {
	            config._nextDay = true;
	            config._a[HOUR] = 0;
	        }

	        config._d = (config._useUTC ? makeUTCDate : makeDate).apply(null, input);
	        // Apply timezone offset from input. The actual utcOffset can be changed
	        // with parseZone.
	        if (config._tzm != null) {
	            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
	        }

	        if (config._nextDay) {
	            config._a[HOUR] = 24;
	        }
	    }

	    function dateFromObject(config) {
	        var normalizedInput;

	        if (config._d) {
	            return;
	        }

	        normalizedInput = normalizeObjectUnits(config._i);
	        config._a = [normalizedInput.year, normalizedInput.month, normalizedInput.day || normalizedInput.date, normalizedInput.hour, normalizedInput.minute, normalizedInput.second, normalizedInput.millisecond];

	        dateFromConfig(config);
	    }

	    function currentDateArray(config) {
	        var now = new Date();
	        if (config._useUTC) {
	            return [now.getUTCFullYear(), now.getUTCMonth(), now.getUTCDate()];
	        } else {
	            return [now.getFullYear(), now.getMonth(), now.getDate()];
	        }
	    }

	    // date from string and format string
	    function makeDateFromStringAndFormat(config) {
	        if (config._f === moment.ISO_8601) {
	            parseISO(config);
	            return;
	        }

	        config._a = [];
	        config._pf.empty = true;

	        // This array is used to make a Date, either with `new Date` or `Date.UTC`
	        var string = '' + config._i,
	            i,
	            parsedInput,
	            tokens,
	            token,
	            skipped,
	            stringLength = string.length,
	            totalParsedInputLength = 0;

	        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];

	        for (i = 0; i < tokens.length; i++) {
	            token = tokens[i];
	            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];
	            if (parsedInput) {
	                skipped = string.substr(0, string.indexOf(parsedInput));
	                if (skipped.length > 0) {
	                    config._pf.unusedInput.push(skipped);
	                }
	                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);
	                totalParsedInputLength += parsedInput.length;
	            }
	            // don't parse if it's not a known token
	            if (formatTokenFunctions[token]) {
	                if (parsedInput) {
	                    config._pf.empty = false;
	                } else {
	                    config._pf.unusedTokens.push(token);
	                }
	                addTimeToArrayFromToken(token, parsedInput, config);
	            } else if (config._strict && !parsedInput) {
	                config._pf.unusedTokens.push(token);
	            }
	        }

	        // add remaining unparsed input length to the string
	        config._pf.charsLeftOver = stringLength - totalParsedInputLength;
	        if (string.length > 0) {
	            config._pf.unusedInput.push(string);
	        }

	        // clear _12h flag if hour is <= 12
	        if (config._pf.bigHour === true && config._a[HOUR] <= 12) {
	            config._pf.bigHour = undefined;
	        }
	        // handle meridiem
	        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);
	        dateFromConfig(config);
	        checkOverflow(config);
	    }

	    function unescapeFormat(s) {
	        return s.replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (matched, p1, p2, p3, p4) {
	            return p1 || p2 || p3 || p4;
	        });
	    }

	    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
	    function regexpEscape(s) {
	        return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
	    }

	    // date from string and array of format strings
	    function makeDateFromStringAndArray(config) {
	        var tempConfig, bestMoment, scoreToBeat, i, currentScore;

	        if (config._f.length === 0) {
	            config._pf.invalidFormat = true;
	            config._d = new Date(NaN);
	            return;
	        }

	        for (i = 0; i < config._f.length; i++) {
	            currentScore = 0;
	            tempConfig = copyConfig({}, config);
	            if (config._useUTC != null) {
	                tempConfig._useUTC = config._useUTC;
	            }
	            tempConfig._pf = defaultParsingFlags();
	            tempConfig._f = config._f[i];
	            makeDateFromStringAndFormat(tempConfig);

	            if (!_isValid(tempConfig)) {
	                continue;
	            }

	            // if there is any input that was not parsed add a penalty for that format
	            currentScore += tempConfig._pf.charsLeftOver;

	            //or tokens
	            currentScore += tempConfig._pf.unusedTokens.length * 10;

	            tempConfig._pf.score = currentScore;

	            if (scoreToBeat == null || currentScore < scoreToBeat) {
	                scoreToBeat = currentScore;
	                bestMoment = tempConfig;
	            }
	        }

	        extend(config, bestMoment || tempConfig);
	    }

	    // date from iso format
	    function parseISO(config) {
	        var i,
	            l,
	            string = config._i,
	            match = isoRegex.exec(string);

	        if (match) {
	            config._pf.iso = true;
	            for (i = 0, l = isoDates.length; i < l; i++) {
	                if (isoDates[i][1].exec(string)) {
	                    // match[5] should be 'T' or undefined
	                    config._f = isoDates[i][0] + (match[6] || ' ');
	                    break;
	                }
	            }
	            for (i = 0, l = isoTimes.length; i < l; i++) {
	                if (isoTimes[i][1].exec(string)) {
	                    config._f += isoTimes[i][0];
	                    break;
	                }
	            }
	            if (string.match(parseTokenTimezone)) {
	                config._f += 'Z';
	            }
	            makeDateFromStringAndFormat(config);
	        } else {
	            config._isValid = false;
	        }
	    }

	    // date from iso format or fallback
	    function makeDateFromString(config) {
	        parseISO(config);
	        if (config._isValid === false) {
	            delete config._isValid;
	            moment.createFromInputFallback(config);
	        }
	    }

	    function map(arr, fn) {
	        var res = [],
	            i;
	        for (i = 0; i < arr.length; ++i) {
	            res.push(fn(arr[i], i));
	        }
	        return res;
	    }

	    function makeDateFromInput(config) {
	        var input = config._i,
	            matched;
	        if (input === undefined) {
	            config._d = new Date();
	        } else if (isDate(input)) {
	            config._d = new Date(+input);
	        } else if ((matched = aspNetJsonRegex.exec(input)) !== null) {
	            config._d = new Date(+matched[1]);
	        } else if (typeof input === 'string') {
	            makeDateFromString(config);
	        } else if (isArray(input)) {
	            config._a = map(input.slice(0), function (obj) {
	                return parseInt(obj, 10);
	            });
	            dateFromConfig(config);
	        } else if (typeof input === 'object') {
	            dateFromObject(config);
	        } else if (typeof input === 'number') {
	            // from milliseconds
	            config._d = new Date(input);
	        } else {
	            moment.createFromInputFallback(config);
	        }
	    }

	    function makeDate(y, m, d, h, M, s, ms) {
	        //can't just apply() to create a date:
	        //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply
	        var date = new Date(y, m, d, h, M, s, ms);

	        //the date constructor doesn't accept years < 1970
	        if (y < 1970) {
	            date.setFullYear(y);
	        }
	        return date;
	    }

	    function makeUTCDate(y) {
	        var date = new Date(Date.UTC.apply(null, arguments));
	        if (y < 1970) {
	            date.setUTCFullYear(y);
	        }
	        return date;
	    }

	    function parseWeekday(input, locale) {
	        if (typeof input === 'string') {
	            if (!isNaN(input)) {
	                input = parseInt(input, 10);
	            } else {
	                input = locale.weekdaysParse(input);
	                if (typeof input !== 'number') {
	                    return null;
	                }
	            }
	        }
	        return input;
	    }

	    /************************************
	        Relative Time
	    ************************************/

	    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
	    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
	        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
	    }

	    function relativeTime(posNegDuration, withoutSuffix, locale) {
	        var duration = moment.duration(posNegDuration).abs(),
	            seconds = round(duration.as('s')),
	            minutes = round(duration.as('m')),
	            hours = round(duration.as('h')),
	            days = round(duration.as('d')),
	            months = round(duration.as('M')),
	            years = round(duration.as('y')),
	            args = seconds < relativeTimeThresholds.s && ['s', seconds] || minutes === 1 && ['m'] || minutes < relativeTimeThresholds.m && ['mm', minutes] || hours === 1 && ['h'] || hours < relativeTimeThresholds.h && ['hh', hours] || days === 1 && ['d'] || days < relativeTimeThresholds.d && ['dd', days] || months === 1 && ['M'] || months < relativeTimeThresholds.M && ['MM', months] || years === 1 && ['y'] || ['yy', years];

	        args[2] = withoutSuffix;
	        args[3] = +posNegDuration > 0;
	        args[4] = locale;
	        return substituteTimeAgo.apply({}, args);
	    }

	    /************************************
	        Week of Year
	    ************************************/

	    // firstDayOfWeek       0 = sun, 6 = sat
	    //                      the day of the week that starts the week
	    //                      (usually sunday or monday)
	    // firstDayOfWeekOfYear 0 = sun, 6 = sat
	    //                      the first week is the week that contains the first
	    //                      of this day of the week
	    //                      (eg. ISO weeks use thursday (4))
	    function weekOfYear(mom, firstDayOfWeek, firstDayOfWeekOfYear) {
	        var end = firstDayOfWeekOfYear - firstDayOfWeek,
	            daysToDayOfWeek = firstDayOfWeekOfYear - mom.day(),
	            adjustedMoment;

	        if (daysToDayOfWeek > end) {
	            daysToDayOfWeek -= 7;
	        }

	        if (daysToDayOfWeek < end - 7) {
	            daysToDayOfWeek += 7;
	        }

	        adjustedMoment = moment(mom).add(daysToDayOfWeek, 'd');
	        return {
	            week: Math.ceil(adjustedMoment.dayOfYear() / 7),
	            year: adjustedMoment.year()
	        };
	    }

	    //http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
	    function dayOfYearFromWeeks(year, week, weekday, firstDayOfWeekOfYear, firstDayOfWeek) {
	        var d = makeUTCDate(year, 0, 1).getUTCDay(),
	            daysToAdd,
	            dayOfYear;

	        d = d === 0 ? 7 : d;
	        weekday = weekday != null ? weekday : firstDayOfWeek;
	        daysToAdd = firstDayOfWeek - d + (d > firstDayOfWeekOfYear ? 7 : 0) - (d < firstDayOfWeek ? 7 : 0);
	        dayOfYear = 7 * (week - 1) + (weekday - firstDayOfWeek) + daysToAdd + 1;

	        return {
	            year: dayOfYear > 0 ? year : year - 1,
	            dayOfYear: dayOfYear > 0 ? dayOfYear : daysInYear(year - 1) + dayOfYear
	        };
	    }

	    /************************************
	        Top Level Functions
	    ************************************/

	    function makeMoment(config) {
	        var input = config._i,
	            format = config._f,
	            res;

	        config._locale = config._locale || moment.localeData(config._l);

	        if (input === null || format === undefined && input === '') {
	            return moment.invalid({ nullInput: true });
	        }

	        if (typeof input === 'string') {
	            config._i = input = config._locale.preparse(input);
	        }

	        if (moment.isMoment(input)) {
	            return new Moment(input, true);
	        } else if (format) {
	            if (isArray(format)) {
	                makeDateFromStringAndArray(config);
	            } else {
	                makeDateFromStringAndFormat(config);
	            }
	        } else {
	            makeDateFromInput(config);
	        }

	        res = new Moment(config);
	        if (res._nextDay) {
	            // Adding is smart enough around DST
	            res.add(1, 'd');
	            res._nextDay = undefined;
	        }

	        return res;
	    }

	    moment = function (input, format, locale, strict) {
	        var c;

	        if (typeof locale === 'boolean') {
	            strict = locale;
	            locale = undefined;
	        }
	        // object construction must be done this way.
	        // https://github.com/moment/moment/issues/1423
	        c = {};
	        c._isAMomentObject = true;
	        c._i = input;
	        c._f = format;
	        c._l = locale;
	        c._strict = strict;
	        c._isUTC = false;
	        c._pf = defaultParsingFlags();

	        return makeMoment(c);
	    };

	    moment.suppressDeprecationWarnings = false;

	    moment.createFromInputFallback = deprecate('moment construction falls back to js Date. This is ' + 'discouraged and will be removed in upcoming major ' + 'release. Please refer to ' + 'https://github.com/moment/moment/issues/1407 for more info.', function (config) {
	        config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
	    });

	    // Pick a moment m from moments so that m[fn](other) is true for all
	    // other. This relies on the function fn to be transitive.
	    //
	    // moments should either be an array of moment objects or an array, whose
	    // first element is an array of moment objects.
	    function pickBy(fn, moments) {
	        var res, i;
	        if (moments.length === 1 && isArray(moments[0])) {
	            moments = moments[0];
	        }
	        if (!moments.length) {
	            return moment();
	        }
	        res = moments[0];
	        for (i = 1; i < moments.length; ++i) {
	            if (moments[i][fn](res)) {
	                res = moments[i];
	            }
	        }
	        return res;
	    }

	    moment.min = function () {
	        var args = [].slice.call(arguments, 0);

	        return pickBy('isBefore', args);
	    };

	    moment.max = function () {
	        var args = [].slice.call(arguments, 0);

	        return pickBy('isAfter', args);
	    };

	    // creating with utc
	    moment.utc = function (input, format, locale, strict) {
	        var c;

	        if (typeof locale === 'boolean') {
	            strict = locale;
	            locale = undefined;
	        }
	        // object construction must be done this way.
	        // https://github.com/moment/moment/issues/1423
	        c = {};
	        c._isAMomentObject = true;
	        c._useUTC = true;
	        c._isUTC = true;
	        c._l = locale;
	        c._i = input;
	        c._f = format;
	        c._strict = strict;
	        c._pf = defaultParsingFlags();

	        return makeMoment(c).utc();
	    };

	    // creating with unix timestamp (in seconds)
	    moment.unix = function (input) {
	        return moment(input * 1000);
	    };

	    // duration
	    moment.duration = function (input, key) {
	        var duration = input,

	        // matching against regexp is expensive, do it on demand
	        match = null,
	            sign,
	            ret,
	            parseIso,
	            diffRes;

	        if (moment.isDuration(input)) {
	            duration = {
	                ms: input._milliseconds,
	                d: input._days,
	                M: input._months
	            };
	        } else if (typeof input === 'number') {
	            duration = {};
	            if (key) {
	                duration[key] = input;
	            } else {
	                duration.milliseconds = input;
	            }
	        } else if (!!(match = aspNetTimeSpanJsonRegex.exec(input))) {
	            sign = match[1] === '-' ? -1 : 1;
	            duration = {
	                y: 0,
	                d: toInt(match[DATE]) * sign,
	                h: toInt(match[HOUR]) * sign,
	                m: toInt(match[MINUTE]) * sign,
	                s: toInt(match[SECOND]) * sign,
	                ms: toInt(match[MILLISECOND]) * sign
	            };
	        } else if (!!(match = isoDurationRegex.exec(input))) {
	            sign = match[1] === '-' ? -1 : 1;
	            parseIso = function (inp) {
	                // We'd normally use ~~inp for this, but unfortunately it also
	                // converts floats to ints.
	                // inp may be undefined, so careful calling replace on it.
	                var res = inp && parseFloat(inp.replace(',', '.'));
	                // apply sign while we're at it
	                return (isNaN(res) ? 0 : res) * sign;
	            };
	            duration = {
	                y: parseIso(match[2]),
	                M: parseIso(match[3]),
	                d: parseIso(match[4]),
	                h: parseIso(match[5]),
	                m: parseIso(match[6]),
	                s: parseIso(match[7]),
	                w: parseIso(match[8])
	            };
	        } else if (duration == null) {
	            // checks for null or undefined
	            duration = {};
	        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {
	            diffRes = momentsDifference(moment(duration.from), moment(duration.to));

	            duration = {};
	            duration.ms = diffRes.milliseconds;
	            duration.M = diffRes.months;
	        }

	        ret = new Duration(duration);

	        if (moment.isDuration(input) && hasOwnProp(input, '_locale')) {
	            ret._locale = input._locale;
	        }

	        return ret;
	    };

	    // version number
	    moment.version = VERSION;

	    // default format
	    moment.defaultFormat = isoFormat;

	    // constant that refers to the ISO standard
	    moment.ISO_8601 = function () {};

	    // Plugins that add properties should also add the key here (null value),
	    // so we can properly clone ourselves.
	    moment.momentProperties = momentProperties;

	    // This function will be called whenever a moment is mutated.
	    // It is intended to keep the offset in sync with the timezone.
	    moment.updateOffset = function () {};

	    // This function allows you to set a threshold for relative time strings
	    moment.relativeTimeThreshold = function (threshold, limit) {
	        if (relativeTimeThresholds[threshold] === undefined) {
	            return false;
	        }
	        if (limit === undefined) {
	            return relativeTimeThresholds[threshold];
	        }
	        relativeTimeThresholds[threshold] = limit;
	        return true;
	    };

	    moment.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', function (key, value) {
	        return moment.locale(key, value);
	    });

	    // This function will load locale and then set the global locale.  If
	    // no arguments are passed in, it will simply return the current global
	    // locale key.
	    moment.locale = function (key, values) {
	        var data;
	        if (key) {
	            if (typeof values !== 'undefined') {
	                data = moment.defineLocale(key, values);
	            } else {
	                data = moment.localeData(key);
	            }

	            if (data) {
	                moment.duration._locale = moment._locale = data;
	            }
	        }

	        return moment._locale._abbr;
	    };

	    moment.defineLocale = function (name, values) {
	        if (values !== null) {
	            values.abbr = name;
	            if (!locales[name]) {
	                locales[name] = new Locale();
	            }
	            locales[name].set(values);

	            // backwards compat for now: also set the locale
	            moment.locale(name);

	            return locales[name];
	        } else {
	            // useful for testing
	            delete locales[name];
	            return null;
	        }
	    };

	    moment.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', function (key) {
	        return moment.localeData(key);
	    });

	    // returns locale data
	    moment.localeData = function (key) {
	        var locale;

	        if (key && key._locale && key._locale._abbr) {
	            key = key._locale._abbr;
	        }

	        if (!key) {
	            return moment._locale;
	        }

	        if (!isArray(key)) {
	            //short-circuit everything else
	            locale = loadLocale(key);
	            if (locale) {
	                return locale;
	            }
	            key = [key];
	        }

	        return chooseLocale(key);
	    };

	    // compare moment object
	    moment.isMoment = function (obj) {
	        return obj instanceof Moment || obj != null && hasOwnProp(obj, '_isAMomentObject');
	    };

	    // for typechecking Duration objects
	    moment.isDuration = function (obj) {
	        return obj instanceof Duration;
	    };

	    for (i = lists.length - 1; i >= 0; --i) {
	        makeList(lists[i]);
	    }

	    moment.normalizeUnits = function (units) {
	        return normalizeUnits(units);
	    };

	    moment.invalid = function (flags) {
	        var m = moment.utc(NaN);
	        if (flags != null) {
	            extend(m._pf, flags);
	        } else {
	            m._pf.userInvalidated = true;
	        }

	        return m;
	    };

	    moment.parseZone = function () {
	        return moment.apply(null, arguments).parseZone();
	    };

	    moment.parseTwoDigitYear = function (input) {
	        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
	    };

	    moment.isDate = isDate;

	    /************************************
	        Moment Prototype
	    ************************************/

	    extend(moment.fn = Moment.prototype, {

	        clone: function clone() {
	            return moment(this);
	        },

	        valueOf: function valueOf() {
	            return +this._d - (this._offset || 0) * 60000;
	        },

	        unix: function unix() {
	            return Math.floor(+this / 1000);
	        },

	        toString: function toString() {
	            return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
	        },

	        toDate: function toDate() {
	            return this._offset ? new Date(+this) : this._d;
	        },

	        toISOString: function toISOString() {
	            var m = moment(this).utc();
	            if (0 < m.year() && m.year() <= 9999) {
	                if ('function' === typeof Date.prototype.toISOString) {
	                    // native implementation is ~50x faster, use it when we can
	                    return this.toDate().toISOString();
	                } else {
	                    return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
	                }
	            } else {
	                return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
	            }
	        },

	        toArray: function toArray() {
	            var m = this;
	            return [m.year(), m.month(), m.date(), m.hours(), m.minutes(), m.seconds(), m.milliseconds()];
	        },

	        isValid: function isValid() {
	            return _isValid(this);
	        },

	        isDSTShifted: function isDSTShifted() {
	            if (this._a) {
	                return this.isValid() && compareArrays(this._a, (this._isUTC ? moment.utc(this._a) : moment(this._a)).toArray()) > 0;
	            }

	            return false;
	        },

	        parsingFlags: function parsingFlags() {
	            return extend({}, this._pf);
	        },

	        invalidAt: function invalidAt() {
	            return this._pf.overflow;
	        },

	        utc: function utc(keepLocalTime) {
	            return this.utcOffset(0, keepLocalTime);
	        },

	        local: function local(keepLocalTime) {
	            if (this._isUTC) {
	                this.utcOffset(0, keepLocalTime);
	                this._isUTC = false;

	                if (keepLocalTime) {
	                    this.subtract(this._dateUtcOffset(), 'm');
	                }
	            }
	            return this;
	        },

	        format: function format(inputString) {
	            var output = formatMoment(this, inputString || moment.defaultFormat);
	            return this.localeData().postformat(output);
	        },

	        add: createAdder(1, 'add'),

	        subtract: createAdder(-1, 'subtract'),

	        diff: function diff(input, units, asFloat) {
	            var that = makeAs(input, this),
	                zoneDiff = (that.utcOffset() - this.utcOffset()) * 60000,
	                anchor,
	                diff,
	                output,
	                daysAdjust;

	            units = normalizeUnits(units);

	            if (units === 'year' || units === 'month' || units === 'quarter') {
	                output = monthDiff(this, that);
	                if (units === 'quarter') {
	                    output = output / 3;
	                } else if (units === 'year') {
	                    output = output / 12;
	                }
	            } else {
	                diff = this - that;
	                output = units === 'second' ? diff / 1000 : // 1000
	                units === 'minute' ? diff / 60000 : // 1000 * 60
	                units === 'hour' ? diff / 3600000 : // 1000 * 60 * 60
	                units === 'day' ? (diff - zoneDiff) / 86400000 : // 1000 * 60 * 60 * 24, negate dst
	                units === 'week' ? (diff - zoneDiff) / 604800000 : // 1000 * 60 * 60 * 24 * 7, negate dst
	                diff;
	            }
	            return asFloat ? output : absRound(output);
	        },

	        from: function from(time, withoutSuffix) {
	            return moment.duration({ to: this, from: time }).locale(this.locale()).humanize(!withoutSuffix);
	        },

	        fromNow: function fromNow(withoutSuffix) {
	            return this.from(moment(), withoutSuffix);
	        },

	        calendar: function calendar(time) {
	            // We want to compare the start of today, vs this.
	            // Getting start-of-today depends on whether we're locat/utc/offset
	            // or not.
	            var now = time || moment(),
	                sod = makeAs(now, this).startOf('day'),
	                diff = this.diff(sod, 'days', true),
	                format = diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';
	            return this.format(this.localeData().calendar(format, this, moment(now)));
	        },

	        isLeapYear: function isLeapYear() {
	            return _isLeapYear(this.year());
	        },

	        isDST: function isDST() {
	            return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();
	        },

	        day: function day(input) {
	            var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
	            if (input != null) {
	                input = parseWeekday(input, this.localeData());
	                return this.add(input - day, 'd');
	            } else {
	                return day;
	            }
	        },

	        month: makeAccessor('Month', true),

	        startOf: function startOf(units) {
	            units = normalizeUnits(units);
	            // the following switch intentionally omits break keywords
	            // to utilize falling through the cases.
	            switch (units) {
	                case 'year':
	                    this.month(0);
	                /* falls through */
	                case 'quarter':
	                case 'month':
	                    this.date(1);
	                /* falls through */
	                case 'week':
	                case 'isoWeek':
	                case 'day':
	                    this.hours(0);
	                /* falls through */
	                case 'hour':
	                    this.minutes(0);
	                /* falls through */
	                case 'minute':
	                    this.seconds(0);
	                /* falls through */
	                case 'second':
	                    this.milliseconds(0);
	                    /* falls through */
	            }

	            // weeks are a special case
	            if (units === 'week') {
	                this.weekday(0);
	            } else if (units === 'isoWeek') {
	                this.isoWeekday(1);
	            }

	            // quarters are also special
	            if (units === 'quarter') {
	                this.month(Math.floor(this.month() / 3) * 3);
	            }

	            return this;
	        },

	        endOf: function endOf(units) {
	            units = normalizeUnits(units);
	            if (units === undefined || units === 'millisecond') {
	                return this;
	            }
	            return this.startOf(units).add(1, units === 'isoWeek' ? 'week' : units).subtract(1, 'ms');
	        },

	        isAfter: function isAfter(input, units) {
	            var inputMs;
	            units = normalizeUnits(typeof units !== 'undefined' ? units : 'millisecond');
	            if (units === 'millisecond') {
	                input = moment.isMoment(input) ? input : moment(input);
	                return +this > +input;
	            } else {
	                inputMs = moment.isMoment(input) ? +input : +moment(input);
	                return inputMs < +this.clone().startOf(units);
	            }
	        },

	        isBefore: function isBefore(input, units) {
	            var inputMs;
	            units = normalizeUnits(typeof units !== 'undefined' ? units : 'millisecond');
	            if (units === 'millisecond') {
	                input = moment.isMoment(input) ? input : moment(input);
	                return +this < +input;
	            } else {
	                inputMs = moment.isMoment(input) ? +input : +moment(input);
	                return +this.clone().endOf(units) < inputMs;
	            }
	        },

	        isBetween: function isBetween(from, to, units) {
	            return this.isAfter(from, units) && this.isBefore(to, units);
	        },

	        isSame: function isSame(input, units) {
	            var inputMs;
	            units = normalizeUnits(units || 'millisecond');
	            if (units === 'millisecond') {
	                input = moment.isMoment(input) ? input : moment(input);
	                return +this === +input;
	            } else {
	                inputMs = +moment(input);
	                return +this.clone().startOf(units) <= inputMs && inputMs <= +this.clone().endOf(units);
	            }
	        },

	        min: deprecate('moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548', function (other) {
	            other = moment.apply(null, arguments);
	            return other < this ? this : other;
	        }),

	        max: deprecate('moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548', function (other) {
	            other = moment.apply(null, arguments);
	            return other > this ? this : other;
	        }),

	        zone: deprecate('moment().zone is deprecated, use moment().utcOffset instead. ' + 'https://github.com/moment/moment/issues/1779', function (input, keepLocalTime) {
	            if (input != null) {
	                if (typeof input !== 'string') {
	                    input = -input;
	                }

	                this.utcOffset(input, keepLocalTime);

	                return this;
	            } else {
	                return -this.utcOffset();
	            }
	        }),

	        // keepLocalTime = true means only change the timezone, without
	        // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
	        // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
	        // +0200, so we adjust the time as needed, to be valid.
	        //
	        // Keeping the time actually adds/subtracts (one hour)
	        // from the actual represented time. That is why we call updateOffset
	        // a second time. In case it wants us to change the offset again
	        // _changeInProgress == true case, then we have to adjust, because
	        // there is no such time in the given timezone.
	        utcOffset: function utcOffset(input, keepLocalTime) {
	            var offset = this._offset || 0,
	                localAdjust;
	            if (input != null) {
	                if (typeof input === 'string') {
	                    input = utcOffsetFromString(input);
	                }
	                if (Math.abs(input) < 16) {
	                    input = input * 60;
	                }
	                if (!this._isUTC && keepLocalTime) {
	                    localAdjust = this._dateUtcOffset();
	                }
	                this._offset = input;
	                this._isUTC = true;
	                if (localAdjust != null) {
	                    this.add(localAdjust, 'm');
	                }
	                if (offset !== input) {
	                    if (!keepLocalTime || this._changeInProgress) {
	                        addOrSubtractDurationFromMoment(this, moment.duration(input - offset, 'm'), 1, false);
	                    } else if (!this._changeInProgress) {
	                        this._changeInProgress = true;
	                        moment.updateOffset(this, true);
	                        this._changeInProgress = null;
	                    }
	                }

	                return this;
	            } else {
	                return this._isUTC ? offset : this._dateUtcOffset();
	            }
	        },

	        isLocal: function isLocal() {
	            return !this._isUTC;
	        },

	        isUtcOffset: function isUtcOffset() {
	            return this._isUTC;
	        },

	        isUtc: function isUtc() {
	            return this._isUTC && this._offset === 0;
	        },

	        zoneAbbr: function zoneAbbr() {
	            return this._isUTC ? 'UTC' : '';
	        },

	        zoneName: function zoneName() {
	            return this._isUTC ? 'Coordinated Universal Time' : '';
	        },

	        parseZone: function parseZone() {
	            if (this._tzm) {
	                this.utcOffset(this._tzm);
	            } else if (typeof this._i === 'string') {
	                this.utcOffset(utcOffsetFromString(this._i));
	            }
	            return this;
	        },

	        hasAlignedHourOffset: function hasAlignedHourOffset(input) {
	            if (!input) {
	                input = 0;
	            } else {
	                input = moment(input).utcOffset();
	            }

	            return (this.utcOffset() - input) % 60 === 0;
	        },

	        daysInMonth: function daysInMonth() {
	            return _daysInMonth(this.year(), this.month());
	        },

	        dayOfYear: function dayOfYear(input) {
	            var dayOfYear = round((moment(this).startOf('day') - moment(this).startOf('year')) / 86400000) + 1;
	            return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');
	        },

	        quarter: function quarter(input) {
	            return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
	        },

	        weekYear: function weekYear(input) {
	            var year = weekOfYear(this, this.localeData()._week.dow, this.localeData()._week.doy).year;
	            return input == null ? year : this.add(input - year, 'y');
	        },

	        isoWeekYear: function isoWeekYear(input) {
	            var year = weekOfYear(this, 1, 4).year;
	            return input == null ? year : this.add(input - year, 'y');
	        },

	        week: function week(input) {
	            var week = this.localeData().week(this);
	            return input == null ? week : this.add((input - week) * 7, 'd');
	        },

	        isoWeek: function isoWeek(input) {
	            var week = weekOfYear(this, 1, 4).week;
	            return input == null ? week : this.add((input - week) * 7, 'd');
	        },

	        weekday: function weekday(input) {
	            var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
	            return input == null ? weekday : this.add(input - weekday, 'd');
	        },

	        isoWeekday: function isoWeekday(input) {
	            // behaves the same as moment#day except
	            // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
	            // as a setter, sunday should belong to the previous week.
	            return input == null ? this.day() || 7 : this.day(this.day() % 7 ? input : input - 7);
	        },

	        isoWeeksInYear: function isoWeeksInYear() {
	            return _weeksInYear(this.year(), 1, 4);
	        },

	        weeksInYear: function weeksInYear() {
	            var weekInfo = this.localeData()._week;
	            return _weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
	        },

	        get: function get(units) {
	            units = normalizeUnits(units);
	            return this[units]();
	        },

	        set: function set(units, value) {
	            var unit;
	            if (typeof units === 'object') {
	                for (unit in units) {
	                    this.set(unit, units[unit]);
	                }
	            } else {
	                units = normalizeUnits(units);
	                if (typeof this[units] === 'function') {
	                    this[units](value);
	                }
	            }
	            return this;
	        },

	        // If passed a locale key, it will set the locale for this
	        // instance.  Otherwise, it will return the locale configuration
	        // variables for this instance.
	        locale: function locale(key) {
	            var newLocaleData;

	            if (key === undefined) {
	                return this._locale._abbr;
	            } else {
	                newLocaleData = moment.localeData(key);
	                if (newLocaleData != null) {
	                    this._locale = newLocaleData;
	                }
	                return this;
	            }
	        },

	        lang: deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {
	            if (key === undefined) {
	                return this.localeData();
	            } else {
	                return this.locale(key);
	            }
	        }),

	        localeData: function localeData() {
	            return this._locale;
	        },

	        _dateUtcOffset: function _dateUtcOffset() {
	            // On Firefox.24 Date#getTimezoneOffset returns a floating point.
	            // https://github.com/moment/moment/pull/1871
	            return -Math.round(this._d.getTimezoneOffset() / 15) * 15;
	        }

	    });

	    function rawMonthSetter(mom, value) {
	        var dayOfMonth;

	        // TODO: Move this out of here!
	        if (typeof value === 'string') {
	            value = mom.localeData().monthsParse(value);
	            // TODO: Another silent failure?
	            if (typeof value !== 'number') {
	                return mom;
	            }
	        }

	        dayOfMonth = Math.min(mom.date(), _daysInMonth(mom.year(), value));
	        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
	        return mom;
	    }

	    function rawGetter(mom, unit) {
	        return mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]();
	    }

	    function rawSetter(mom, unit, value) {
	        if (unit === 'Month') {
	            return rawMonthSetter(mom, value);
	        } else {
	            return mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
	        }
	    }

	    function makeAccessor(unit, keepTime) {
	        return function (value) {
	            if (value != null) {
	                rawSetter(this, unit, value);
	                moment.updateOffset(this, keepTime);
	                return this;
	            } else {
	                return rawGetter(this, unit);
	            }
	        };
	    }

	    moment.fn.millisecond = moment.fn.milliseconds = makeAccessor('Milliseconds', false);
	    moment.fn.second = moment.fn.seconds = makeAccessor('Seconds', false);
	    moment.fn.minute = moment.fn.minutes = makeAccessor('Minutes', false);
	    // Setting the hour should keep the time, because the user explicitly
	    // specified which hour he wants. So trying to maintain the same hour (in
	    // a new timezone) makes sense. Adding/subtracting hours does not follow
	    // this rule.
	    moment.fn.hour = moment.fn.hours = makeAccessor('Hours', true);
	    // moment.fn.month is defined separately
	    moment.fn.date = makeAccessor('Date', true);
	    moment.fn.dates = deprecate('dates accessor is deprecated. Use date instead.', makeAccessor('Date', true));
	    moment.fn.year = makeAccessor('FullYear', true);
	    moment.fn.years = deprecate('years accessor is deprecated. Use year instead.', makeAccessor('FullYear', true));

	    // add plural methods
	    moment.fn.days = moment.fn.day;
	    moment.fn.months = moment.fn.month;
	    moment.fn.weeks = moment.fn.week;
	    moment.fn.isoWeeks = moment.fn.isoWeek;
	    moment.fn.quarters = moment.fn.quarter;

	    // add aliased format methods
	    moment.fn.toJSON = moment.fn.toISOString;

	    // alias isUtc for dev-friendliness
	    moment.fn.isUTC = moment.fn.isUtc;

	    /************************************
	        Duration Prototype
	    ************************************/

	    function daysToYears(days) {
	        // 400 years have 146097 days (taking into account leap year rules)
	        return days * 400 / 146097;
	    }

	    function yearsToDays(years) {
	        // years * 365 + absRound(years / 4) -
	        //     absRound(years / 100) + absRound(years / 400);
	        return years * 146097 / 400;
	    }

	    extend(moment.duration.fn = Duration.prototype, {

	        _bubble: function _bubble() {
	            var milliseconds = this._milliseconds,
	                days = this._days,
	                months = this._months,
	                data = this._data,
	                seconds,
	                minutes,
	                hours,
	                years = 0;

	            // The following code bubbles up values, see the tests for
	            // examples of what that means.
	            data.milliseconds = milliseconds % 1000;

	            seconds = absRound(milliseconds / 1000);
	            data.seconds = seconds % 60;

	            minutes = absRound(seconds / 60);
	            data.minutes = minutes % 60;

	            hours = absRound(minutes / 60);
	            data.hours = hours % 24;

	            days += absRound(hours / 24);

	            // Accurately convert days to years, assume start from year 0.
	            years = absRound(daysToYears(days));
	            days -= absRound(yearsToDays(years));

	            // 30 days to a month
	            // TODO (iskren): Use anchor date (like 1st Jan) to compute this.
	            months += absRound(days / 30);
	            days %= 30;

	            // 12 months -> 1 year
	            years += absRound(months / 12);
	            months %= 12;

	            data.days = days;
	            data.months = months;
	            data.years = years;
	        },

	        abs: function abs() {
	            this._milliseconds = Math.abs(this._milliseconds);
	            this._days = Math.abs(this._days);
	            this._months = Math.abs(this._months);

	            this._data.milliseconds = Math.abs(this._data.milliseconds);
	            this._data.seconds = Math.abs(this._data.seconds);
	            this._data.minutes = Math.abs(this._data.minutes);
	            this._data.hours = Math.abs(this._data.hours);
	            this._data.months = Math.abs(this._data.months);
	            this._data.years = Math.abs(this._data.years);

	            return this;
	        },

	        weeks: function weeks() {
	            return absRound(this.days() / 7);
	        },

	        valueOf: function valueOf() {
	            return this._milliseconds + this._days * 86400000 + this._months % 12 * 2592000000 + toInt(this._months / 12) * 31536000000;
	        },

	        humanize: function humanize(withSuffix) {
	            var output = relativeTime(this, !withSuffix, this.localeData());

	            if (withSuffix) {
	                output = this.localeData().pastFuture(+this, output);
	            }

	            return this.localeData().postformat(output);
	        },

	        add: function add(input, val) {
	            // supports only 2.0-style add(1, 's') or add(moment)
	            var dur = moment.duration(input, val);

	            this._milliseconds += dur._milliseconds;
	            this._days += dur._days;
	            this._months += dur._months;

	            this._bubble();

	            return this;
	        },

	        subtract: function subtract(input, val) {
	            var dur = moment.duration(input, val);

	            this._milliseconds -= dur._milliseconds;
	            this._days -= dur._days;
	            this._months -= dur._months;

	            this._bubble();

	            return this;
	        },

	        get: function get(units) {
	            units = normalizeUnits(units);
	            return this[units.toLowerCase() + 's']();
	        },

	        as: function as(units) {
	            var days, months;
	            units = normalizeUnits(units);

	            if (units === 'month' || units === 'year') {
	                days = this._days + this._milliseconds / 86400000;
	                months = this._months + daysToYears(days) * 12;
	                return units === 'month' ? months : months / 12;
	            } else {
	                // handle milliseconds separately because of floating point math errors (issue #1867)
	                days = this._days + Math.round(yearsToDays(this._months / 12));
	                switch (units) {
	                    case 'week':
	                        return days / 7 + this._milliseconds / 604800000;
	                    case 'day':
	                        return days + this._milliseconds / 86400000;
	                    case 'hour':
	                        return days * 24 + this._milliseconds / 3600000;
	                    case 'minute':
	                        return days * 24 * 60 + this._milliseconds / 60000;
	                    case 'second':
	                        return days * 24 * 60 * 60 + this._milliseconds / 1000;
	                    // Math.floor prevents floating point math errors here
	                    case 'millisecond':
	                        return Math.floor(days * 24 * 60 * 60 * 1000) + this._milliseconds;
	                    default:
	                        throw new Error('Unknown unit ' + units);
	                }
	            }
	        },

	        lang: moment.fn.lang,
	        locale: moment.fn.locale,

	        toIsoString: deprecate('toIsoString() is deprecated. Please use toISOString() instead ' + '(notice the capitals)', function () {
	            return this.toISOString();
	        }),

	        toISOString: function toISOString() {
	            // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
	            var years = Math.abs(this.years()),
	                months = Math.abs(this.months()),
	                days = Math.abs(this.days()),
	                hours = Math.abs(this.hours()),
	                minutes = Math.abs(this.minutes()),
	                seconds = Math.abs(this.seconds() + this.milliseconds() / 1000);

	            if (!this.asSeconds()) {
	                // this is the same as C#'s (Noda) and python (isodate)...
	                // but not other JS (goog.date)
	                return 'P0D';
	            }

	            return (this.asSeconds() < 0 ? '-' : '') + 'P' + (years ? years + 'Y' : '') + (months ? months + 'M' : '') + (days ? days + 'D' : '') + (hours || minutes || seconds ? 'T' : '') + (hours ? hours + 'H' : '') + (minutes ? minutes + 'M' : '') + (seconds ? seconds + 'S' : '');
	        },

	        localeData: function localeData() {
	            return this._locale;
	        },

	        toJSON: function toJSON() {
	            return this.toISOString();
	        }
	    });

	    moment.duration.fn.toString = moment.duration.fn.toISOString;

	    function makeDurationGetter(name) {
	        moment.duration.fn[name] = function () {
	            return this._data[name];
	        };
	    }

	    for (i in unitMillisecondFactors) {
	        if (hasOwnProp(unitMillisecondFactors, i)) {
	            makeDurationGetter(i.toLowerCase());
	        }
	    }

	    moment.duration.fn.asMilliseconds = function () {
	        return this.as('ms');
	    };
	    moment.duration.fn.asSeconds = function () {
	        return this.as('s');
	    };
	    moment.duration.fn.asMinutes = function () {
	        return this.as('m');
	    };
	    moment.duration.fn.asHours = function () {
	        return this.as('h');
	    };
	    moment.duration.fn.asDays = function () {
	        return this.as('d');
	    };
	    moment.duration.fn.asWeeks = function () {
	        return this.as('weeks');
	    };
	    moment.duration.fn.asMonths = function () {
	        return this.as('M');
	    };
	    moment.duration.fn.asYears = function () {
	        return this.as('y');
	    };

	    /************************************
	        Default Locale
	    ************************************/

	    // Set default locale, other locale will inherit from English.
	    moment.locale('en', {
	        ordinalParse: /\d{1,2}(th|st|nd|rd)/,
	        ordinal: function ordinal(number) {
	            var b = number % 10,
	                output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';
	            return number + output;
	        }
	    });

	    /* EMBED_LOCALES */

	    /************************************
	        Exposing Moment
	    ************************************/

	    function makeGlobal(shouldDeprecate) {
	        /*global ender:false */
	        if (typeof ender !== 'undefined') {
	            return;
	        }
	        oldGlobalMoment = globalScope.moment;
	        if (shouldDeprecate) {
	            globalScope.moment = deprecate('Accessing Moment through the global scope is ' + 'deprecated, and will be removed in an upcoming ' + 'release.', moment);
	        } else {
	            globalScope.moment = moment;
	        }
	    }

	    // CommonJS module is defined
	    if (hasModule) {
	        module.exports = moment;
	    } else if (true) {
	        !(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {
	            if (module.config && module.config() && module.config().noGlobal === true) {
	                // release the global variable
	                globalScope.moment = oldGlobalMoment;
	            }

	            return moment;
	        }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	        makeGlobal(true);
	    } else {
	        makeGlobal();
	    }
	}).call(undefined);
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(132)(module)))

/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.

	'use strict';

	var formatRegExp = /%[sdj%]/g;
	exports.format = function (f) {
	  if (!isString(f)) {
	    var objects = [];
	    for (var i = 0; i < arguments.length; i++) {
	      objects.push(inspect(arguments[i]));
	    }
	    return objects.join(' ');
	  }

	  var i = 1;
	  var args = arguments;
	  var len = args.length;
	  var str = String(f).replace(formatRegExp, function (x) {
	    if (x === '%%') return '%';
	    if (i >= len) return x;
	    switch (x) {
	      case '%s':
	        return String(args[i++]);
	      case '%d':
	        return Number(args[i++]);
	      case '%j':
	        try {
	          return JSON.stringify(args[i++]);
	        } catch (_) {
	          return '[Circular]';
	        }
	      default:
	        return x;
	    }
	  });
	  for (var x = args[i]; i < len; x = args[++i]) {
	    if (isNull(x) || !isObject(x)) {
	      str += ' ' + x;
	    } else {
	      str += ' ' + inspect(x);
	    }
	  }
	  return str;
	};

	// Mark that a method should not be used.
	// Returns a modified function which warns once by default.
	// If --no-deprecation is set, then it is a no-op.
	exports.deprecate = function (fn, msg) {
	  // Allow for deprecating things in the process of starting up.
	  if (isUndefined(global.process)) {
	    return function () {
	      return exports.deprecate(fn, msg).apply(this, arguments);
	    };
	  }

	  if (process.noDeprecation === true) {
	    return fn;
	  }

	  var warned = false;
	  function deprecated() {
	    if (!warned) {
	      if (process.throwDeprecation) {
	        throw new Error(msg);
	      } else if (process.traceDeprecation) {
	        console.trace(msg);
	      } else {
	        console.error(msg);
	      }
	      warned = true;
	    }
	    return fn.apply(this, arguments);
	  }

	  return deprecated;
	};

	var debugs = {};
	var debugEnviron;
	exports.debuglog = function (set) {
	  if (isUndefined(debugEnviron)) debugEnviron = process.env.NODE_DEBUG || '';
	  set = set.toUpperCase();
	  if (!debugs[set]) {
	    if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
	      var pid = process.pid;
	      debugs[set] = function () {
	        var msg = exports.format.apply(exports, arguments);
	        console.error('%s %d: %s', set, pid, msg);
	      };
	    } else {
	      debugs[set] = function () {};
	    }
	  }
	  return debugs[set];
	};

	/**
	 * Echos the value of a value. Trys to print the value out
	 * in the best way possible given the different types.
	 *
	 * @param {Object} obj The object to print out.
	 * @param {Object} opts Optional options object that alters the output.
	 */
	/* legacy: obj, showHidden, depth, colors*/
	function inspect(obj, opts) {
	  // default options
	  var ctx = {
	    seen: [],
	    stylize: stylizeNoColor
	  };
	  // legacy...
	  if (arguments.length >= 3) ctx.depth = arguments[2];
	  if (arguments.length >= 4) ctx.colors = arguments[3];
	  if (isBoolean(opts)) {
	    // legacy...
	    ctx.showHidden = opts;
	  } else if (opts) {
	    // got an "options" object
	    exports._extend(ctx, opts);
	  }
	  // set default options
	  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
	  if (isUndefined(ctx.depth)) ctx.depth = 2;
	  if (isUndefined(ctx.colors)) ctx.colors = false;
	  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
	  if (ctx.colors) ctx.stylize = stylizeWithColor;
	  return formatValue(ctx, obj, ctx.depth);
	}
	exports.inspect = inspect;

	// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
	inspect.colors = {
	  'bold': [1, 22],
	  'italic': [3, 23],
	  'underline': [4, 24],
	  'inverse': [7, 27],
	  'white': [37, 39],
	  'grey': [90, 39],
	  'black': [30, 39],
	  'blue': [34, 39],
	  'cyan': [36, 39],
	  'green': [32, 39],
	  'magenta': [35, 39],
	  'red': [31, 39],
	  'yellow': [33, 39]
	};

	// Don't use 'blue' not visible on cmd.exe
	inspect.styles = {
	  'special': 'cyan',
	  'number': 'yellow',
	  'boolean': 'yellow',
	  'undefined': 'grey',
	  'null': 'bold',
	  'string': 'green',
	  'date': 'magenta',
	  // "name": intentionally not styling
	  'regexp': 'red'
	};

	function stylizeWithColor(str, styleType) {
	  var style = inspect.styles[styleType];

	  if (style) {
	    return '\u001b[' + inspect.colors[style][0] + 'm' + str + '\u001b[' + inspect.colors[style][1] + 'm';
	  } else {
	    return str;
	  }
	}

	function stylizeNoColor(str, styleType) {
	  return str;
	}

	function arrayToHash(array) {
	  var hash = {};

	  array.forEach(function (val, idx) {
	    hash[val] = true;
	  });

	  return hash;
	}

	function formatValue(ctx, value, recurseTimes) {
	  // Provide a hook for user-specified inspect functions.
	  // Check that value is an object with an inspect function on it
	  if (ctx.customInspect && value && isFunction(value.inspect) &&
	  // Filter out the util module, it's inspect function is special
	  value.inspect !== exports.inspect &&
	  // Also filter out any prototype objects using the circular check.
	  !(value.constructor && value.constructor.prototype === value)) {
	    var ret = value.inspect(recurseTimes, ctx);
	    if (!isString(ret)) {
	      ret = formatValue(ctx, ret, recurseTimes);
	    }
	    return ret;
	  }

	  // Primitive types cannot have properties
	  var primitive = formatPrimitive(ctx, value);
	  if (primitive) {
	    return primitive;
	  }

	  // Look up the keys of the object.
	  var keys = Object.keys(value);
	  var visibleKeys = arrayToHash(keys);

	  if (ctx.showHidden) {
	    keys = Object.getOwnPropertyNames(value);
	  }

	  // IE doesn't make error fields non-enumerable
	  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
	  if (isError(value) && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
	    return formatError(value);
	  }

	  // Some type of object without properties can be shortcutted.
	  if (keys.length === 0) {
	    if (isFunction(value)) {
	      var name = value.name ? ': ' + value.name : '';
	      return ctx.stylize('[Function' + name + ']', 'special');
	    }
	    if (isRegExp(value)) {
	      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
	    }
	    if (isDate(value)) {
	      return ctx.stylize(Date.prototype.toString.call(value), 'date');
	    }
	    if (isError(value)) {
	      return formatError(value);
	    }
	  }

	  var base = '',
	      array = false,
	      braces = ['{', '}'];

	  // Make Array say that they are Array
	  if (isArray(value)) {
	    array = true;
	    braces = ['[', ']'];
	  }

	  // Make functions say that they are functions
	  if (isFunction(value)) {
	    var n = value.name ? ': ' + value.name : '';
	    base = ' [Function' + n + ']';
	  }

	  // Make RegExps say that they are RegExps
	  if (isRegExp(value)) {
	    base = ' ' + RegExp.prototype.toString.call(value);
	  }

	  // Make dates with properties first say the date
	  if (isDate(value)) {
	    base = ' ' + Date.prototype.toUTCString.call(value);
	  }

	  // Make error with message first say the error
	  if (isError(value)) {
	    base = ' ' + formatError(value);
	  }

	  if (keys.length === 0 && (!array || value.length == 0)) {
	    return braces[0] + base + braces[1];
	  }

	  if (recurseTimes < 0) {
	    if (isRegExp(value)) {
	      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
	    } else {
	      return ctx.stylize('[Object]', 'special');
	    }
	  }

	  ctx.seen.push(value);

	  var output;
	  if (array) {
	    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
	  } else {
	    output = keys.map(function (key) {
	      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
	    });
	  }

	  ctx.seen.pop();

	  return reduceToSingleString(output, base, braces);
	}

	function formatPrimitive(ctx, value) {
	  if (isUndefined(value)) return ctx.stylize('undefined', 'undefined');
	  if (isString(value)) {
	    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '').replace(/'/g, '\\\'').replace(/\\"/g, '"') + '\'';
	    return ctx.stylize(simple, 'string');
	  }
	  if (isNumber(value)) return ctx.stylize('' + value, 'number');
	  if (isBoolean(value)) return ctx.stylize('' + value, 'boolean');
	  // For some reason typeof null is "object", so special case here.
	  if (isNull(value)) return ctx.stylize('null', 'null');
	}

	function formatError(value) {
	  return '[' + Error.prototype.toString.call(value) + ']';
	}

	function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
	  var output = [];
	  for (var i = 0, l = value.length; i < l; ++i) {
	    if (hasOwnProperty(value, String(i))) {
	      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, String(i), true));
	    } else {
	      output.push('');
	    }
	  }
	  keys.forEach(function (key) {
	    if (!key.match(/^\d+$/)) {
	      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, key, true));
	    }
	  });
	  return output;
	}

	function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
	  var name, str, desc;
	  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
	  if (desc.get) {
	    if (desc.set) {
	      str = ctx.stylize('[Getter/Setter]', 'special');
	    } else {
	      str = ctx.stylize('[Getter]', 'special');
	    }
	  } else {
	    if (desc.set) {
	      str = ctx.stylize('[Setter]', 'special');
	    }
	  }
	  if (!hasOwnProperty(visibleKeys, key)) {
	    name = '[' + key + ']';
	  }
	  if (!str) {
	    if (ctx.seen.indexOf(desc.value) < 0) {
	      if (isNull(recurseTimes)) {
	        str = formatValue(ctx, desc.value, null);
	      } else {
	        str = formatValue(ctx, desc.value, recurseTimes - 1);
	      }
	      if (str.indexOf('\n') > -1) {
	        if (array) {
	          str = str.split('\n').map(function (line) {
	            return '  ' + line;
	          }).join('\n').substr(2);
	        } else {
	          str = '\n' + str.split('\n').map(function (line) {
	            return '   ' + line;
	          }).join('\n');
	        }
	      }
	    } else {
	      str = ctx.stylize('[Circular]', 'special');
	    }
	  }
	  if (isUndefined(name)) {
	    if (array && key.match(/^\d+$/)) {
	      return str;
	    }
	    name = JSON.stringify('' + key);
	    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
	      name = name.substr(1, name.length - 2);
	      name = ctx.stylize(name, 'name');
	    } else {
	      name = name.replace(/'/g, '\\\'').replace(/\\"/g, '"').replace(/(^"|"$)/g, '\'');
	      name = ctx.stylize(name, 'string');
	    }
	  }

	  return name + ': ' + str;
	}

	function reduceToSingleString(output, base, braces) {
	  var numLinesEst = 0;
	  var length = output.reduce(function (prev, cur) {
	    numLinesEst++;
	    if (cur.indexOf('\n') >= 0) numLinesEst++;
	    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
	  }, 0);

	  if (length > 60) {
	    return braces[0] + (base === '' ? '' : base + '\n ') + ' ' + output.join(',\n  ') + ' ' + braces[1];
	  }

	  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
	}

	// NOTE: These type checking functions intentionally don't use `instanceof`
	// because it is fragile and can be easily faked with `Object.create()`.
	function isArray(ar) {
	  return Array.isArray(ar);
	}
	exports.isArray = isArray;

	function isBoolean(arg) {
	  return typeof arg === 'boolean';
	}
	exports.isBoolean = isBoolean;

	function isNull(arg) {
	  return arg === null;
	}
	exports.isNull = isNull;

	function isNullOrUndefined(arg) {
	  return arg == null;
	}
	exports.isNullOrUndefined = isNullOrUndefined;

	function isNumber(arg) {
	  return typeof arg === 'number';
	}
	exports.isNumber = isNumber;

	function isString(arg) {
	  return typeof arg === 'string';
	}
	exports.isString = isString;

	function isSymbol(arg) {
	  return typeof arg === 'symbol';
	}
	exports.isSymbol = isSymbol;

	function isUndefined(arg) {
	  return arg === void 0;
	}
	exports.isUndefined = isUndefined;

	function isRegExp(re) {
	  return isObject(re) && objectToString(re) === '[object RegExp]';
	}
	exports.isRegExp = isRegExp;

	function isObject(arg) {
	  return typeof arg === 'object' && arg !== null;
	}
	exports.isObject = isObject;

	function isDate(d) {
	  return isObject(d) && objectToString(d) === '[object Date]';
	}
	exports.isDate = isDate;

	function isError(e) {
	  return isObject(e) && (objectToString(e) === '[object Error]' || e instanceof Error);
	}
	exports.isError = isError;

	function isFunction(arg) {
	  return typeof arg === 'function';
	}
	exports.isFunction = isFunction;

	function isPrimitive(arg) {
	  return arg === null || typeof arg === 'boolean' || typeof arg === 'number' || typeof arg === 'string' || typeof arg === 'symbol' || // ES6 symbol
	  typeof arg === 'undefined';
	}
	exports.isPrimitive = isPrimitive;

	exports.isBuffer = __webpack_require__(50);

	function objectToString(o) {
	  return Object.prototype.toString.call(o);
	}

	function pad(n) {
	  return n < 10 ? '0' + n.toString(10) : n.toString(10);
	}

	var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];

	// 26 Feb 16:19:34
	function timestamp() {
	  var d = new Date();
	  var time = [pad(d.getHours()), pad(d.getMinutes()), pad(d.getSeconds())].join(':');
	  return [d.getDate(), months[d.getMonth()], time].join(' ');
	}

	// log is just a thin wrapper to console.log that prepends a timestamp
	exports.log = function () {
	  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
	};

	/**
	 * Inherit the prototype methods from one constructor into another.
	 *
	 * The Function.prototype.inherits from lang.js rewritten as a standalone
	 * function (not on Function.prototype). NOTE: If this file is to be loaded
	 * during bootstrapping this function needs to be rewritten using some native
	 * functions as prototype setup using normal JavaScript does not work as
	 * expected during bootstrapping (see mirror.js in r114903).
	 *
	 * @param {function} ctor Constructor function which needs to inherit the
	 *     prototype.
	 * @param {function} superCtor Constructor function to inherit prototype from.
	 */
	exports.inherits = __webpack_require__(141);

	exports._extend = function (origin, add) {
	  // Don't do anything if add isn't an object
	  if (!add || !isObject(add)) return origin;

	  var keys = Object.keys(add);
	  var i = keys.length;
	  while (i--) {
	    origin[keys[i]] = add[keys[i]];
	  }
	  return origin;
	};

	function hasOwnProperty(obj, prop) {
	  return Object.prototype.hasOwnProperty.call(obj, prop);
	}
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(131)))

/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(27);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(46)(content, {});
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		module.hot.accept("!!/Users/pmurphy/Code/esnet-react-charts/node_modules/css-loader/index.js!/Users/pmurphy/Code/esnet-react-charts/lib/components/barchart.css", function() {
			var newContent = require("!!/Users/pmurphy/Code/esnet-react-charts/node_modules/css-loader/index.js!/Users/pmurphy/Code/esnet-react-charts/lib/components/barchart.css");
			if(typeof newContent === 'string') newContent = [module.id, newContent, ''];
			update(newContent);
		});
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(48)();
	exports.push([module.id, "/*\n * ESnet React Charts, Copyright (c) 2014, The Regents of the University of\n * California, through Lawrence Berkeley National Laboratory (subject\n * to receipt of any required approvals from the U.S. Dept. of\n * Energy).  All rights reserved.\n *\n * If you have questions about your rights to use or distribute this\n * software, please contact Berkeley Lab's Technology Transfer\n * Department at TTD@lbl.gov.\n *\n * NOTICE.  This software is owned by the U.S. Department of Energy.\n * As such, the U.S. Government has been granted for itself and others\n * acting on its behalf a paid-up, nonexclusive, irrevocable,\n * worldwide license in the Software to reproduce, prepare derivative\n * works, and perform publicly and display publicly.  Beginning five\n * (5) years after the date permission to assert copyright is obtained\n * from the U.S. Department of Energy, and subject to any subsequent\n * five (5) year renewals, the U.S. Government is granted for itself\n * and others acting on its behalf a paid-up, nonexclusive,\n * irrevocable, worldwide license in the Software to reproduce,\n * prepare derivative works, distribute copies to the public, perform\n * publicly and display publicly, and to permit others to do so.\n *\n * This code is distributed under a BSD style license, see the LICENSE\n * file for complete information.\n */\n\n.barchart-rect {\n    fill: steelblue;\n    stroke: none;\n}", ""]);

/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(29);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(46)(content, {});
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		module.hot.accept("!!/Users/pmurphy/Code/esnet-react-charts/node_modules/css-loader/index.js!/Users/pmurphy/Code/esnet-react-charts/lib/components/baseline.css", function() {
			var newContent = require("!!/Users/pmurphy/Code/esnet-react-charts/node_modules/css-loader/index.js!/Users/pmurphy/Code/esnet-react-charts/lib/components/baseline.css");
			if(typeof newContent === 'string') newContent = [module.id, newContent, ''];
			update(newContent);
		});
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(48)();
	exports.push([module.id, "/*\n * ESnet React Charts, Copyright (c) 2014, The Regents of the University of\n * California, through Lawrence Berkeley National Laboratory (subject\n * to receipt of any required approvals from the U.S. Dept. of\n * Energy).  All rights reserved.\n *\n * If you have questions about your rights to use or distribute this\n * software, please contact Berkeley Lab's Technology Transfer\n * Department at TTD@lbl.gov.\n *\n * NOTICE.  This software is owned by the U.S. Department of Energy.\n * As such, the U.S. Government has been granted for itself and others\n * acting on its behalf a paid-up, nonexclusive, irrevocable,\n * worldwide license in the Software to reproduce, prepare derivative\n * works, and perform publicly and display publicly.  Beginning five\n * (5) years after the date permission to assert copyright is obtained\n * from the U.S. Department of Energy, and subject to any subsequent\n * five (5) year renewals, the U.S. Government is granted for itself\n * and others acting on its behalf a paid-up, nonexclusive,\n * irrevocable, worldwide license in the Software to reproduce,\n * prepare derivative works, distribute copies to the public, perform\n * publicly and display publicly, and to permit others to do so.\n *\n * This code is distributed under a BSD style license, see the LICENSE\n * file for complete information.\n */\n\n.baseline {\n    stroke: #626262;\n    stroke-width: 1;\n    stroke-dasharray: 5,3;\n}\n\n.baseline-label {\n    stroke: none;\n    fill: #626262;\n    font-weight: normal;\n    font-size: 10px;\n    display: inline-block;\n    background-color: white;\n}", ""]);

/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(31);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(46)(content, {});
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		module.hot.accept("!!/Users/pmurphy/Code/esnet-react-charts/node_modules/css-loader/index.js!/Users/pmurphy/Code/esnet-react-charts/lib/components/chartcontainer.css", function() {
			var newContent = require("!!/Users/pmurphy/Code/esnet-react-charts/node_modules/css-loader/index.js!/Users/pmurphy/Code/esnet-react-charts/lib/components/chartcontainer.css");
			if(typeof newContent === 'string') newContent = [module.id, newContent, ''];
			update(newContent);
		});
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(48)();
	exports.push([module.id, "/*\n * ESnet React Charts, Copyright (c) 2014, The Regents of the University of\n * California, through Lawrence Berkeley National Laboratory (subject\n * to receipt of any required approvals from the U.S. Dept. of\n * Energy).  All rights reserved.\n *\n * If you have questions about your rights to use or distribute this\n * software, please contact Berkeley Lab's Technology Transfer\n * Department at TTD@lbl.gov.\n *\n * NOTICE.  This software is owned by the U.S. Department of Energy.\n * As such, the U.S. Government has been granted for itself and others\n * acting on its behalf a paid-up, nonexclusive, irrevocable,\n * worldwide license in the Software to reproduce, prepare derivative\n * works, and perform publicly and display publicly.  Beginning five\n * (5) years after the date permission to assert copyright is obtained\n * from the U.S. Department of Energy, and subject to any subsequent\n * five (5) year renewals, the U.S. Government is granted for itself\n * and others acting on its behalf a paid-up, nonexclusive,\n * irrevocable, worldwide license in the Software to reproduce,\n * prepare derivative works, distribute copies to the public, perform\n * publicly and display publicly, and to permit others to do so.\n *\n * This code is distributed under a BSD style license, see the LICENSE\n * file for complete information.\n */\n \n.chartcontainer.timeaxis {\n    border-top-width: 1px;\n    border-top-style: solid;\n    border-top-color: #F7F0F0;\n    padding-left: 5px;\n}\n\n.chartcontainer.chartrow {\n    background: #FFF;\n    padding-top: 5px;\n    padding-left: 5px;\n}\n\n.chartcontainer svg {\n    display:block;\n}", ""]);

/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(33);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(46)(content, {});
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		module.hot.accept("!!/Users/pmurphy/Code/esnet-react-charts/node_modules/css-loader/index.js!/Users/pmurphy/Code/esnet-react-charts/lib/components/eventchart.css", function() {
			var newContent = require("!!/Users/pmurphy/Code/esnet-react-charts/node_modules/css-loader/index.js!/Users/pmurphy/Code/esnet-react-charts/lib/components/eventchart.css");
			if(typeof newContent === 'string') newContent = [module.id, newContent, ''];
			update(newContent);
		});
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(48)();
	exports.push([module.id, "/*\n * ESnet React Charts, Copyright (c) 2014, The Regents of the University of\n * California, through Lawrence Berkeley National Laboratory (subject\n * to receipt of any required approvals from the U.S. Dept. of\n * Energy).  All rights reserved.\n *\n * If you have questions about your rights to use or distribute this\n * software, please contact Berkeley Lab's Technology Transfer\n * Department at TTD@lbl.gov.\n *\n * NOTICE.  This software is owned by the U.S. Department of Energy.\n * As such, the U.S. Government has been granted for itself and others\n * acting on its behalf a paid-up, nonexclusive, irrevocable,\n * worldwide license in the Software to reproduce, prepare derivative\n * works, and perform publicly and display publicly.  Beginning five\n * (5) years after the date permission to assert copyright is obtained\n * from the U.S. Department of Energy, and subject to any subsequent\n * five (5) year renewals, the U.S. Government is granted for itself\n * and others acting on its behalf a paid-up, nonexclusive,\n * irrevocable, worldwide license in the Software to reproduce,\n * prepare derivative works, distribute copies to the public, perform\n * publicly and display publicly, and to permit others to do so.\n *\n * This code is distributed under a BSD style license, see the LICENSE\n * file for complete information.\n */\n \n.eventchart-marker {\n    fill: #E2E2E2;\n}\n\n.eventchart-marker-label {\n    fill: #494949;\n}\n", ""]);

/***/ },
/* 34 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(35);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(46)(content, {});
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		module.hot.accept("!!/Users/pmurphy/Code/esnet-react-charts/node_modules/css-loader/index.js!/Users/pmurphy/Code/esnet-react-charts/lib/components/legend.css", function() {
			var newContent = require("!!/Users/pmurphy/Code/esnet-react-charts/node_modules/css-loader/index.js!/Users/pmurphy/Code/esnet-react-charts/lib/components/legend.css");
			if(typeof newContent === 'string') newContent = [module.id, newContent, ''];
			update(newContent);
		});
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(48)();
	exports.push([module.id, "/*\n * ESnet React Charts, Copyright (c) 2014, The Regents of the University of\n * California, through Lawrence Berkeley National Laboratory (subject\n * to receipt of any required approvals from the U.S. Dept. of\n * Energy).  All rights reserved.\n *\n * If you have questions about your rights to use or distribute this\n * software, please contact Berkeley Lab's Technology Transfer\n * Department at TTD@lbl.gov.\n *\n * NOTICE.  This software is owned by the U.S. Department of Energy.\n * As such, the U.S. Government has been granted for itself and others\n * acting on its behalf a paid-up, nonexclusive, irrevocable,\n * worldwide license in the Software to reproduce, prepare derivative\n * works, and perform publicly and display publicly.  Beginning five\n * (5) years after the date permission to assert copyright is obtained\n * from the U.S. Department of Energy, and subject to any subsequent\n * five (5) year renewals, the U.S. Government is granted for itself\n * and others acting on its behalf a paid-up, nonexclusive,\n * irrevocable, worldwide license in the Software to reproduce,\n * prepare derivative works, distribute copies to the public, perform\n * publicly and display publicly, and to permit others to do so.\n *\n * This code is distributed under a BSD style license, see the LICENSE\n * file for complete information.\n */\n\n.horizontal-legend {\n    list-style: none;\n    padding-left: 0px;\n}\n\n.horizontal-legend .legend-list {\n    float: left;\n    margin-right: 10px;\n}\n\n.horizontal-legend .legend-swatch {\n    float: left; width: 15px;\n    height: 15px;\n    margin: 2px;\n    border-radius: 2px;\n    background: #CCC;\n}\n\n.horizontal-legend .legend-line {\n\tfloat: left;\n\twidth: 15px;\n\theight: 3px;\n\tmargin: 2px;\n\tmargin-top: 8px;\n\tbackground: #CCC;\n}\n\n.horizontal-legend .legend-dot {\n\tfloat: left;\n\twidth: 8px;\n\theight: 8px;\n\tmargin: 2px;\n\tmargin-top: 6px;\n\tborder-radius: 4px;\n\tbackground: #CCC;\n}\n\n.horizontal-legend .legend-label {\n}\n\n", ""]);

/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(37);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(46)(content, {});
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		module.hot.accept("!!/Users/pmurphy/Code/esnet-react-charts/node_modules/css-loader/index.js!/Users/pmurphy/Code/esnet-react-charts/lib/components/linechart.css", function() {
			var newContent = require("!!/Users/pmurphy/Code/esnet-react-charts/node_modules/css-loader/index.js!/Users/pmurphy/Code/esnet-react-charts/lib/components/linechart.css");
			if(typeof newContent === 'string') newContent = [module.id, newContent, ''];
			update(newContent);
		});
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(48)();
	exports.push([module.id, "/*\n * ESnet React Charts, Copyright (c) 2014, The Regents of the University of\n * California, through Lawrence Berkeley National Laboratory (subject\n * to receipt of any required approvals from the U.S. Dept. of\n * Energy).  All rights reserved.\n *\n * If you have questions about your rights to use or distribute this\n * software, please contact Berkeley Lab's Technology Transfer\n * Department at TTD@lbl.gov.\n *\n * NOTICE.  This software is owned by the U.S. Department of Energy.\n * As such, the U.S. Government has been granted for itself and others\n * acting on its behalf a paid-up, nonexclusive, irrevocable,\n * worldwide license in the Software to reproduce, prepare derivative\n * works, and perform publicly and display publicly.  Beginning five\n * (5) years after the date permission to assert copyright is obtained\n * from the U.S. Department of Energy, and subject to any subsequent\n * five (5) year renewals, the U.S. Government is granted for itself\n * and others acting on its behalf a paid-up, nonexclusive,\n * irrevocable, worldwide license in the Software to reproduce,\n * prepare derivative works, distribute copies to the public, perform\n * publicly and display publicly, and to permit others to do so.\n *\n * This code is distributed under a BSD style license, see the LICENSE\n * file for complete information.\n */\n\n/*\n path.linechart-line {\n    fill: none;\n    stroke: #9DA3BD;\n}\n*/", ""]);

/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(39);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(46)(content, {});
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		module.hot.accept("!!/Users/pmurphy/Code/esnet-react-charts/node_modules/css-loader/index.js!/Users/pmurphy/Code/esnet-react-charts/lib/components/scatterchart.css", function() {
			var newContent = require("!!/Users/pmurphy/Code/esnet-react-charts/node_modules/css-loader/index.js!/Users/pmurphy/Code/esnet-react-charts/lib/components/scatterchart.css");
			if(typeof newContent === 'string') newContent = [module.id, newContent, ''];
			update(newContent);
		});
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 39 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(48)();
	exports.push([module.id, "/*\n * ESnet React Charts, Copyright (c) 2014, The Regents of the University of\n * California, through Lawrence Berkeley National Laboratory (subject\n * to receipt of any required approvals from the U.S. Dept. of\n * Energy).  All rights reserved.\n *\n * If you have questions about your rights to use or distribute this\n * software, please contact Berkeley Lab's Technology Transfer\n * Department at TTD@lbl.gov.\n *\n * NOTICE.  This software is owned by the U.S. Department of Energy.\n * As such, the U.S. Government has been granted for itself and others\n * acting on its behalf a paid-up, nonexclusive, irrevocable,\n * worldwide license in the Software to reproduce, prepare derivative\n * works, and perform publicly and display publicly.  Beginning five\n * (5) years after the date permission to assert copyright is obtained\n * from the U.S. Department of Energy, and subject to any subsequent\n * five (5) year renewals, the U.S. Government is granted for itself\n * and others acting on its behalf a paid-up, nonexclusive,\n * irrevocable, worldwide license in the Software to reproduce,\n * prepare derivative works, distribute copies to the public, perform\n * publicly and display publicly, and to permit others to do so.\n *\n * This code is distributed under a BSD style license, see the LICENSE\n * file for complete information.\n */\n\n.scatterchart-point {\n    fill: rgb(31, 119, 180);\n    opacity: 0.7;\n}", ""]);

/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(41);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(46)(content, {});
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		module.hot.accept("!!/Users/pmurphy/Code/esnet-react-charts/node_modules/css-loader/index.js!/Users/pmurphy/Code/esnet-react-charts/lib/components/timeaxis.css", function() {
			var newContent = require("!!/Users/pmurphy/Code/esnet-react-charts/node_modules/css-loader/index.js!/Users/pmurphy/Code/esnet-react-charts/lib/components/timeaxis.css");
			if(typeof newContent === 'string') newContent = [module.id, newContent, ''];
			update(newContent);
		});
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(48)();
	exports.push([module.id, "\n/*\n * ESnet React Charts, Copyright (c) 2014, The Regents of the University of\n * California, through Lawrence Berkeley National Laboratory (subject\n * to receipt of any required approvals from the U.S. Dept. of\n * Energy).  All rights reserved.\n *\n * If you have questions about your rights to use or distribute this\n * software, please contact Berkeley Lab's Technology Transfer\n * Department at TTD@lbl.gov.\n *\n * NOTICE.  This software is owned by the U.S. Department of Energy.\n * As such, the U.S. Government has been granted for itself and others\n * acting on its behalf a paid-up, nonexclusive, irrevocable,\n * worldwide license in the Software to reproduce, prepare derivative\n * works, and perform publicly and display publicly.  Beginning five\n * (5) years after the date permission to assert copyright is obtained\n * from the U.S. Department of Energy, and subject to any subsequent\n * five (5) year renewals, the U.S. Government is granted for itself\n * and others acting on its behalf a paid-up, nonexclusive,\n * irrevocable, worldwide license in the Software to reproduce,\n * prepare derivative works, distribute copies to the public, perform\n * publicly and display publicly, and to permit others to do so.\n *\n * This code is distributed under a BSD style license, see the LICENSE\n * file for complete information.\n */\n \n/**\n * CSS for the time axis used in charts etc.\n */\n\n.x.axis {\n    shape-rendering: crispEdges;\n}\n\n.x.axis .minor {\n    stroke-opacity: .5;\n}\n\n.x.axis > path.domain {\n    fill: none;\n}\n\n.x.axis > .tick > text {\n    font-size: 11px;\n    opacity: 0.5;\n}\n\n.x.axis > .tick > line {\n    stroke: #DBDBDB;\n    stroke-opacity: 0.5;\n    stroke-width: 1px;\n    shape-rendering: crispEdges;\n}\n", ""]);

/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(43);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(46)(content, {});
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		module.hot.accept("!!/Users/pmurphy/Code/esnet-react-charts/node_modules/css-loader/index.js!/Users/pmurphy/Code/esnet-react-charts/lib/components/tracker.css", function() {
			var newContent = require("!!/Users/pmurphy/Code/esnet-react-charts/node_modules/css-loader/index.js!/Users/pmurphy/Code/esnet-react-charts/lib/components/tracker.css");
			if(typeof newContent === 'string') newContent = [module.id, newContent, ''];
			update(newContent);
		});
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 43 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(48)();
	exports.push([module.id, "/*\n * ESnet React Charts, Copyright (c) 2014, The Regents of the University of\n * California, through Lawrence Berkeley National Laboratory (subject\n * to receipt of any required approvals from the U.S. Dept. of\n * Energy).  All rights reserved.\n *\n * If you have questions about your rights to use or distribute this\n * software, please contact Berkeley Lab's Technology Transfer\n * Department at TTD@lbl.gov.\n *\n * NOTICE.  This software is owned by the U.S. Department of Energy.\n * As such, the U.S. Government has been granted for itself and others\n * acting on its behalf a paid-up, nonexclusive, irrevocable,\n * worldwide license in the Software to reproduce, prepare derivative\n * works, and perform publicly and display publicly.  Beginning five\n * (5) years after the date permission to assert copyright is obtained\n * from the U.S. Department of Energy, and subject to any subsequent\n * five (5) year renewals, the U.S. Government is granted for itself\n * and others acting on its behalf a paid-up, nonexclusive,\n * irrevocable, worldwide license in the Software to reproduce,\n * prepare derivative works, distribute copies to the public, perform\n * publicly and display publicly, and to permit others to do so.\n *\n * This code is distributed under a BSD style license, see the LICENSE\n * file for complete information.\n */\n \n.tracker-line {\n    stroke: #AAA;\n}", ""]);

/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(45);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(46)(content, {});
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		module.hot.accept("!!/Users/pmurphy/Code/esnet-react-charts/node_modules/css-loader/index.js!/Users/pmurphy/Code/esnet-react-charts/lib/components/yaxis.css", function() {
			var newContent = require("!!/Users/pmurphy/Code/esnet-react-charts/node_modules/css-loader/index.js!/Users/pmurphy/Code/esnet-react-charts/lib/components/yaxis.css");
			if(typeof newContent === 'string') newContent = [module.id, newContent, ''];
			update(newContent);
		});
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(48)();
	exports.push([module.id, "/*\n * ESnet React Charts, Copyright (c) 2014, The Regents of the University of\n * California, through Lawrence Berkeley National Laboratory (subject\n * to receipt of any required approvals from the U.S. Dept. of\n * Energy).  All rights reserved.\n *\n * If you have questions about your rights to use or distribute this\n * software, please contact Berkeley Lab's Technology Transfer\n * Department at TTD@lbl.gov.\n *\n * NOTICE.  This software is owned by the U.S. Department of Energy.\n * As such, the U.S. Government has been granted for itself and others\n * acting on its behalf a paid-up, nonexclusive, irrevocable,\n * worldwide license in the Software to reproduce, prepare derivative\n * works, and perform publicly and display publicly.  Beginning five\n * (5) years after the date permission to assert copyright is obtained\n * from the U.S. Department of Energy, and subject to any subsequent\n * five (5) year renewals, the U.S. Government is granted for itself\n * and others acting on its behalf a paid-up, nonexclusive,\n * irrevocable, worldwide license in the Software to reproduce,\n * prepare derivative works, distribute copies to the public, perform\n * publicly and display publicly, and to permit others to do so.\n *\n * This code is distributed under a BSD style license, see the LICENSE\n * file for complete information.\n */\n\n.yaxis > line,\n.yaxis > path {\n    fill: none;\n    stroke: #000;\n    stroke-opacity: .5;\n}\n\n.yaxis > .tick > text {\n    font-size: 11px;\n    opacity: 0.5;\n}\n\n.yaxis > text {\n    fill: #8B7E7E;\n    font-weight: 100;\n    font-size: 12px;\n}\n\n.yaxis > .tick > line {\n    stroke: #888686;\n    stroke-opacity: 0.5;\n    stroke-width: 1px;\n    shape-rendering: crispEdges;\n}\n\n.yaxis-debug {\n\tfill: rgba(255, 0, 0, 0.06);\n\tstroke: red;\n}\n", ""]);

/***/ },
/* 46 */
/***/ function(module, exports, __webpack_require__) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	var stylesInDom = {},
		memoize = function(fn) {
			var memo;
			return function () {
				if (typeof memo === "undefined") memo = fn.apply(this, arguments);
				return memo;
			};
		},
		isIE9 = memoize(function() {
			return /msie 9\b/.test(window.navigator.userAgent.toLowerCase());
		}),
		getHeadElement = memoize(function () {
			return document.head || document.getElementsByTagName("head")[0];
		}),
		singletonElement = null,
		singletonCounter = 0;

	module.exports = function(list, options) {
		if(false) {
			if(typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
		}

		options = options || {};
		// Force single-tag solution on IE9, which has a hard limit on the # of <style>
		// tags it will allow on a page
		if (typeof options.singleton === "undefined") options.singleton = isIE9();

		var styles = listToStyles(list);
		addStylesToDom(styles, options);

		return function update(newList) {
			var mayRemove = [];
			for(var i = 0; i < styles.length; i++) {
				var item = styles[i];
				var domStyle = stylesInDom[item.id];
				domStyle.refs--;
				mayRemove.push(domStyle);
			}
			if(newList) {
				var newStyles = listToStyles(newList);
				addStylesToDom(newStyles, options);
			}
			for(var i = 0; i < mayRemove.length; i++) {
				var domStyle = mayRemove[i];
				if(domStyle.refs === 0) {
					for(var j = 0; j < domStyle.parts.length; j++)
						domStyle.parts[j]();
					delete stylesInDom[domStyle.id];
				}
			}
		};
	}

	function addStylesToDom(styles, options) {
		for(var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];
			if(domStyle) {
				domStyle.refs++;
				for(var j = 0; j < domStyle.parts.length; j++) {
					domStyle.parts[j](item.parts[j]);
				}
				for(; j < item.parts.length; j++) {
					domStyle.parts.push(addStyle(item.parts[j], options));
				}
			} else {
				var parts = [];
				for(var j = 0; j < item.parts.length; j++) {
					parts.push(addStyle(item.parts[j], options));
				}
				stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
			}
		}
	}

	function listToStyles(list) {
		var styles = [];
		var newStyles = {};
		for(var i = 0; i < list.length; i++) {
			var item = list[i];
			var id = item[0];
			var css = item[1];
			var media = item[2];
			var sourceMap = item[3];
			var part = {css: css, media: media, sourceMap: sourceMap};
			if(!newStyles[id])
				styles.push(newStyles[id] = {id: id, parts: [part]});
			else
				newStyles[id].parts.push(part);
		}
		return styles;
	}

	function createStyleElement() {
		var styleElement = document.createElement("style");
		var head = getHeadElement();
		styleElement.type = "text/css";
		head.appendChild(styleElement);
		return styleElement;
	}

	function addStyle(obj, options) {
		var styleElement, update, remove;

		if (options.singleton) {
			var styleIndex = singletonCounter++;
			styleElement = singletonElement || (singletonElement = createStyleElement());
			update = applyToSingletonTag.bind(null, styleElement, styleIndex, false);
			remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);
		} else {
			styleElement = createStyleElement();
			update = applyToTag.bind(null, styleElement);
			remove = function () {
				styleElement.parentNode.removeChild(styleElement);
			};
		}

		update(obj);

		return function updateStyle(newObj) {
			if(newObj) {
				if(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)
					return;
				update(obj = newObj);
			} else {
				remove();
			}
		};
	}

	function replaceText(source, id, replacement) {
		var boundaries = ["/** >>" + id + " **/", "/** " + id + "<< **/"];
		var start = source.lastIndexOf(boundaries[0]);
		var wrappedReplacement = replacement
			? (boundaries[0] + replacement + boundaries[1])
			: "";
		if (source.lastIndexOf(boundaries[0]) >= 0) {
			var end = source.lastIndexOf(boundaries[1]) + boundaries[1].length;
			return source.slice(0, start) + wrappedReplacement + source.slice(end);
		} else {
			return source + wrappedReplacement;
		}
	}

	function applyToSingletonTag(styleElement, index, remove, obj) {
		var css = remove ? "" : obj.css;

		if(styleElement.styleSheet) {
			styleElement.styleSheet.cssText = replaceText(styleElement.styleSheet.cssText, index, css);
		} else {
			var cssNode = document.createTextNode(css);
			var childNodes = styleElement.childNodes;
			if (childNodes[index]) styleElement.removeChild(childNodes[index]);
			if (childNodes.length) {
				styleElement.insertBefore(cssNode, childNodes[index]);
			} else {
				styleElement.appendChild(cssNode);
			}
		}
	}

	function applyToTag(styleElement, obj) {
		var css = obj.css;
		var media = obj.media;
		var sourceMap = obj.sourceMap;

		if(sourceMap && typeof btoa === "function") {
			try {
				css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(JSON.stringify(sourceMap)) + " */";
				css = "@import url(\"data:stylesheet/css;base64," + btoa(css) + "\")";
			} catch(e) {}
		}

		if(media) {
			styleElement.setAttribute("media", media)
		}

		if(styleElement.styleSheet) {
			styleElement.styleSheet.cssText = css;
		} else {
			while(styleElement.firstChild) {
				styleElement.removeChild(styleElement.firstChild);
			}
			styleElement.appendChild(document.createTextNode(css));
		}
	}


/***/ },
/* 47 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule invariant
	 */

	"use strict";

	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */

	var invariant = function invariant(condition, format, a, b, c, d, e, f) {
	  if (false) {
	    if (format === undefined) {
	      throw new Error("invariant requires an error message argument");
	    }
	  }

	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error("Minified exception occurred; use the non-minified dev environment " + "for the full error message and additional helpful warnings.");
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error("Invariant Violation: " + format.replace(/%s/g, function () {
	        return args[argIndex++];
	      }));
	    }

	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	};

	module.exports = invariant;

/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	module.exports = function () {
		var list = [];
		list.toString = function toString() {
			var result = [];
			for (var i = 0; i < this.length; i++) {
				var item = this[i];
				if (item[2]) {
					result.push("@media " + item[2] + "{" + item[1] + "}");
				} else {
					result.push(item[1]);
				}
			}
			return result.join("");
		};
		return list;
	};

/***/ },
/* 49 */
/***/ function(module, exports, __webpack_require__) {

	var map = {
		"./af": 51,
		"./af.js": 51,
		"./ar": 55,
		"./ar-ma": 52,
		"./ar-ma.js": 52,
		"./ar-sa": 53,
		"./ar-sa.js": 53,
		"./ar-tn": 54,
		"./ar-tn.js": 54,
		"./ar.js": 55,
		"./az": 56,
		"./az.js": 56,
		"./be": 57,
		"./be.js": 57,
		"./bg": 58,
		"./bg.js": 58,
		"./bn": 59,
		"./bn.js": 59,
		"./bo": 60,
		"./bo.js": 60,
		"./br": 61,
		"./br.js": 61,
		"./bs": 62,
		"./bs.js": 62,
		"./ca": 63,
		"./ca.js": 63,
		"./cs": 64,
		"./cs.js": 64,
		"./cv": 65,
		"./cv.js": 65,
		"./cy": 66,
		"./cy.js": 66,
		"./da": 67,
		"./da.js": 67,
		"./de": 69,
		"./de-at": 68,
		"./de-at.js": 68,
		"./de.js": 69,
		"./el": 70,
		"./el.js": 70,
		"./en-au": 71,
		"./en-au.js": 71,
		"./en-ca": 72,
		"./en-ca.js": 72,
		"./en-gb": 73,
		"./en-gb.js": 73,
		"./eo": 74,
		"./eo.js": 74,
		"./es": 75,
		"./es.js": 75,
		"./et": 76,
		"./et.js": 76,
		"./eu": 77,
		"./eu.js": 77,
		"./fa": 78,
		"./fa.js": 78,
		"./fi": 79,
		"./fi.js": 79,
		"./fo": 80,
		"./fo.js": 80,
		"./fr": 82,
		"./fr-ca": 81,
		"./fr-ca.js": 81,
		"./fr.js": 82,
		"./fy": 83,
		"./fy.js": 83,
		"./gl": 84,
		"./gl.js": 84,
		"./he": 85,
		"./he.js": 85,
		"./hi": 86,
		"./hi.js": 86,
		"./hr": 87,
		"./hr.js": 87,
		"./hu": 88,
		"./hu.js": 88,
		"./hy-am": 89,
		"./hy-am.js": 89,
		"./id": 90,
		"./id.js": 90,
		"./is": 91,
		"./is.js": 91,
		"./it": 92,
		"./it.js": 92,
		"./ja": 93,
		"./ja.js": 93,
		"./ka": 94,
		"./ka.js": 94,
		"./km": 95,
		"./km.js": 95,
		"./ko": 96,
		"./ko.js": 96,
		"./lb": 97,
		"./lb.js": 97,
		"./lt": 98,
		"./lt.js": 98,
		"./lv": 99,
		"./lv.js": 99,
		"./mk": 100,
		"./mk.js": 100,
		"./ml": 101,
		"./ml.js": 101,
		"./mr": 102,
		"./mr.js": 102,
		"./ms-my": 103,
		"./ms-my.js": 103,
		"./my": 104,
		"./my.js": 104,
		"./nb": 105,
		"./nb.js": 105,
		"./ne": 106,
		"./ne.js": 106,
		"./nl": 107,
		"./nl.js": 107,
		"./nn": 108,
		"./nn.js": 108,
		"./pl": 109,
		"./pl.js": 109,
		"./pt": 111,
		"./pt-br": 110,
		"./pt-br.js": 110,
		"./pt.js": 111,
		"./ro": 112,
		"./ro.js": 112,
		"./ru": 113,
		"./ru.js": 113,
		"./sk": 114,
		"./sk.js": 114,
		"./sl": 115,
		"./sl.js": 115,
		"./sq": 116,
		"./sq.js": 116,
		"./sr": 118,
		"./sr-cyrl": 117,
		"./sr-cyrl.js": 117,
		"./sr.js": 118,
		"./sv": 119,
		"./sv.js": 119,
		"./ta": 120,
		"./ta.js": 120,
		"./th": 121,
		"./th.js": 121,
		"./tl-ph": 122,
		"./tl-ph.js": 122,
		"./tr": 123,
		"./tr.js": 123,
		"./tzm": 125,
		"./tzm-latn": 124,
		"./tzm-latn.js": 124,
		"./tzm.js": 125,
		"./uk": 126,
		"./uk.js": 126,
		"./uz": 127,
		"./uz.js": 127,
		"./vi": 128,
		"./vi.js": 128,
		"./zh-cn": 129,
		"./zh-cn.js": 129,
		"./zh-tw": 130,
		"./zh-tw.js": 130
	};
	function webpackContext(req) {
		return __webpack_require__(webpackContextResolve(req));
	};
	function webpackContextResolve(req) {
		return map[req] || (function() { throw new Error("Cannot find module '" + req + "'.") }());
	};
	webpackContext.keys = function webpackContextKeys() {
		return Object.keys(map);
	};
	webpackContext.resolve = webpackContextResolve;
	module.exports = webpackContext;
	webpackContext.id = 49;


/***/ },
/* 50 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = function isBuffer(arg) {
	  return arg && typeof arg === 'object' && typeof arg.copy === 'function' && typeof arg.fill === 'function' && typeof arg.readUInt8 === 'function';
	};

/***/ },
/* 51 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : afrikaans (af)
	// author : Werner Mollentze : https://github.com/wernerm

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    return moment.defineLocale('af', {
	        months: 'Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember'.split('_'),
	        monthsShort: 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des'.split('_'),
	        weekdays: 'Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag'.split('_'),
	        weekdaysShort: 'Son_Maa_Din_Woe_Don_Vry_Sat'.split('_'),
	        weekdaysMin: 'So_Ma_Di_Wo_Do_Vr_Sa'.split('_'),
	        meridiemParse: /vm|nm/i,
	        isPM: function isPM(input) {
	            return /^nm$/i.test(input);
	        },
	        meridiem: function meridiem(hours, minutes, isLower) {
	            if (hours < 12) {
	                return isLower ? 'vm' : 'VM';
	            } else {
	                return isLower ? 'nm' : 'NM';
	            }
	        },
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'LT:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY LT',
	            LLLL: 'dddd, D MMMM YYYY LT'
	        },
	        calendar: {
	            sameDay: '[Vandag om] LT',
	            nextDay: '[Môre om] LT',
	            nextWeek: 'dddd [om] LT',
	            lastDay: '[Gister om] LT',
	            lastWeek: '[Laas] dddd [om] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'oor %s',
	            past: '%s gelede',
	            s: '\'n paar sekondes',
	            m: '\'n minuut',
	            mm: '%d minute',
	            h: '\'n uur',
	            hh: '%d ure',
	            d: '\'n dag',
	            dd: '%d dae',
	            M: '\'n maand',
	            MM: '%d maande',
	            y: '\'n jaar',
	            yy: '%d jaar'
	        },
	        ordinalParse: /\d{1,2}(ste|de)/,
	        ordinal: function ordinal(number) {
	            return number + (number === 1 || number === 8 || number >= 20 ? 'ste' : 'de'); // Thanks to Joris Röling : https://github.com/jjupiter
	        },
	        week: {
	            dow: 1, // Maandag is die eerste dag van die week.
	            doy: 4 // Die week wat die 4de Januarie bevat is die eerste week van die jaar.
	        }
	    });
	});

/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : Moroccan Arabic (ar-ma)
	// author : ElFadili Yassine : https://github.com/ElFadiliY
	// author : Abdel Said : https://github.com/abdelsaid

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    return moment.defineLocale('ar-ma', {
	        months: 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
	        monthsShort: 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
	        weekdays: 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	        weekdaysShort: 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
	        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'LT:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY LT',
	            LLLL: 'dddd D MMMM YYYY LT'
	        },
	        calendar: {
	            sameDay: '[اليوم على الساعة] LT',
	            nextDay: '[غدا على الساعة] LT',
	            nextWeek: 'dddd [على الساعة] LT',
	            lastDay: '[أمس على الساعة] LT',
	            lastWeek: 'dddd [على الساعة] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'في %s',
	            past: 'منذ %s',
	            s: 'ثوان',
	            m: 'دقيقة',
	            mm: '%d دقائق',
	            h: 'ساعة',
	            hh: '%d ساعات',
	            d: 'يوم',
	            dd: '%d أيام',
	            M: 'شهر',
	            MM: '%d أشهر',
	            y: 'سنة',
	            yy: '%d سنوات'
	        },
	        week: {
	            dow: 6, // Saturday is the first day of the week.
	            doy: 12 // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	});

/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : Arabic Saudi Arabia (ar-sa)
	// author : Suhail Alkowaileet : https://github.com/xsoh

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    var symbolMap = {
	        '1': '١',
	        '2': '٢',
	        '3': '٣',
	        '4': '٤',
	        '5': '٥',
	        '6': '٦',
	        '7': '٧',
	        '8': '٨',
	        '9': '٩',
	        '0': '٠'
	    },
	        numberMap = {
	        '١': '1',
	        '٢': '2',
	        '٣': '3',
	        '٤': '4',
	        '٥': '5',
	        '٦': '6',
	        '٧': '7',
	        '٨': '8',
	        '٩': '9',
	        '٠': '0'
	    };

	    return moment.defineLocale('ar-sa', {
	        months: 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
	        monthsShort: 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
	        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	        weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
	        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY LT',
	            LLLL: 'dddd D MMMM YYYY LT'
	        },
	        meridiemParse: /ص|م/,
	        isPM: function isPM(input) {
	            return 'م' === input;
	        },
	        meridiem: function meridiem(hour, minute, isLower) {
	            if (hour < 12) {
	                return 'ص';
	            } else {
	                return 'م';
	            }
	        },
	        calendar: {
	            sameDay: '[اليوم على الساعة] LT',
	            nextDay: '[غدا على الساعة] LT',
	            nextWeek: 'dddd [على الساعة] LT',
	            lastDay: '[أمس على الساعة] LT',
	            lastWeek: 'dddd [على الساعة] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'في %s',
	            past: 'منذ %s',
	            s: 'ثوان',
	            m: 'دقيقة',
	            mm: '%d دقائق',
	            h: 'ساعة',
	            hh: '%d ساعات',
	            d: 'يوم',
	            dd: '%d أيام',
	            M: 'شهر',
	            MM: '%d أشهر',
	            y: 'سنة',
	            yy: '%d سنوات'
	        },
	        preparse: function preparse(string) {
	            return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
	                return numberMap[match];
	            }).replace(/،/g, ',');
	        },
	        postformat: function postformat(string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            }).replace(/,/g, '،');
	        },
	        week: {
	            dow: 6, // Saturday is the first day of the week.
	            doy: 12 // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	});

/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale  : Tunisian Arabic (ar-tn)

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    return moment.defineLocale('ar-tn', {
	        months: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
	        monthsShort: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
	        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	        weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
	        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'LT:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY LT',
	            LLLL: 'dddd D MMMM YYYY LT'
	        },
	        calendar: {
	            sameDay: '[اليوم على الساعة] LT',
	            nextDay: '[غدا على الساعة] LT',
	            nextWeek: 'dddd [على الساعة] LT',
	            lastDay: '[أمس على الساعة] LT',
	            lastWeek: 'dddd [على الساعة] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'في %s',
	            past: 'منذ %s',
	            s: 'ثوان',
	            m: 'دقيقة',
	            mm: '%d دقائق',
	            h: 'ساعة',
	            hh: '%d ساعات',
	            d: 'يوم',
	            dd: '%d أيام',
	            M: 'شهر',
	            MM: '%d أشهر',
	            y: 'سنة',
	            yy: '%d سنوات'
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	});

/***/ },
/* 55 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// Locale: Arabic (ar)
	// Author: Abdel Said: https://github.com/abdelsaid
	// Changes in months, weekdays: Ahmed Elkhatib
	// Native plural forms: forabi https://github.com/forabi

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    var symbolMap = {
	        '1': '١',
	        '2': '٢',
	        '3': '٣',
	        '4': '٤',
	        '5': '٥',
	        '6': '٦',
	        '7': '٧',
	        '8': '٨',
	        '9': '٩',
	        '0': '٠'
	    },
	        numberMap = {
	        '١': '1',
	        '٢': '2',
	        '٣': '3',
	        '٤': '4',
	        '٥': '5',
	        '٦': '6',
	        '٧': '7',
	        '٨': '8',
	        '٩': '9',
	        '٠': '0'
	    },
	        pluralForm = function pluralForm(n) {
	        return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;
	    },
	        plurals = {
	        s: ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],
	        m: ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],
	        h: ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],
	        d: ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],
	        M: ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],
	        y: ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']
	    },
	        pluralize = function pluralize(u) {
	        return function (number, withoutSuffix, string, isFuture) {
	            var f = pluralForm(number),
	                str = plurals[u][pluralForm(number)];
	            if (f === 2) {
	                str = str[withoutSuffix ? 0 : 1];
	            }
	            return str.replace(/%d/i, number);
	        };
	    },
	        months = ['كانون الثاني يناير', 'شباط فبراير', 'آذار مارس', 'نيسان أبريل', 'أيار مايو', 'حزيران يونيو', 'تموز يوليو', 'آب أغسطس', 'أيلول سبتمبر', 'تشرين الأول أكتوبر', 'تشرين الثاني نوفمبر', 'كانون الأول ديسمبر'];

	    return moment.defineLocale('ar', {
	        months: months,
	        monthsShort: months,
	        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	        weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
	        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY LT',
	            LLLL: 'dddd D MMMM YYYY LT'
	        },
	        meridiemParse: /ص|م/,
	        isPM: function isPM(input) {
	            return 'م' === input;
	        },
	        meridiem: function meridiem(hour, minute, isLower) {
	            if (hour < 12) {
	                return 'ص';
	            } else {
	                return 'م';
	            }
	        },
	        calendar: {
	            sameDay: '[اليوم عند الساعة] LT',
	            nextDay: '[غدًا عند الساعة] LT',
	            nextWeek: 'dddd [عند الساعة] LT',
	            lastDay: '[أمس عند الساعة] LT',
	            lastWeek: 'dddd [عند الساعة] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'بعد %s',
	            past: 'منذ %s',
	            s: pluralize('s'),
	            m: pluralize('m'),
	            mm: pluralize('m'),
	            h: pluralize('h'),
	            hh: pluralize('h'),
	            d: pluralize('d'),
	            dd: pluralize('d'),
	            M: pluralize('M'),
	            MM: pluralize('M'),
	            y: pluralize('y'),
	            yy: pluralize('y')
	        },
	        preparse: function preparse(string) {
	            return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
	                return numberMap[match];
	            }).replace(/،/g, ',');
	        },
	        postformat: function postformat(string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            }).replace(/,/g, '،');
	        },
	        week: {
	            dow: 6, // Saturday is the first day of the week.
	            doy: 12 // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	});

/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : azerbaijani (az)
	// author : topchiyev : https://github.com/topchiyev

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    var suffixes = {
	        1: '-inci',
	        5: '-inci',
	        8: '-inci',
	        70: '-inci',
	        80: '-inci',

	        2: '-nci',
	        7: '-nci',
	        20: '-nci',
	        50: '-nci',

	        3: '-üncü',
	        4: '-üncü',
	        100: '-üncü',

	        6: '-ncı',

	        9: '-uncu',
	        10: '-uncu',
	        30: '-uncu',

	        60: '-ıncı',
	        90: '-ıncı'
	    };
	    return moment.defineLocale('az', {
	        months: 'yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr'.split('_'),
	        monthsShort: 'yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek'.split('_'),
	        weekdays: 'Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə'.split('_'),
	        weekdaysShort: 'Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən'.split('_'),
	        weekdaysMin: 'Bz_BE_ÇA_Çə_CA_Cü_Şə'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'LT:ss',
	            L: 'DD.MM.YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY LT',
	            LLLL: 'dddd, D MMMM YYYY LT'
	        },
	        calendar: {
	            sameDay: '[bugün saat] LT',
	            nextDay: '[sabah saat] LT',
	            nextWeek: '[gələn həftə] dddd [saat] LT',
	            lastDay: '[dünən] LT',
	            lastWeek: '[keçən həftə] dddd [saat] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: '%s sonra',
	            past: '%s əvvəl',
	            s: 'birneçə saniyyə',
	            m: 'bir dəqiqə',
	            mm: '%d dəqiqə',
	            h: 'bir saat',
	            hh: '%d saat',
	            d: 'bir gün',
	            dd: '%d gün',
	            M: 'bir ay',
	            MM: '%d ay',
	            y: 'bir il',
	            yy: '%d il'
	        },
	        meridiemParse: /gecə|səhər|gündüz|axşam/,
	        isPM: function isPM(input) {
	            return /^(gündüz|axşam)$/.test(input);
	        },
	        meridiem: function meridiem(hour, minute, isLower) {
	            if (hour < 4) {
	                return 'gecə';
	            } else if (hour < 12) {
	                return 'səhər';
	            } else if (hour < 17) {
	                return 'gündüz';
	            } else {
	                return 'axşam';
	            }
	        },
	        ordinalParse: /\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,
	        ordinal: function ordinal(number) {
	            if (number === 0) {
	                // special case for zero
	                return number + '-ıncı';
	            }
	            var a = number % 10,
	                b = number % 100 - a,
	                c = number >= 100 ? 100 : null;

	            return number + (suffixes[a] || suffixes[b] || suffixes[c]);
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 7 // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	});

/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : belarusian (be)
	// author : Dmitry Demidov : https://github.com/demidov91
	// author: Praleska: http://praleska.pro/
	// Author : Menelion Elensúle : https://github.com/Oire

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    function plural(word, num) {
	        var forms = word.split('_');
	        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2];
	    }

	    function relativeTimeWithPlural(number, withoutSuffix, key) {
	        var format = {
	            'mm': withoutSuffix ? 'хвіліна_хвіліны_хвілін' : 'хвіліну_хвіліны_хвілін',
	            'hh': withoutSuffix ? 'гадзіна_гадзіны_гадзін' : 'гадзіну_гадзіны_гадзін',
	            'dd': 'дзень_дні_дзён',
	            'MM': 'месяц_месяцы_месяцаў',
	            'yy': 'год_гады_гадоў'
	        };
	        if (key === 'm') {
	            return withoutSuffix ? 'хвіліна' : 'хвіліну';
	        } else if (key === 'h') {
	            return withoutSuffix ? 'гадзіна' : 'гадзіну';
	        } else {
	            return number + ' ' + plural(format[key], +number);
	        }
	    }

	    function monthsCaseReplace(m, format) {
	        var months = {
	            'nominative': 'студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань'.split('_'),
	            'accusative': 'студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня'.split('_')
	        },
	            nounCase = /D[oD]?(\[[^\[\]]*\]|\s+)+MMMM?/.test(format) ? 'accusative' : 'nominative';

	        return months[nounCase][m.month()];
	    }

	    function weekdaysCaseReplace(m, format) {
	        var weekdays = {
	            'nominative': 'нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота'.split('_'),
	            'accusative': 'нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу'.split('_')
	        },
	            nounCase = /\[ ?[Вв] ?(?:мінулую|наступную)? ?\] ?dddd/.test(format) ? 'accusative' : 'nominative';

	        return weekdays[nounCase][m.day()];
	    }

	    return moment.defineLocale('be', {
	        months: monthsCaseReplace,
	        monthsShort: 'студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж'.split('_'),
	        weekdays: weekdaysCaseReplace,
	        weekdaysShort: 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
	        weekdaysMin: 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'LT:ss',
	            L: 'DD.MM.YYYY',
	            LL: 'D MMMM YYYY г.',
	            LLL: 'D MMMM YYYY г., LT',
	            LLLL: 'dddd, D MMMM YYYY г., LT'
	        },
	        calendar: {
	            sameDay: '[Сёння ў] LT',
	            nextDay: '[Заўтра ў] LT',
	            lastDay: '[Учора ў] LT',
	            nextWeek: function nextWeek() {
	                return '[У] dddd [ў] LT';
	            },
	            lastWeek: function lastWeek() {
	                switch (this.day()) {
	                    case 0:
	                    case 3:
	                    case 5:
	                    case 6:
	                        return '[У мінулую] dddd [ў] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                        return '[У мінулы] dddd [ў] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'праз %s',
	            past: '%s таму',
	            s: 'некалькі секунд',
	            m: relativeTimeWithPlural,
	            mm: relativeTimeWithPlural,
	            h: relativeTimeWithPlural,
	            hh: relativeTimeWithPlural,
	            d: 'дзень',
	            dd: relativeTimeWithPlural,
	            M: 'месяц',
	            MM: relativeTimeWithPlural,
	            y: 'год',
	            yy: relativeTimeWithPlural
	        },
	        meridiemParse: /ночы|раніцы|дня|вечара/,
	        isPM: function isPM(input) {
	            return /^(дня|вечара)$/.test(input);
	        },
	        meridiem: function meridiem(hour, minute, isLower) {
	            if (hour < 4) {
	                return 'ночы';
	            } else if (hour < 12) {
	                return 'раніцы';
	            } else if (hour < 17) {
	                return 'дня';
	            } else {
	                return 'вечара';
	            }
	        },

	        ordinalParse: /\d{1,2}-(і|ы|га)/,
	        ordinal: function ordinal(number, period) {
	            switch (period) {
	                case 'M':
	                case 'd':
	                case 'DDD':
	                case 'w':
	                case 'W':
	                    return (number % 10 === 2 || number % 10 === 3) && (number % 100 !== 12 && number % 100 !== 13) ? number + '-і' : number + '-ы';
	                case 'D':
	                    return number + '-га';
	                default:
	                    return number;
	            }
	        },

	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 7 // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	});

/***/ },
/* 58 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : bulgarian (bg)
	// author : Krasen Borisov : https://github.com/kraz

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    return moment.defineLocale('bg', {
	        months: 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split('_'),
	        monthsShort: 'янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),
	        weekdays: 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split('_'),
	        weekdaysShort: 'нед_пон_вто_сря_чет_пет_съб'.split('_'),
	        weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS: 'LT:ss',
	            L: 'D.MM.YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY LT',
	            LLLL: 'dddd, D MMMM YYYY LT'
	        },
	        calendar: {
	            sameDay: '[Днес в] LT',
	            nextDay: '[Утре в] LT',
	            nextWeek: 'dddd [в] LT',
	            lastDay: '[Вчера в] LT',
	            lastWeek: function lastWeek() {
	                switch (this.day()) {
	                    case 0:
	                    case 3:
	                    case 6:
	                        return '[В изминалата] dddd [в] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                    case 5:
	                        return '[В изминалия] dddd [в] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'след %s',
	            past: 'преди %s',
	            s: 'няколко секунди',
	            m: 'минута',
	            mm: '%d минути',
	            h: 'час',
	            hh: '%d часа',
	            d: 'ден',
	            dd: '%d дни',
	            M: 'месец',
	            MM: '%d месеца',
	            y: 'година',
	            yy: '%d години'
	        },
	        ordinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
	        ordinal: function ordinal(number) {
	            var lastDigit = number % 10,
	                last2Digits = number % 100;
	            if (number === 0) {
	                return number + '-ев';
	            } else if (last2Digits === 0) {
	                return number + '-ен';
	            } else if (last2Digits > 10 && last2Digits < 20) {
	                return number + '-ти';
	            } else if (lastDigit === 1) {
	                return number + '-ви';
	            } else if (lastDigit === 2) {
	                return number + '-ри';
	            } else if (lastDigit === 7 || lastDigit === 8) {
	                return number + '-ми';
	            } else {
	                return number + '-ти';
	            }
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 7 // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	});

/***/ },
/* 59 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : Bengali (bn)
	// author : Kaushik Gandhi : https://github.com/kaushikgandhi

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    var symbolMap = {
	        '1': '১',
	        '2': '২',
	        '3': '৩',
	        '4': '৪',
	        '5': '৫',
	        '6': '৬',
	        '7': '৭',
	        '8': '৮',
	        '9': '৯',
	        '0': '০'
	    },
	        numberMap = {
	        '১': '1',
	        '২': '2',
	        '৩': '3',
	        '৪': '4',
	        '৫': '5',
	        '৬': '6',
	        '৭': '7',
	        '৮': '8',
	        '৯': '9',
	        '০': '0'
	    };

	    return moment.defineLocale('bn', {
	        months: 'জানুয়ারী_ফেবুয়ারী_মার্চ_এপ্রিল_মে_জুন_জুলাই_অগাস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split('_'),
	        monthsShort: 'জানু_ফেব_মার্চ_এপর_মে_জুন_জুল_অগ_সেপ্ট_অক্টো_নভ_ডিসেম্'.split('_'),
	        weekdays: 'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পত্তিবার_শুক্রুবার_শনিবার'.split('_'),
	        weekdaysShort: 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পত্তি_শুক্রু_শনি'.split('_'),
	        weekdaysMin: 'রব_সম_মঙ্গ_বু_ব্রিহ_শু_শনি'.split('_'),
	        longDateFormat: {
	            LT: 'A h:mm সময়',
	            LTS: 'A h:mm:ss সময়',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY, LT',
	            LLLL: 'dddd, D MMMM YYYY, LT'
	        },
	        calendar: {
	            sameDay: '[আজ] LT',
	            nextDay: '[আগামীকাল] LT',
	            nextWeek: 'dddd, LT',
	            lastDay: '[গতকাল] LT',
	            lastWeek: '[গত] dddd, LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: '%s পরে',
	            past: '%s আগে',
	            s: 'কএক সেকেন্ড',
	            m: 'এক মিনিট',
	            mm: '%d মিনিট',
	            h: 'এক ঘন্টা',
	            hh: '%d ঘন্টা',
	            d: 'এক দিন',
	            dd: '%d দিন',
	            M: 'এক মাস',
	            MM: '%d মাস',
	            y: 'এক বছর',
	            yy: '%d বছর'
	        },
	        preparse: function preparse(string) {
	            return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function postformat(string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        meridiemParse: /রাত|শকাল|দুপুর|বিকেল|রাত/,
	        isPM: function isPM(input) {
	            return /^(দুপুর|বিকেল|রাত)$/.test(input);
	        },
	        //Bengali is a vast language its spoken
	        //in different forms in various parts of the world.
	        //I have just generalized with most common one used
	        meridiem: function meridiem(hour, minute, isLower) {
	            if (hour < 4) {
	                return 'রাত';
	            } else if (hour < 10) {
	                return 'শকাল';
	            } else if (hour < 17) {
	                return 'দুপুর';
	            } else if (hour < 20) {
	                return 'বিকেল';
	            } else {
	                return 'রাত';
	            }
	        },
	        week: {
	            dow: 0, // Sunday is the first day of the week.
	            doy: 6 // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	});

/***/ },
/* 60 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : tibetan (bo)
	// author : Thupten N. Chakrishar : https://github.com/vajradog

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    var symbolMap = {
	        '1': '༡',
	        '2': '༢',
	        '3': '༣',
	        '4': '༤',
	        '5': '༥',
	        '6': '༦',
	        '7': '༧',
	        '8': '༨',
	        '9': '༩',
	        '0': '༠'
	    },
	        numberMap = {
	        '༡': '1',
	        '༢': '2',
	        '༣': '3',
	        '༤': '4',
	        '༥': '5',
	        '༦': '6',
	        '༧': '7',
	        '༨': '8',
	        '༩': '9',
	        '༠': '0'
	    };

	    return moment.defineLocale('bo', {
	        months: 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),
	        monthsShort: 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),
	        weekdays: 'གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་'.split('_'),
	        weekdaysShort: 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),
	        weekdaysMin: 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),
	        longDateFormat: {
	            LT: 'A h:mm',
	            LTS: 'LT:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY, LT',
	            LLLL: 'dddd, D MMMM YYYY, LT'
	        },
	        calendar: {
	            sameDay: '[དི་རིང] LT',
	            nextDay: '[སང་ཉིན] LT',
	            nextWeek: '[བདུན་ཕྲག་རྗེས་མ], LT',
	            lastDay: '[ཁ་སང] LT',
	            lastWeek: '[བདུན་ཕྲག་མཐའ་མ] dddd, LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: '%s ལ་',
	            past: '%s སྔན་ལ',
	            s: 'ལམ་སང',
	            m: 'སྐར་མ་གཅིག',
	            mm: '%d སྐར་མ',
	            h: 'ཆུ་ཚོད་གཅིག',
	            hh: '%d ཆུ་ཚོད',
	            d: 'ཉིན་གཅིག',
	            dd: '%d ཉིན་',
	            M: 'ཟླ་བ་གཅིག',
	            MM: '%d ཟླ་བ',
	            y: 'ལོ་གཅིག',
	            yy: '%d ལོ'
	        },
	        preparse: function preparse(string) {
	            return string.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function postformat(string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        meridiemParse: /མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,
	        isPM: function isPM(input) {
	            return /^(ཉིན་གུང|དགོང་དག|མཚན་མོ)$/.test(input);
	        },
	        meridiem: function meridiem(hour, minute, isLower) {
	            if (hour < 4) {
	                return 'མཚན་མོ';
	            } else if (hour < 10) {
	                return 'ཞོགས་ཀས';
	            } else if (hour < 17) {
	                return 'ཉིན་གུང';
	            } else if (hour < 20) {
	                return 'དགོང་དག';
	            } else {
	                return 'མཚན་མོ';
	            }
	        },
	        week: {
	            dow: 0, // Sunday is the first day of the week.
	            doy: 6 // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	});

/***/ },
/* 61 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : breton (br)
	// author : Jean-Baptiste Le Duigou : https://github.com/jbleduigou

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    function relativeTimeWithMutation(number, withoutSuffix, key) {
	        var format = {
	            'mm': 'munutenn',
	            'MM': 'miz',
	            'dd': 'devezh'
	        };
	        return number + ' ' + mutation(format[key], number);
	    }

	    function specialMutationForYears(number) {
	        switch (lastNumber(number)) {
	            case 1:
	            case 3:
	            case 4:
	            case 5:
	            case 9:
	                return number + ' bloaz';
	            default:
	                return number + ' vloaz';
	        }
	    }

	    function lastNumber(_x) {
	        var _again = true;

	        _function: while (_again) {
	            var number = _x;
	            _again = false;

	            if (number > 9) {
	                _x = number % 10;
	                _again = true;
	                continue _function;
	            }
	            return number;
	        }
	    }

	    function mutation(text, number) {
	        if (number === 2) {
	            return softMutation(text);
	        }
	        return text;
	    }

	    function softMutation(text) {
	        var mutationTable = {
	            'm': 'v',
	            'b': 'v',
	            'd': 'z'
	        };
	        if (mutationTable[text.charAt(0)] === undefined) {
	            return text;
	        }
	        return mutationTable[text.charAt(0)] + text.substring(1);
	    }

	    return moment.defineLocale('br', {
	        months: 'Genver_C\'hwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu'.split('_'),
	        monthsShort: 'Gen_C\'hwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker'.split('_'),
	        weekdays: 'Sul_Lun_Meurzh_Merc\'her_Yaou_Gwener_Sadorn'.split('_'),
	        weekdaysShort: 'Sul_Lun_Meu_Mer_Yao_Gwe_Sad'.split('_'),
	        weekdaysMin: 'Su_Lu_Me_Mer_Ya_Gw_Sa'.split('_'),
	        longDateFormat: {
	            LT: 'h[e]mm A',
	            LTS: 'h[e]mm:ss A',
	            L: 'DD/MM/YYYY',
	            LL: 'D [a viz] MMMM YYYY',
	            LLL: 'D [a viz] MMMM YYYY LT',
	            LLLL: 'dddd, D [a viz] MMMM YYYY LT'
	        },
	        calendar: {
	            sameDay: '[Hiziv da] LT',
	            nextDay: '[Warc\'hoazh da] LT',
	            nextWeek: 'dddd [da] LT',
	            lastDay: '[Dec\'h da] LT',
	            lastWeek: 'dddd [paset da] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'a-benn %s',
	            past: '%s \'zo',
	            s: 'un nebeud segondennoù',
	            m: 'ur vunutenn',
	            mm: relativeTimeWithMutation,
	            h: 'un eur',
	            hh: '%d eur',
	            d: 'un devezh',
	            dd: relativeTimeWithMutation,
	            M: 'ur miz',
	            MM: relativeTimeWithMutation,
	            y: 'ur bloaz',
	            yy: specialMutationForYears
	        },
	        ordinalParse: /\d{1,2}(añ|vet)/,
	        ordinal: function ordinal(number) {
	            var output = number === 1 ? 'añ' : 'vet';
	            return number + output;
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	});

/***/ },
/* 62 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : bosnian (bs)
	// author : Nedim Cholich : https://github.com/frontyard
	// based on (hr) translation by Bojan Marković

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    function translate(number, withoutSuffix, key) {
	        var result = number + ' ';
	        switch (key) {
	            case 'm':
	                return withoutSuffix ? 'jedna minuta' : 'jedne minute';
	            case 'mm':
	                if (number === 1) {
	                    result += 'minuta';
	                } else if (number === 2 || number === 3 || number === 4) {
	                    result += 'minute';
	                } else {
	                    result += 'minuta';
	                }
	                return result;
	            case 'h':
	                return withoutSuffix ? 'jedan sat' : 'jednog sata';
	            case 'hh':
	                if (number === 1) {
	                    result += 'sat';
	                } else if (number === 2 || number === 3 || number === 4) {
	                    result += 'sata';
	                } else {
	                    result += 'sati';
	                }
	                return result;
	            case 'dd':
	                if (number === 1) {
	                    result += 'dan';
	                } else {
	                    result += 'dana';
	                }
	                return result;
	            case 'MM':
	                if (number === 1) {
	                    result += 'mjesec';
	                } else if (number === 2 || number === 3 || number === 4) {
	                    result += 'mjeseca';
	                } else {
	                    result += 'mjeseci';
	                }
	                return result;
	            case 'yy':
	                if (number === 1) {
	                    result += 'godina';
	                } else if (number === 2 || number === 3 || number === 4) {
	                    result += 'godine';
	                } else {
	                    result += 'godina';
	                }
	                return result;
	        }
	    }

	    return moment.defineLocale('bs', {
	        months: 'januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar'.split('_'),
	        monthsShort: 'jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.'.split('_'),
	        weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
	        weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
	        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS: 'LT:ss',
	            L: 'DD. MM. YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY LT',
	            LLLL: 'dddd, D. MMMM YYYY LT'
	        },
	        calendar: {
	            sameDay: '[danas u] LT',
	            nextDay: '[sutra u] LT',

	            nextWeek: function nextWeek() {
	                switch (this.day()) {
	                    case 0:
	                        return '[u] [nedjelju] [u] LT';
	                    case 3:
	                        return '[u] [srijedu] [u] LT';
	                    case 6:
	                        return '[u] [subotu] [u] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                    case 5:
	                        return '[u] dddd [u] LT';
	                }
	            },
	            lastDay: '[jučer u] LT',
	            lastWeek: function lastWeek() {
	                switch (this.day()) {
	                    case 0:
	                    case 3:
	                        return '[prošlu] dddd [u] LT';
	                    case 6:
	                        return '[prošle] [subote] [u] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                    case 5:
	                        return '[prošli] dddd [u] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'za %s',
	            past: 'prije %s',
	            s: 'par sekundi',
	            m: translate,
	            mm: translate,
	            h: translate,
	            hh: translate,
	            d: 'dan',
	            dd: translate,
	            M: 'mjesec',
	            MM: translate,
	            y: 'godinu',
	            yy: translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal: '%d.',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 7 // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	});

/***/ },
/* 63 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : catalan (ca)
	// author : Juan G. Hurtado : https://github.com/juanghurtado

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    return moment.defineLocale('ca', {
	        months: 'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split('_'),
	        monthsShort: 'gen._febr._mar._abr._mai._jun._jul._ag._set._oct._nov._des.'.split('_'),
	        weekdays: 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split('_'),
	        weekdaysShort: 'dg._dl._dt._dc._dj._dv._ds.'.split('_'),
	        weekdaysMin: 'Dg_Dl_Dt_Dc_Dj_Dv_Ds'.split('_'),
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS: 'LT:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY LT',
	            LLLL: 'dddd D MMMM YYYY LT'
	        },
	        calendar: {
	            sameDay: function sameDay() {
	                return '[avui a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT';
	            },
	            nextDay: function nextDay() {
	                return '[demà a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT';
	            },
	            nextWeek: function nextWeek() {
	                return 'dddd [a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT';
	            },
	            lastDay: function lastDay() {
	                return '[ahir a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT';
	            },
	            lastWeek: function lastWeek() {
	                return '[el] dddd [passat a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT';
	            },
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'en %s',
	            past: 'fa %s',
	            s: 'uns segons',
	            m: 'un minut',
	            mm: '%d minuts',
	            h: 'una hora',
	            hh: '%d hores',
	            d: 'un dia',
	            dd: '%d dies',
	            M: 'un mes',
	            MM: '%d mesos',
	            y: 'un any',
	            yy: '%d anys'
	        },
	        ordinalParse: /\d{1,2}(r|n|t|è|a)/,
	        ordinal: function ordinal(number, period) {
	            var output = number === 1 ? 'r' : number === 2 ? 'n' : number === 3 ? 'r' : number === 4 ? 't' : 'è';
	            if (period === 'w' || period === 'W') {
	                output = 'a';
	            }
	            return number + output;
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	});

/***/ },
/* 64 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : czech (cs)
	// author : petrbela : https://github.com/petrbela

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    var months = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split('_'),
	        monthsShort = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_');

	    function plural(n) {
	        return n > 1 && n < 5 && ~ ~(n / 10) !== 1;
	    }

	    function translate(number, withoutSuffix, key, isFuture) {
	        var result = number + ' ';
	        switch (key) {
	            case 's':
	                // a few seconds / in a few seconds / a few seconds ago
	                return withoutSuffix || isFuture ? 'pár sekund' : 'pár sekundami';
	            case 'm':
	                // a minute / in a minute / a minute ago
	                return withoutSuffix ? 'minuta' : isFuture ? 'minutu' : 'minutou';
	            case 'mm':
	                // 9 minutes / in 9 minutes / 9 minutes ago
	                if (withoutSuffix || isFuture) {
	                    return result + (plural(number) ? 'minuty' : 'minut');
	                } else {
	                    return result + 'minutami';
	                }
	                break;
	            case 'h':
	                // an hour / in an hour / an hour ago
	                return withoutSuffix ? 'hodina' : isFuture ? 'hodinu' : 'hodinou';
	            case 'hh':
	                // 9 hours / in 9 hours / 9 hours ago
	                if (withoutSuffix || isFuture) {
	                    return result + (plural(number) ? 'hodiny' : 'hodin');
	                } else {
	                    return result + 'hodinami';
	                }
	                break;
	            case 'd':
	                // a day / in a day / a day ago
	                return withoutSuffix || isFuture ? 'den' : 'dnem';
	            case 'dd':
	                // 9 days / in 9 days / 9 days ago
	                if (withoutSuffix || isFuture) {
	                    return result + (plural(number) ? 'dny' : 'dní');
	                } else {
	                    return result + 'dny';
	                }
	                break;
	            case 'M':
	                // a month / in a month / a month ago
	                return withoutSuffix || isFuture ? 'měsíc' : 'měsícem';
	            case 'MM':
	                // 9 months / in 9 months / 9 months ago
	                if (withoutSuffix || isFuture) {
	                    return result + (plural(number) ? 'měsíce' : 'měsíců');
	                } else {
	                    return result + 'měsíci';
	                }
	                break;
	            case 'y':
	                // a year / in a year / a year ago
	                return withoutSuffix || isFuture ? 'rok' : 'rokem';
	            case 'yy':
	                // 9 years / in 9 years / 9 years ago
	                if (withoutSuffix || isFuture) {
	                    return result + (plural(number) ? 'roky' : 'let');
	                } else {
	                    return result + 'lety';
	                }
	                break;
	        }
	    }

	    return moment.defineLocale('cs', {
	        months: months,
	        monthsShort: monthsShort,
	        monthsParse: (function (months, monthsShort) {
	            var i,
	                _monthsParse = [];
	            for (i = 0; i < 12; i++) {
	                // use custom parser to solve problem with July (červenec)
	                _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');
	            }
	            return _monthsParse;
	        })(months, monthsShort),
	        weekdays: 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),
	        weekdaysShort: 'ne_po_út_st_čt_pá_so'.split('_'),
	        weekdaysMin: 'ne_po_út_st_čt_pá_so'.split('_'),
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS: 'LT:ss',
	            L: 'DD.MM.YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY LT',
	            LLLL: 'dddd D. MMMM YYYY LT'
	        },
	        calendar: {
	            sameDay: '[dnes v] LT',
	            nextDay: '[zítra v] LT',
	            nextWeek: function nextWeek() {
	                switch (this.day()) {
	                    case 0:
	                        return '[v neděli v] LT';
	                    case 1:
	                    case 2:
	                        return '[v] dddd [v] LT';
	                    case 3:
	                        return '[ve středu v] LT';
	                    case 4:
	                        return '[ve čtvrtek v] LT';
	                    case 5:
	                        return '[v pátek v] LT';
	                    case 6:
	                        return '[v sobotu v] LT';
	                }
	            },
	            lastDay: '[včera v] LT',
	            lastWeek: function lastWeek() {
	                switch (this.day()) {
	                    case 0:
	                        return '[minulou neděli v] LT';
	                    case 1:
	                    case 2:
	                        return '[minulé] dddd [v] LT';
	                    case 3:
	                        return '[minulou středu v] LT';
	                    case 4:
	                    case 5:
	                        return '[minulý] dddd [v] LT';
	                    case 6:
	                        return '[minulou sobotu v] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'za %s',
	            past: 'před %s',
	            s: translate,
	            m: translate,
	            mm: translate,
	            h: translate,
	            hh: translate,
	            d: translate,
	            dd: translate,
	            M: translate,
	            MM: translate,
	            y: translate,
	            yy: translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal: '%d.',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	});

/***/ },
/* 65 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : chuvash (cv)
	// author : Anatoly Mironov : https://github.com/mirontoli

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    return moment.defineLocale('cv', {
	        months: 'кăрлач_нарăс_пуш_ака_май_çĕртме_утă_çурла_авăн_юпа_чӳк_раштав'.split('_'),
	        monthsShort: 'кăр_нар_пуш_ака_май_çĕр_утă_çур_ав_юпа_чӳк_раш'.split('_'),
	        weekdays: 'вырсарникун_тунтикун_ытларикун_юнкун_кĕçнерникун_эрнекун_шăматкун'.split('_'),
	        weekdaysShort: 'выр_тун_ытл_юн_кĕç_эрн_шăм'.split('_'),
	        weekdaysMin: 'вр_тн_ыт_юн_кç_эр_шм'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'LT:ss',
	            L: 'DD-MM-YYYY',
	            LL: 'YYYY [çулхи] MMMM [уйăхĕн] D[-мĕшĕ]',
	            LLL: 'YYYY [çулхи] MMMM [уйăхĕн] D[-мĕшĕ], LT',
	            LLLL: 'dddd, YYYY [çулхи] MMMM [уйăхĕн] D[-мĕшĕ], LT'
	        },
	        calendar: {
	            sameDay: '[Паян] LT [сехетре]',
	            nextDay: '[Ыран] LT [сехетре]',
	            lastDay: '[Ĕнер] LT [сехетре]',
	            nextWeek: '[Çитес] dddd LT [сехетре]',
	            lastWeek: '[Иртнĕ] dddd LT [сехетре]',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: function future(output) {
	                var affix = /сехет$/i.exec(output) ? 'рен' : /çул$/i.exec(output) ? 'тан' : 'ран';
	                return output + affix;
	            },
	            past: '%s каялла',
	            s: 'пĕр-ик çеккунт',
	            m: 'пĕр минут',
	            mm: '%d минут',
	            h: 'пĕр сехет',
	            hh: '%d сехет',
	            d: 'пĕр кун',
	            dd: '%d кун',
	            M: 'пĕр уйăх',
	            MM: '%d уйăх',
	            y: 'пĕр çул',
	            yy: '%d çул'
	        },
	        ordinalParse: /\d{1,2}-мĕш/,
	        ordinal: '%d-мĕш',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 7 // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	});

/***/ },
/* 66 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : Welsh (cy)
	// author : Robert Allen

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    return moment.defineLocale('cy', {
	        months: 'Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr'.split('_'),
	        monthsShort: 'Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag'.split('_'),
	        weekdays: 'Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn'.split('_'),
	        weekdaysShort: 'Sul_Llun_Maw_Mer_Iau_Gwe_Sad'.split('_'),
	        weekdaysMin: 'Su_Ll_Ma_Me_Ia_Gw_Sa'.split('_'),
	        // time formats are the same as en-gb
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'LT:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY LT',
	            LLLL: 'dddd, D MMMM YYYY LT'
	        },
	        calendar: {
	            sameDay: '[Heddiw am] LT',
	            nextDay: '[Yfory am] LT',
	            nextWeek: 'dddd [am] LT',
	            lastDay: '[Ddoe am] LT',
	            lastWeek: 'dddd [diwethaf am] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'mewn %s',
	            past: '%s yn ôl',
	            s: 'ychydig eiliadau',
	            m: 'munud',
	            mm: '%d munud',
	            h: 'awr',
	            hh: '%d awr',
	            d: 'diwrnod',
	            dd: '%d diwrnod',
	            M: 'mis',
	            MM: '%d mis',
	            y: 'blwyddyn',
	            yy: '%d flynedd'
	        },
	        ordinalParse: /\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,
	        // traditional ordinal numbers above 31 are not commonly used in colloquial Welsh
	        ordinal: function ordinal(number) {
	            var b = number,
	                output = '',
	                lookup = ['', 'af', 'il', 'ydd', 'ydd', 'ed', 'ed', 'ed', 'fed', 'fed', 'fed', // 1af to 10fed
	            'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'fed' // 11eg to 20fed
	            ];

	            if (b > 20) {
	                if (b === 40 || b === 50 || b === 60 || b === 80 || b === 100) {
	                    output = 'fed'; // not 30ain, 70ain or 90ain
	                } else {
	                    output = 'ain';
	                }
	            } else if (b > 0) {
	                output = lookup[b];
	            }

	            return number + output;
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	});

/***/ },
/* 67 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : danish (da)
	// author : Ulrik Nielsen : https://github.com/mrbase

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    return moment.defineLocale('da', {
	        months: 'januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december'.split('_'),
	        monthsShort: 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
	        weekdays: 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
	        weekdaysShort: 'søn_man_tir_ons_tor_fre_lør'.split('_'),
	        weekdaysMin: 'sø_ma_ti_on_to_fr_lø'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'LT:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY LT',
	            LLLL: 'dddd [d.] D. MMMM YYYY LT'
	        },
	        calendar: {
	            sameDay: '[I dag kl.] LT',
	            nextDay: '[I morgen kl.] LT',
	            nextWeek: 'dddd [kl.] LT',
	            lastDay: '[I går kl.] LT',
	            lastWeek: '[sidste] dddd [kl] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'om %s',
	            past: '%s siden',
	            s: 'få sekunder',
	            m: 'et minut',
	            mm: '%d minutter',
	            h: 'en time',
	            hh: '%d timer',
	            d: 'en dag',
	            dd: '%d dage',
	            M: 'en måned',
	            MM: '%d måneder',
	            y: 'et år',
	            yy: '%d år'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal: '%d.',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	});

/***/ },
/* 68 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : austrian german (de-at)
	// author : lluchs : https://github.com/lluchs
	// author: Menelion Elensúle: https://github.com/Oire
	// author : Martin Groller : https://github.com/MadMG

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var format = {
	            'm': ['eine Minute', 'einer Minute'],
	            'h': ['eine Stunde', 'einer Stunde'],
	            'd': ['ein Tag', 'einem Tag'],
	            'dd': [number + ' Tage', number + ' Tagen'],
	            'M': ['ein Monat', 'einem Monat'],
	            'MM': [number + ' Monate', number + ' Monaten'],
	            'y': ['ein Jahr', 'einem Jahr'],
	            'yy': [number + ' Jahre', number + ' Jahren']
	        };
	        return withoutSuffix ? format[key][0] : format[key][1];
	    }

	    return moment.defineLocale('de-at', {
	        months: 'Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
	        monthsShort: 'Jän._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),
	        weekdays: 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
	        weekdaysShort: 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
	        weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD.MM.YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY LT',
	            LLLL: 'dddd, D. MMMM YYYY LT'
	        },
	        calendar: {
	            sameDay: '[Heute um] LT [Uhr]',
	            sameElse: 'L',
	            nextDay: '[Morgen um] LT [Uhr]',
	            nextWeek: 'dddd [um] LT [Uhr]',
	            lastDay: '[Gestern um] LT [Uhr]',
	            lastWeek: '[letzten] dddd [um] LT [Uhr]'
	        },
	        relativeTime: {
	            future: 'in %s',
	            past: 'vor %s',
	            s: 'ein paar Sekunden',
	            m: processRelativeTime,
	            mm: '%d Minuten',
	            h: processRelativeTime,
	            hh: '%d Stunden',
	            d: processRelativeTime,
	            dd: processRelativeTime,
	            M: processRelativeTime,
	            MM: processRelativeTime,
	            y: processRelativeTime,
	            yy: processRelativeTime
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal: '%d.',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	});

/***/ },
/* 69 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : german (de)
	// author : lluchs : https://github.com/lluchs
	// author: Menelion Elensúle: https://github.com/Oire

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var format = {
	            'm': ['eine Minute', 'einer Minute'],
	            'h': ['eine Stunde', 'einer Stunde'],
	            'd': ['ein Tag', 'einem Tag'],
	            'dd': [number + ' Tage', number + ' Tagen'],
	            'M': ['ein Monat', 'einem Monat'],
	            'MM': [number + ' Monate', number + ' Monaten'],
	            'y': ['ein Jahr', 'einem Jahr'],
	            'yy': [number + ' Jahre', number + ' Jahren']
	        };
	        return withoutSuffix ? format[key][0] : format[key][1];
	    }

	    return moment.defineLocale('de', {
	        months: 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
	        monthsShort: 'Jan._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),
	        weekdays: 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
	        weekdaysShort: 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
	        weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD.MM.YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY LT',
	            LLLL: 'dddd, D. MMMM YYYY LT'
	        },
	        calendar: {
	            sameDay: '[Heute um] LT [Uhr]',
	            sameElse: 'L',
	            nextDay: '[Morgen um] LT [Uhr]',
	            nextWeek: 'dddd [um] LT [Uhr]',
	            lastDay: '[Gestern um] LT [Uhr]',
	            lastWeek: '[letzten] dddd [um] LT [Uhr]'
	        },
	        relativeTime: {
	            future: 'in %s',
	            past: 'vor %s',
	            s: 'ein paar Sekunden',
	            m: processRelativeTime,
	            mm: '%d Minuten',
	            h: processRelativeTime,
	            hh: '%d Stunden',
	            d: processRelativeTime,
	            dd: processRelativeTime,
	            M: processRelativeTime,
	            MM: processRelativeTime,
	            y: processRelativeTime,
	            yy: processRelativeTime
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal: '%d.',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	});

/***/ },
/* 70 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : modern greek (el)
	// author : Aggelos Karalias : https://github.com/mehiel

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    return moment.defineLocale('el', {
	        monthsNominativeEl: 'Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος'.split('_'),
	        monthsGenitiveEl: 'Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου'.split('_'),
	        months: function months(momentToFormat, format) {
	            if (/D/.test(format.substring(0, format.indexOf('MMMM')))) {
	                // if there is a day number before 'MMMM'
	                return this._monthsGenitiveEl[momentToFormat.month()];
	            } else {
	                return this._monthsNominativeEl[momentToFormat.month()];
	            }
	        },
	        monthsShort: 'Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ'.split('_'),
	        weekdays: 'Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο'.split('_'),
	        weekdaysShort: 'Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ'.split('_'),
	        weekdaysMin: 'Κυ_Δε_Τρ_Τε_Πε_Πα_Σα'.split('_'),
	        meridiem: function meridiem(hours, minutes, isLower) {
	            if (hours > 11) {
	                return isLower ? 'μμ' : 'ΜΜ';
	            } else {
	                return isLower ? 'πμ' : 'ΠΜ';
	            }
	        },
	        isPM: function isPM(input) {
	            return (input + '').toLowerCase()[0] === 'μ';
	        },
	        meridiemParse: /[ΠΜ]\.?Μ?\.?/i,
	        longDateFormat: {
	            LT: 'h:mm A',
	            LTS: 'h:mm:ss A',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY LT',
	            LLLL: 'dddd, D MMMM YYYY LT'
	        },
	        calendarEl: {
	            sameDay: '[Σήμερα {}] LT',
	            nextDay: '[Αύριο {}] LT',
	            nextWeek: 'dddd [{}] LT',
	            lastDay: '[Χθες {}] LT',
	            lastWeek: function lastWeek() {
	                switch (this.day()) {
	                    case 6:
	                        return '[το προηγούμενο] dddd [{}] LT';
	                    default:
	                        return '[την προηγούμενη] dddd [{}] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        calendar: function calendar(key, mom) {
	            var output = this._calendarEl[key],
	                hours = mom && mom.hours();

	            if (typeof output === 'function') {
	                output = output.apply(mom);
	            }

	            return output.replace('{}', hours % 12 === 1 ? 'στη' : 'στις');
	        },
	        relativeTime: {
	            future: 'σε %s',
	            past: '%s πριν',
	            s: 'λίγα δευτερόλεπτα',
	            m: 'ένα λεπτό',
	            mm: '%d λεπτά',
	            h: 'μία ώρα',
	            hh: '%d ώρες',
	            d: 'μία μέρα',
	            dd: '%d μέρες',
	            M: 'ένας μήνας',
	            MM: '%d μήνες',
	            y: 'ένας χρόνος',
	            yy: '%d χρόνια'
	        },
	        ordinalParse: /\d{1,2}η/,
	        ordinal: '%dη',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4st is the first week of the year.
	        }
	    });
	});

/***/ },
/* 71 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : australian english (en-au)

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    return moment.defineLocale('en-au', {
	        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	        longDateFormat: {
	            LT: 'h:mm A',
	            LTS: 'h:mm:ss A',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY LT',
	            LLLL: 'dddd, D MMMM YYYY LT'
	        },
	        calendar: {
	            sameDay: '[Today at] LT',
	            nextDay: '[Tomorrow at] LT',
	            nextWeek: 'dddd [at] LT',
	            lastDay: '[Yesterday at] LT',
	            lastWeek: '[Last] dddd [at] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'in %s',
	            past: '%s ago',
	            s: 'a few seconds',
	            m: 'a minute',
	            mm: '%d minutes',
	            h: 'an hour',
	            hh: '%d hours',
	            d: 'a day',
	            dd: '%d days',
	            M: 'a month',
	            MM: '%d months',
	            y: 'a year',
	            yy: '%d years'
	        },
	        ordinalParse: /\d{1,2}(st|nd|rd|th)/,
	        ordinal: function ordinal(number) {
	            var b = number % 10,
	                output = ~ ~(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';
	            return number + output;
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	});

/***/ },
/* 72 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : canadian english (en-ca)
	// author : Jonathan Abourbih : https://github.com/jonbca

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    return moment.defineLocale('en-ca', {
	        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	        longDateFormat: {
	            LT: 'h:mm A',
	            LTS: 'h:mm:ss A',
	            L: 'YYYY-MM-DD',
	            LL: 'D MMMM, YYYY',
	            LLL: 'D MMMM, YYYY LT',
	            LLLL: 'dddd, D MMMM, YYYY LT'
	        },
	        calendar: {
	            sameDay: '[Today at] LT',
	            nextDay: '[Tomorrow at] LT',
	            nextWeek: 'dddd [at] LT',
	            lastDay: '[Yesterday at] LT',
	            lastWeek: '[Last] dddd [at] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'in %s',
	            past: '%s ago',
	            s: 'a few seconds',
	            m: 'a minute',
	            mm: '%d minutes',
	            h: 'an hour',
	            hh: '%d hours',
	            d: 'a day',
	            dd: '%d days',
	            M: 'a month',
	            MM: '%d months',
	            y: 'a year',
	            yy: '%d years'
	        },
	        ordinalParse: /\d{1,2}(st|nd|rd|th)/,
	        ordinal: function ordinal(number) {
	            var b = number % 10,
	                output = ~ ~(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';
	            return number + output;
	        }
	    });
	});

/***/ },
/* 73 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : great britain english (en-gb)
	// author : Chris Gedrim : https://github.com/chrisgedrim

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    return moment.defineLocale('en-gb', {
	        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY LT',
	            LLLL: 'dddd, D MMMM YYYY LT'
	        },
	        calendar: {
	            sameDay: '[Today at] LT',
	            nextDay: '[Tomorrow at] LT',
	            nextWeek: 'dddd [at] LT',
	            lastDay: '[Yesterday at] LT',
	            lastWeek: '[Last] dddd [at] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'in %s',
	            past: '%s ago',
	            s: 'a few seconds',
	            m: 'a minute',
	            mm: '%d minutes',
	            h: 'an hour',
	            hh: '%d hours',
	            d: 'a day',
	            dd: '%d days',
	            M: 'a month',
	            MM: '%d months',
	            y: 'a year',
	            yy: '%d years'
	        },
	        ordinalParse: /\d{1,2}(st|nd|rd|th)/,
	        ordinal: function ordinal(number) {
	            var b = number % 10,
	                output = ~ ~(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';
	            return number + output;
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	});

/***/ },
/* 74 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : esperanto (eo)
	// author : Colin Dean : https://github.com/colindean
	// komento: Mi estas malcerta se mi korekte traktis akuzativojn en tiu traduko.
	//          Se ne, bonvolu korekti kaj avizi min por ke mi povas lerni!

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    return moment.defineLocale('eo', {
	        months: 'januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro'.split('_'),
	        monthsShort: 'jan_feb_mar_apr_maj_jun_jul_aŭg_sep_okt_nov_dec'.split('_'),
	        weekdays: 'Dimanĉo_Lundo_Mardo_Merkredo_Ĵaŭdo_Vendredo_Sabato'.split('_'),
	        weekdaysShort: 'Dim_Lun_Mard_Merk_Ĵaŭ_Ven_Sab'.split('_'),
	        weekdaysMin: 'Di_Lu_Ma_Me_Ĵa_Ve_Sa'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'LT:ss',
	            L: 'YYYY-MM-DD',
	            LL: 'D[-an de] MMMM, YYYY',
	            LLL: 'D[-an de] MMMM, YYYY LT',
	            LLLL: 'dddd, [la] D[-an de] MMMM, YYYY LT'
	        },
	        meridiemParse: /[ap]\.t\.m/i,
	        isPM: function isPM(input) {
	            return input.charAt(0).toLowerCase() === 'p';
	        },
	        meridiem: function meridiem(hours, minutes, isLower) {
	            if (hours > 11) {
	                return isLower ? 'p.t.m.' : 'P.T.M.';
	            } else {
	                return isLower ? 'a.t.m.' : 'A.T.M.';
	            }
	        },
	        calendar: {
	            sameDay: '[Hodiaŭ je] LT',
	            nextDay: '[Morgaŭ je] LT',
	            nextWeek: 'dddd [je] LT',
	            lastDay: '[Hieraŭ je] LT',
	            lastWeek: '[pasinta] dddd [je] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'je %s',
	            past: 'antaŭ %s',
	            s: 'sekundoj',
	            m: 'minuto',
	            mm: '%d minutoj',
	            h: 'horo',
	            hh: '%d horoj',
	            d: 'tago', //ne 'diurno', ĉar estas uzita por proksimumo
	            dd: '%d tagoj',
	            M: 'monato',
	            MM: '%d monatoj',
	            y: 'jaro',
	            yy: '%d jaroj'
	        },
	        ordinalParse: /\d{1,2}a/,
	        ordinal: '%da',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 7 // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	});

/***/ },
/* 75 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : spanish (es)
	// author : Julio Napurí : https://github.com/julionc

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),
	        _monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');

	    return moment.defineLocale('es', {
	        months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
	        monthsShort: function monthsShort(m, format) {
	            if (/-MMM-/.test(format)) {
	                return _monthsShort[m.month()];
	            } else {
	                return monthsShortDot[m.month()];
	            }
	        },
	        weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
	        weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
	        weekdaysMin: 'Do_Lu_Ma_Mi_Ju_Vi_Sá'.split('_'),
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS: 'LT:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D [de] MMMM [de] YYYY',
	            LLL: 'D [de] MMMM [de] YYYY LT',
	            LLLL: 'dddd, D [de] MMMM [de] YYYY LT'
	        },
	        calendar: {
	            sameDay: function sameDay() {
	                return '[hoy a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
	            },
	            nextDay: function nextDay() {
	                return '[mañana a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
	            },
	            nextWeek: function nextWeek() {
	                return 'dddd [a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
	            },
	            lastDay: function lastDay() {
	                return '[ayer a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
	            },
	            lastWeek: function lastWeek() {
	                return '[el] dddd [pasado a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
	            },
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'en %s',
	            past: 'hace %s',
	            s: 'unos segundos',
	            m: 'un minuto',
	            mm: '%d minutos',
	            h: 'una hora',
	            hh: '%d horas',
	            d: 'un día',
	            dd: '%d días',
	            M: 'un mes',
	            MM: '%d meses',
	            y: 'un año',
	            yy: '%d años'
	        },
	        ordinalParse: /\d{1,2}º/,
	        ordinal: '%dº',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	});

/***/ },
/* 76 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : estonian (et)
	// author : Henry Kehlmann : https://github.com/madhenry
	// improvements : Illimar Tambek : https://github.com/ragulka

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var format = {
	            's': ['mõne sekundi', 'mõni sekund', 'paar sekundit'],
	            'm': ['ühe minuti', 'üks minut'],
	            'mm': [number + ' minuti', number + ' minutit'],
	            'h': ['ühe tunni', 'tund aega', 'üks tund'],
	            'hh': [number + ' tunni', number + ' tundi'],
	            'd': ['ühe päeva', 'üks päev'],
	            'M': ['kuu aja', 'kuu aega', 'üks kuu'],
	            'MM': [number + ' kuu', number + ' kuud'],
	            'y': ['ühe aasta', 'aasta', 'üks aasta'],
	            'yy': [number + ' aasta', number + ' aastat']
	        };
	        if (withoutSuffix) {
	            return format[key][2] ? format[key][2] : format[key][1];
	        }
	        return isFuture ? format[key][0] : format[key][1];
	    }

	    return moment.defineLocale('et', {
	        months: 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split('_'),
	        monthsShort: 'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split('_'),
	        weekdays: 'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split('_'),
	        weekdaysShort: 'P_E_T_K_N_R_L'.split('_'),
	        weekdaysMin: 'P_E_T_K_N_R_L'.split('_'),
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS: 'LT:ss',
	            L: 'DD.MM.YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY LT',
	            LLLL: 'dddd, D. MMMM YYYY LT'
	        },
	        calendar: {
	            sameDay: '[Täna,] LT',
	            nextDay: '[Homme,] LT',
	            nextWeek: '[Järgmine] dddd LT',
	            lastDay: '[Eile,] LT',
	            lastWeek: '[Eelmine] dddd LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: '%s pärast',
	            past: '%s tagasi',
	            s: processRelativeTime,
	            m: processRelativeTime,
	            mm: processRelativeTime,
	            h: processRelativeTime,
	            hh: processRelativeTime,
	            d: processRelativeTime,
	            dd: '%d päeva',
	            M: processRelativeTime,
	            MM: processRelativeTime,
	            y: processRelativeTime,
	            yy: processRelativeTime
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal: '%d.',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	});

/***/ },
/* 77 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : euskara (eu)
	// author : Eneko Illarramendi : https://github.com/eillarra

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    return moment.defineLocale('eu', {
	        months: 'urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua'.split('_'),
	        monthsShort: 'urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.'.split('_'),
	        weekdays: 'igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata'.split('_'),
	        weekdaysShort: 'ig._al._ar._az._og._ol._lr.'.split('_'),
	        weekdaysMin: 'ig_al_ar_az_og_ol_lr'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'LT:ss',
	            L: 'YYYY-MM-DD',
	            LL: 'YYYY[ko] MMMM[ren] D[a]',
	            LLL: 'YYYY[ko] MMMM[ren] D[a] LT',
	            LLLL: 'dddd, YYYY[ko] MMMM[ren] D[a] LT',
	            l: 'YYYY-M-D',
	            ll: 'YYYY[ko] MMM D[a]',
	            lll: 'YYYY[ko] MMM D[a] LT',
	            llll: 'ddd, YYYY[ko] MMM D[a] LT'
	        },
	        calendar: {
	            sameDay: '[gaur] LT[etan]',
	            nextDay: '[bihar] LT[etan]',
	            nextWeek: 'dddd LT[etan]',
	            lastDay: '[atzo] LT[etan]',
	            lastWeek: '[aurreko] dddd LT[etan]',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: '%s barru',
	            past: 'duela %s',
	            s: 'segundo batzuk',
	            m: 'minutu bat',
	            mm: '%d minutu',
	            h: 'ordu bat',
	            hh: '%d ordu',
	            d: 'egun bat',
	            dd: '%d egun',
	            M: 'hilabete bat',
	            MM: '%d hilabete',
	            y: 'urte bat',
	            yy: '%d urte'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal: '%d.',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 7 // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	});

/***/ },
/* 78 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : Persian (fa)
	// author : Ebrahim Byagowi : https://github.com/ebraminio

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    var symbolMap = {
	        '1': '۱',
	        '2': '۲',
	        '3': '۳',
	        '4': '۴',
	        '5': '۵',
	        '6': '۶',
	        '7': '۷',
	        '8': '۸',
	        '9': '۹',
	        '0': '۰'
	    },
	        numberMap = {
	        '۱': '1',
	        '۲': '2',
	        '۳': '3',
	        '۴': '4',
	        '۵': '5',
	        '۶': '6',
	        '۷': '7',
	        '۸': '8',
	        '۹': '9',
	        '۰': '0'
	    };

	    return moment.defineLocale('fa', {
	        months: 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),
	        monthsShort: 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),
	        weekdays: 'یک‌شنبه_دوشنبه_سه‌شنبه_چهارشنبه_پنج‌شنبه_جمعه_شنبه'.split('_'),
	        weekdaysShort: 'یک‌شنبه_دوشنبه_سه‌شنبه_چهارشنبه_پنج‌شنبه_جمعه_شنبه'.split('_'),
	        weekdaysMin: 'ی_د_س_چ_پ_ج_ش'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'LT:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY LT',
	            LLLL: 'dddd, D MMMM YYYY LT'
	        },
	        meridiemParse: /قبل از ظهر|بعد از ظهر/,
	        isPM: function isPM(input) {
	            return /بعد از ظهر/.test(input);
	        },
	        meridiem: function meridiem(hour, minute, isLower) {
	            if (hour < 12) {
	                return 'قبل از ظهر';
	            } else {
	                return 'بعد از ظهر';
	            }
	        },
	        calendar: {
	            sameDay: '[امروز ساعت] LT',
	            nextDay: '[فردا ساعت] LT',
	            nextWeek: 'dddd [ساعت] LT',
	            lastDay: '[دیروز ساعت] LT',
	            lastWeek: 'dddd [پیش] [ساعت] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'در %s',
	            past: '%s پیش',
	            s: 'چندین ثانیه',
	            m: 'یک دقیقه',
	            mm: '%d دقیقه',
	            h: 'یک ساعت',
	            hh: '%d ساعت',
	            d: 'یک روز',
	            dd: '%d روز',
	            M: 'یک ماه',
	            MM: '%d ماه',
	            y: 'یک سال',
	            yy: '%d سال'
	        },
	        preparse: function preparse(string) {
	            return string.replace(/[۰-۹]/g, function (match) {
	                return numberMap[match];
	            }).replace(/،/g, ',');
	        },
	        postformat: function postformat(string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            }).replace(/,/g, '،');
	        },
	        ordinalParse: /\d{1,2}م/,
	        ordinal: '%dم',
	        week: {
	            dow: 6, // Saturday is the first day of the week.
	            doy: 12 // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	});

/***/ },
/* 79 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : finnish (fi)
	// author : Tarmo Aidantausta : https://github.com/bleadof

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    var numbersPast = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(' '),
	        numbersFuture = ['nolla', 'yhden', 'kahden', 'kolmen', 'neljän', 'viiden', 'kuuden', numbersPast[7], numbersPast[8], numbersPast[9]];

	    function translate(number, withoutSuffix, key, isFuture) {
	        var result = '';
	        switch (key) {
	            case 's':
	                return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';
	            case 'm':
	                return isFuture ? 'minuutin' : 'minuutti';
	            case 'mm':
	                result = isFuture ? 'minuutin' : 'minuuttia';
	                break;
	            case 'h':
	                return isFuture ? 'tunnin' : 'tunti';
	            case 'hh':
	                result = isFuture ? 'tunnin' : 'tuntia';
	                break;
	            case 'd':
	                return isFuture ? 'päivän' : 'päivä';
	            case 'dd':
	                result = isFuture ? 'päivän' : 'päivää';
	                break;
	            case 'M':
	                return isFuture ? 'kuukauden' : 'kuukausi';
	            case 'MM':
	                result = isFuture ? 'kuukauden' : 'kuukautta';
	                break;
	            case 'y':
	                return isFuture ? 'vuoden' : 'vuosi';
	            case 'yy':
	                result = isFuture ? 'vuoden' : 'vuotta';
	                break;
	        }
	        result = verbalNumber(number, isFuture) + ' ' + result;
	        return result;
	    }

	    function verbalNumber(number, isFuture) {
	        return number < 10 ? isFuture ? numbersFuture[number] : numbersPast[number] : number;
	    }

	    return moment.defineLocale('fi', {
	        months: 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split('_'),
	        monthsShort: 'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split('_'),
	        weekdays: 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split('_'),
	        weekdaysShort: 'su_ma_ti_ke_to_pe_la'.split('_'),
	        weekdaysMin: 'su_ma_ti_ke_to_pe_la'.split('_'),
	        longDateFormat: {
	            LT: 'HH.mm',
	            LTS: 'HH.mm.ss',
	            L: 'DD.MM.YYYY',
	            LL: 'Do MMMM[ta] YYYY',
	            LLL: 'Do MMMM[ta] YYYY, [klo] LT',
	            LLLL: 'dddd, Do MMMM[ta] YYYY, [klo] LT',
	            l: 'D.M.YYYY',
	            ll: 'Do MMM YYYY',
	            lll: 'Do MMM YYYY, [klo] LT',
	            llll: 'ddd, Do MMM YYYY, [klo] LT'
	        },
	        calendar: {
	            sameDay: '[tänään] [klo] LT',
	            nextDay: '[huomenna] [klo] LT',
	            nextWeek: 'dddd [klo] LT',
	            lastDay: '[eilen] [klo] LT',
	            lastWeek: '[viime] dddd[na] [klo] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: '%s päästä',
	            past: '%s sitten',
	            s: translate,
	            m: translate,
	            mm: translate,
	            h: translate,
	            hh: translate,
	            d: translate,
	            dd: translate,
	            M: translate,
	            MM: translate,
	            y: translate,
	            yy: translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal: '%d.',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	});

/***/ },
/* 80 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : faroese (fo)
	// author : Ragnar Johannesen : https://github.com/ragnar123

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    return moment.defineLocale('fo', {
	        months: 'januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
	        monthsShort: 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
	        weekdays: 'sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur'.split('_'),
	        weekdaysShort: 'sun_mán_týs_mik_hós_frí_ley'.split('_'),
	        weekdaysMin: 'su_má_tý_mi_hó_fr_le'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'LT:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY LT',
	            LLLL: 'dddd D. MMMM, YYYY LT'
	        },
	        calendar: {
	            sameDay: '[Í dag kl.] LT',
	            nextDay: '[Í morgin kl.] LT',
	            nextWeek: 'dddd [kl.] LT',
	            lastDay: '[Í gjár kl.] LT',
	            lastWeek: '[síðstu] dddd [kl] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'um %s',
	            past: '%s síðani',
	            s: 'fá sekund',
	            m: 'ein minutt',
	            mm: '%d minuttir',
	            h: 'ein tími',
	            hh: '%d tímar',
	            d: 'ein dagur',
	            dd: '%d dagar',
	            M: 'ein mánaði',
	            MM: '%d mánaðir',
	            y: 'eitt ár',
	            yy: '%d ár'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal: '%d.',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	});

/***/ },
/* 81 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : canadian french (fr-ca)
	// author : Jonathan Abourbih : https://github.com/jonbca

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    return moment.defineLocale('fr-ca', {
	        months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
	        monthsShort: 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
	        weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
	        weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
	        weekdaysMin: 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'LT:ss',
	            L: 'YYYY-MM-DD',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY LT',
	            LLLL: 'dddd D MMMM YYYY LT'
	        },
	        calendar: {
	            sameDay: '[Aujourd\'hui à] LT',
	            nextDay: '[Demain à] LT',
	            nextWeek: 'dddd [à] LT',
	            lastDay: '[Hier à] LT',
	            lastWeek: 'dddd [dernier à] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'dans %s',
	            past: 'il y a %s',
	            s: 'quelques secondes',
	            m: 'une minute',
	            mm: '%d minutes',
	            h: 'une heure',
	            hh: '%d heures',
	            d: 'un jour',
	            dd: '%d jours',
	            M: 'un mois',
	            MM: '%d mois',
	            y: 'un an',
	            yy: '%d ans'
	        },
	        ordinalParse: /\d{1,2}(er|)/,
	        ordinal: function ordinal(number) {
	            return number + (number === 1 ? 'er' : '');
	        }
	    });
	});

/***/ },
/* 82 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : french (fr)
	// author : John Fischer : https://github.com/jfroffice

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    return moment.defineLocale('fr', {
	        months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
	        monthsShort: 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
	        weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
	        weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
	        weekdaysMin: 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'LT:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY LT',
	            LLLL: 'dddd D MMMM YYYY LT'
	        },
	        calendar: {
	            sameDay: '[Aujourd\'hui à] LT',
	            nextDay: '[Demain à] LT',
	            nextWeek: 'dddd [à] LT',
	            lastDay: '[Hier à] LT',
	            lastWeek: 'dddd [dernier à] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'dans %s',
	            past: 'il y a %s',
	            s: 'quelques secondes',
	            m: 'une minute',
	            mm: '%d minutes',
	            h: 'une heure',
	            hh: '%d heures',
	            d: 'un jour',
	            dd: '%d jours',
	            M: 'un mois',
	            MM: '%d mois',
	            y: 'un an',
	            yy: '%d ans'
	        },
	        ordinalParse: /\d{1,2}(er|)/,
	        ordinal: function ordinal(number) {
	            return number + (number === 1 ? 'er' : '');
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	});

/***/ },
/* 83 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : frisian (fy)
	// author : Robin van der Vliet : https://github.com/robin0van0der0v

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    var monthsShortWithDots = 'jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.'.split('_'),
	        monthsShortWithoutDots = 'jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_');

	    return moment.defineLocale('fy', {
	        months: 'jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber'.split('_'),
	        monthsShort: function monthsShort(m, format) {
	            if (/-MMM-/.test(format)) {
	                return monthsShortWithoutDots[m.month()];
	            } else {
	                return monthsShortWithDots[m.month()];
	            }
	        },
	        weekdays: 'snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon'.split('_'),
	        weekdaysShort: 'si._mo._ti._wo._to._fr._so.'.split('_'),
	        weekdaysMin: 'Si_Mo_Ti_Wo_To_Fr_So'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'LT:ss',
	            L: 'DD-MM-YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY LT',
	            LLLL: 'dddd D MMMM YYYY LT'
	        },
	        calendar: {
	            sameDay: '[hjoed om] LT',
	            nextDay: '[moarn om] LT',
	            nextWeek: 'dddd [om] LT',
	            lastDay: '[juster om] LT',
	            lastWeek: '[ôfrûne] dddd [om] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'oer %s',
	            past: '%s lyn',
	            s: 'in pear sekonden',
	            m: 'ien minút',
	            mm: '%d minuten',
	            h: 'ien oere',
	            hh: '%d oeren',
	            d: 'ien dei',
	            dd: '%d dagen',
	            M: 'ien moanne',
	            MM: '%d moannen',
	            y: 'ien jier',
	            yy: '%d jierren'
	        },
	        ordinalParse: /\d{1,2}(ste|de)/,
	        ordinal: function ordinal(number) {
	            return number + (number === 1 || number === 8 || number >= 20 ? 'ste' : 'de');
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	});

/***/ },
/* 84 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : galician (gl)
	// author : Juan G. Hurtado : https://github.com/juanghurtado

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    return moment.defineLocale('gl', {
	        months: 'Xaneiro_Febreiro_Marzo_Abril_Maio_Xuño_Xullo_Agosto_Setembro_Outubro_Novembro_Decembro'.split('_'),
	        monthsShort: 'Xan._Feb._Mar._Abr._Mai._Xuñ._Xul._Ago._Set._Out._Nov._Dec.'.split('_'),
	        weekdays: 'Domingo_Luns_Martes_Mércores_Xoves_Venres_Sábado'.split('_'),
	        weekdaysShort: 'Dom._Lun._Mar._Mér._Xov._Ven._Sáb.'.split('_'),
	        weekdaysMin: 'Do_Lu_Ma_Mé_Xo_Ve_Sá'.split('_'),
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS: 'LT:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY LT',
	            LLLL: 'dddd D MMMM YYYY LT'
	        },
	        calendar: {
	            sameDay: function sameDay() {
	                return '[hoxe ' + (this.hours() !== 1 ? 'ás' : 'á') + '] LT';
	            },
	            nextDay: function nextDay() {
	                return '[mañá ' + (this.hours() !== 1 ? 'ás' : 'á') + '] LT';
	            },
	            nextWeek: function nextWeek() {
	                return 'dddd [' + (this.hours() !== 1 ? 'ás' : 'a') + '] LT';
	            },
	            lastDay: function lastDay() {
	                return '[onte ' + (this.hours() !== 1 ? 'á' : 'a') + '] LT';
	            },
	            lastWeek: function lastWeek() {
	                return '[o] dddd [pasado ' + (this.hours() !== 1 ? 'ás' : 'a') + '] LT';
	            },
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: function future(str) {
	                if (str === 'uns segundos') {
	                    return 'nuns segundos';
	                }
	                return 'en ' + str;
	            },
	            past: 'hai %s',
	            s: 'uns segundos',
	            m: 'un minuto',
	            mm: '%d minutos',
	            h: 'unha hora',
	            hh: '%d horas',
	            d: 'un día',
	            dd: '%d días',
	            M: 'un mes',
	            MM: '%d meses',
	            y: 'un ano',
	            yy: '%d anos'
	        },
	        ordinalParse: /\d{1,2}º/,
	        ordinal: '%dº',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 7 // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	});

/***/ },
/* 85 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : Hebrew (he)
	// author : Tomer Cohen : https://github.com/tomer
	// author : Moshe Simantov : https://github.com/DevelopmentIL
	// author : Tal Ater : https://github.com/TalAter

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    return moment.defineLocale('he', {
	        months: 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split('_'),
	        monthsShort: 'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split('_'),
	        weekdays: 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),
	        weekdaysShort: 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),
	        weekdaysMin: 'א_ב_ג_ד_ה_ו_ש'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'LT:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D [ב]MMMM YYYY',
	            LLL: 'D [ב]MMMM YYYY LT',
	            LLLL: 'dddd, D [ב]MMMM YYYY LT',
	            l: 'D/M/YYYY',
	            ll: 'D MMM YYYY',
	            lll: 'D MMM YYYY LT',
	            llll: 'ddd, D MMM YYYY LT'
	        },
	        calendar: {
	            sameDay: '[היום ב־]LT',
	            nextDay: '[מחר ב־]LT',
	            nextWeek: 'dddd [בשעה] LT',
	            lastDay: '[אתמול ב־]LT',
	            lastWeek: '[ביום] dddd [האחרון בשעה] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'בעוד %s',
	            past: 'לפני %s',
	            s: 'מספר שניות',
	            m: 'דקה',
	            mm: '%d דקות',
	            h: 'שעה',
	            hh: function hh(number) {
	                if (number === 2) {
	                    return 'שעתיים';
	                }
	                return number + ' שעות';
	            },
	            d: 'יום',
	            dd: function dd(number) {
	                if (number === 2) {
	                    return 'יומיים';
	                }
	                return number + ' ימים';
	            },
	            M: 'חודש',
	            MM: function MM(number) {
	                if (number === 2) {
	                    return 'חודשיים';
	                }
	                return number + ' חודשים';
	            },
	            y: 'שנה',
	            yy: function yy(number) {
	                if (number === 2) {
	                    return 'שנתיים';
	                } else if (number % 10 === 0 && number !== 10) {
	                    return number + ' שנה';
	                }
	                return number + ' שנים';
	            }
	        }
	    });
	});

/***/ },
/* 86 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : hindi (hi)
	// author : Mayank Singhal : https://github.com/mayanksinghal

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    var symbolMap = {
	        '1': '१',
	        '2': '२',
	        '3': '३',
	        '4': '४',
	        '5': '५',
	        '6': '६',
	        '7': '७',
	        '8': '८',
	        '9': '९',
	        '0': '०'
	    },
	        numberMap = {
	        '१': '1',
	        '२': '2',
	        '३': '3',
	        '४': '4',
	        '५': '5',
	        '६': '6',
	        '७': '7',
	        '८': '8',
	        '९': '9',
	        '०': '0'
	    };

	    return moment.defineLocale('hi', {
	        months: 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split('_'),
	        monthsShort: 'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split('_'),
	        weekdays: 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
	        weekdaysShort: 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),
	        weekdaysMin: 'र_सो_मं_बु_गु_शु_श'.split('_'),
	        longDateFormat: {
	            LT: 'A h:mm बजे',
	            LTS: 'A h:mm:ss बजे',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY, LT',
	            LLLL: 'dddd, D MMMM YYYY, LT'
	        },
	        calendar: {
	            sameDay: '[आज] LT',
	            nextDay: '[कल] LT',
	            nextWeek: 'dddd, LT',
	            lastDay: '[कल] LT',
	            lastWeek: '[पिछले] dddd, LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: '%s में',
	            past: '%s पहले',
	            s: 'कुछ ही क्षण',
	            m: 'एक मिनट',
	            mm: '%d मिनट',
	            h: 'एक घंटा',
	            hh: '%d घंटे',
	            d: 'एक दिन',
	            dd: '%d दिन',
	            M: 'एक महीने',
	            MM: '%d महीने',
	            y: 'एक वर्ष',
	            yy: '%d वर्ष'
	        },
	        preparse: function preparse(string) {
	            return string.replace(/[१२३४५६७८९०]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function postformat(string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        // Hindi notation for meridiems are quite fuzzy in practice. While there exists
	        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.
	        meridiemParse: /रात|सुबह|दोपहर|शाम/,
	        meridiemHour: function meridiemHour(hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'रात') {
	                return hour < 4 ? hour : hour + 12;
	            } else if (meridiem === 'सुबह') {
	                return hour;
	            } else if (meridiem === 'दोपहर') {
	                return hour >= 10 ? hour : hour + 12;
	            } else if (meridiem === 'शाम') {
	                return hour + 12;
	            }
	        },
	        meridiem: function meridiem(hour, minute, isLower) {
	            if (hour < 4) {
	                return 'रात';
	            } else if (hour < 10) {
	                return 'सुबह';
	            } else if (hour < 17) {
	                return 'दोपहर';
	            } else if (hour < 20) {
	                return 'शाम';
	            } else {
	                return 'रात';
	            }
	        },
	        week: {
	            dow: 0, // Sunday is the first day of the week.
	            doy: 6 // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	});

/***/ },
/* 87 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : hrvatski (hr)
	// author : Bojan Marković : https://github.com/bmarkovic

	// based on (sl) translation by Robert Sedovšek

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    function translate(number, withoutSuffix, key) {
	        var result = number + ' ';
	        switch (key) {
	            case 'm':
	                return withoutSuffix ? 'jedna minuta' : 'jedne minute';
	            case 'mm':
	                if (number === 1) {
	                    result += 'minuta';
	                } else if (number === 2 || number === 3 || number === 4) {
	                    result += 'minute';
	                } else {
	                    result += 'minuta';
	                }
	                return result;
	            case 'h':
	                return withoutSuffix ? 'jedan sat' : 'jednog sata';
	            case 'hh':
	                if (number === 1) {
	                    result += 'sat';
	                } else if (number === 2 || number === 3 || number === 4) {
	                    result += 'sata';
	                } else {
	                    result += 'sati';
	                }
	                return result;
	            case 'dd':
	                if (number === 1) {
	                    result += 'dan';
	                } else {
	                    result += 'dana';
	                }
	                return result;
	            case 'MM':
	                if (number === 1) {
	                    result += 'mjesec';
	                } else if (number === 2 || number === 3 || number === 4) {
	                    result += 'mjeseca';
	                } else {
	                    result += 'mjeseci';
	                }
	                return result;
	            case 'yy':
	                if (number === 1) {
	                    result += 'godina';
	                } else if (number === 2 || number === 3 || number === 4) {
	                    result += 'godine';
	                } else {
	                    result += 'godina';
	                }
	                return result;
	        }
	    }

	    return moment.defineLocale('hr', {
	        months: 'sječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac'.split('_'),
	        monthsShort: 'sje._vel._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.'.split('_'),
	        weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
	        weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
	        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS: 'LT:ss',
	            L: 'DD. MM. YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY LT',
	            LLLL: 'dddd, D. MMMM YYYY LT'
	        },
	        calendar: {
	            sameDay: '[danas u] LT',
	            nextDay: '[sutra u] LT',

	            nextWeek: function nextWeek() {
	                switch (this.day()) {
	                    case 0:
	                        return '[u] [nedjelju] [u] LT';
	                    case 3:
	                        return '[u] [srijedu] [u] LT';
	                    case 6:
	                        return '[u] [subotu] [u] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                    case 5:
	                        return '[u] dddd [u] LT';
	                }
	            },
	            lastDay: '[jučer u] LT',
	            lastWeek: function lastWeek() {
	                switch (this.day()) {
	                    case 0:
	                    case 3:
	                        return '[prošlu] dddd [u] LT';
	                    case 6:
	                        return '[prošle] [subote] [u] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                    case 5:
	                        return '[prošli] dddd [u] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'za %s',
	            past: 'prije %s',
	            s: 'par sekundi',
	            m: translate,
	            mm: translate,
	            h: translate,
	            hh: translate,
	            d: 'dan',
	            dd: translate,
	            M: 'mjesec',
	            MM: translate,
	            y: 'godinu',
	            yy: translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal: '%d.',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 7 // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	});

/***/ },
/* 88 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : hungarian (hu)
	// author : Adam Brunner : https://github.com/adambrunner

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    var weekEndings = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(' ');

	    function translate(number, withoutSuffix, key, isFuture) {
	        var num = number,
	            suffix;

	        switch (key) {
	            case 's':
	                return isFuture || withoutSuffix ? 'néhány másodperc' : 'néhány másodperce';
	            case 'm':
	                return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');
	            case 'mm':
	                return num + (isFuture || withoutSuffix ? ' perc' : ' perce');
	            case 'h':
	                return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája');
	            case 'hh':
	                return num + (isFuture || withoutSuffix ? ' óra' : ' órája');
	            case 'd':
	                return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');
	            case 'dd':
	                return num + (isFuture || withoutSuffix ? ' nap' : ' napja');
	            case 'M':
	                return 'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
	            case 'MM':
	                return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
	            case 'y':
	                return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve');
	            case 'yy':
	                return num + (isFuture || withoutSuffix ? ' év' : ' éve');
	        }

	        return '';
	    }

	    function week(isFuture) {
	        return (isFuture ? '' : '[múlt] ') + '[' + weekEndings[this.day()] + '] LT[-kor]';
	    }

	    return moment.defineLocale('hu', {
	        months: 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split('_'),
	        monthsShort: 'jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec'.split('_'),
	        weekdays: 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),
	        weekdaysShort: 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),
	        weekdaysMin: 'v_h_k_sze_cs_p_szo'.split('_'),
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS: 'LT:ss',
	            L: 'YYYY.MM.DD.',
	            LL: 'YYYY. MMMM D.',
	            LLL: 'YYYY. MMMM D., LT',
	            LLLL: 'YYYY. MMMM D., dddd LT'
	        },
	        meridiemParse: /de|du/i,
	        isPM: function isPM(input) {
	            return input.charAt(1).toLowerCase() === 'u';
	        },
	        meridiem: function meridiem(hours, minutes, isLower) {
	            if (hours < 12) {
	                return isLower === true ? 'de' : 'DE';
	            } else {
	                return isLower === true ? 'du' : 'DU';
	            }
	        },
	        calendar: {
	            sameDay: '[ma] LT[-kor]',
	            nextDay: '[holnap] LT[-kor]',
	            nextWeek: function nextWeek() {
	                return week.call(this, true);
	            },
	            lastDay: '[tegnap] LT[-kor]',
	            lastWeek: function lastWeek() {
	                return week.call(this, false);
	            },
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: '%s múlva',
	            past: '%s',
	            s: translate,
	            m: translate,
	            mm: translate,
	            h: translate,
	            hh: translate,
	            d: translate,
	            dd: translate,
	            M: translate,
	            MM: translate,
	            y: translate,
	            yy: translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal: '%d.',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 7 // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	});

/***/ },
/* 89 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : Armenian (hy-am)
	// author : Armendarabyan : https://github.com/armendarabyan

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    function monthsCaseReplace(m, format) {
	        var months = {
	            'nominative': 'հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր'.split('_'),
	            'accusative': 'հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի'.split('_')
	        },
	            nounCase = /D[oD]?(\[[^\[\]]*\]|\s+)+MMMM?/.test(format) ? 'accusative' : 'nominative';

	        return months[nounCase][m.month()];
	    }

	    function monthsShortCaseReplace(m, format) {
	        var monthsShort = 'հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ'.split('_');

	        return monthsShort[m.month()];
	    }

	    function weekdaysCaseReplace(m, format) {
	        var weekdays = 'կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ'.split('_');

	        return weekdays[m.day()];
	    }

	    return moment.defineLocale('hy-am', {
	        months: monthsCaseReplace,
	        monthsShort: monthsShortCaseReplace,
	        weekdays: weekdaysCaseReplace,
	        weekdaysShort: 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
	        weekdaysMin: 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'LT:ss',
	            L: 'DD.MM.YYYY',
	            LL: 'D MMMM YYYY թ.',
	            LLL: 'D MMMM YYYY թ., LT',
	            LLLL: 'dddd, D MMMM YYYY թ., LT'
	        },
	        calendar: {
	            sameDay: '[այսօր] LT',
	            nextDay: '[վաղը] LT',
	            lastDay: '[երեկ] LT',
	            nextWeek: function nextWeek() {
	                return 'dddd [օրը ժամը] LT';
	            },
	            lastWeek: function lastWeek() {
	                return '[անցած] dddd [օրը ժամը] LT';
	            },
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: '%s հետո',
	            past: '%s առաջ',
	            s: 'մի քանի վայրկյան',
	            m: 'րոպե',
	            mm: '%d րոպե',
	            h: 'ժամ',
	            hh: '%d ժամ',
	            d: 'օր',
	            dd: '%d օր',
	            M: 'ամիս',
	            MM: '%d ամիս',
	            y: 'տարի',
	            yy: '%d տարի'
	        },

	        meridiemParse: /գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,
	        isPM: function isPM(input) {
	            return /^(ցերեկվա|երեկոյան)$/.test(input);
	        },
	        meridiem: function meridiem(hour) {
	            if (hour < 4) {
	                return 'գիշերվա';
	            } else if (hour < 12) {
	                return 'առավոտվա';
	            } else if (hour < 17) {
	                return 'ցերեկվա';
	            } else {
	                return 'երեկոյան';
	            }
	        },

	        ordinalParse: /\d{1,2}|\d{1,2}-(ին|րդ)/,
	        ordinal: function ordinal(number, period) {
	            switch (period) {
	                case 'DDD':
	                case 'w':
	                case 'W':
	                case 'DDDo':
	                    if (number === 1) {
	                        return number + '-ին';
	                    }
	                    return number + '-րդ';
	                default:
	                    return number;
	            }
	        },

	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 7 // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	});

/***/ },
/* 90 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : Bahasa Indonesia (id)
	// author : Mohammad Satrio Utomo : https://github.com/tyok
	// reference: http://id.wikisource.org/wiki/Pedoman_Umum_Ejaan_Bahasa_Indonesia_yang_Disempurnakan

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    return moment.defineLocale('id', {
	        months: 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split('_'),
	        monthsShort: 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nov_Des'.split('_'),
	        weekdays: 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),
	        weekdaysShort: 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),
	        weekdaysMin: 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),
	        longDateFormat: {
	            LT: 'HH.mm',
	            LTS: 'LT.ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY [pukul] LT',
	            LLLL: 'dddd, D MMMM YYYY [pukul] LT'
	        },
	        meridiemParse: /pagi|siang|sore|malam/,
	        meridiemHour: function meridiemHour(hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'pagi') {
	                return hour;
	            } else if (meridiem === 'siang') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === 'sore' || meridiem === 'malam') {
	                return hour + 12;
	            }
	        },
	        meridiem: function meridiem(hours, minutes, isLower) {
	            if (hours < 11) {
	                return 'pagi';
	            } else if (hours < 15) {
	                return 'siang';
	            } else if (hours < 19) {
	                return 'sore';
	            } else {
	                return 'malam';
	            }
	        },
	        calendar: {
	            sameDay: '[Hari ini pukul] LT',
	            nextDay: '[Besok pukul] LT',
	            nextWeek: 'dddd [pukul] LT',
	            lastDay: '[Kemarin pukul] LT',
	            lastWeek: 'dddd [lalu pukul] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'dalam %s',
	            past: '%s yang lalu',
	            s: 'beberapa detik',
	            m: 'semenit',
	            mm: '%d menit',
	            h: 'sejam',
	            hh: '%d jam',
	            d: 'sehari',
	            dd: '%d hari',
	            M: 'sebulan',
	            MM: '%d bulan',
	            y: 'setahun',
	            yy: '%d tahun'
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 7 // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	});

/***/ },
/* 91 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : icelandic (is)
	// author : Hinrik Örn Sigurðsson : https://github.com/hinrik

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    function plural(n) {
	        if (n % 100 === 11) {
	            return true;
	        } else if (n % 10 === 1) {
	            return false;
	        }
	        return true;
	    }

	    function translate(number, withoutSuffix, key, isFuture) {
	        var result = number + ' ';
	        switch (key) {
	            case 's':
	                return withoutSuffix || isFuture ? 'nokkrar sekúndur' : 'nokkrum sekúndum';
	            case 'm':
	                return withoutSuffix ? 'mínúta' : 'mínútu';
	            case 'mm':
	                if (plural(number)) {
	                    return result + (withoutSuffix || isFuture ? 'mínútur' : 'mínútum');
	                } else if (withoutSuffix) {
	                    return result + 'mínúta';
	                }
	                return result + 'mínútu';
	            case 'hh':
	                if (plural(number)) {
	                    return result + (withoutSuffix || isFuture ? 'klukkustundir' : 'klukkustundum');
	                }
	                return result + 'klukkustund';
	            case 'd':
	                if (withoutSuffix) {
	                    return 'dagur';
	                }
	                return isFuture ? 'dag' : 'degi';
	            case 'dd':
	                if (plural(number)) {
	                    if (withoutSuffix) {
	                        return result + 'dagar';
	                    }
	                    return result + (isFuture ? 'daga' : 'dögum');
	                } else if (withoutSuffix) {
	                    return result + 'dagur';
	                }
	                return result + (isFuture ? 'dag' : 'degi');
	            case 'M':
	                if (withoutSuffix) {
	                    return 'mánuður';
	                }
	                return isFuture ? 'mánuð' : 'mánuði';
	            case 'MM':
	                if (plural(number)) {
	                    if (withoutSuffix) {
	                        return result + 'mánuðir';
	                    }
	                    return result + (isFuture ? 'mánuði' : 'mánuðum');
	                } else if (withoutSuffix) {
	                    return result + 'mánuður';
	                }
	                return result + (isFuture ? 'mánuð' : 'mánuði');
	            case 'y':
	                return withoutSuffix || isFuture ? 'ár' : 'ári';
	            case 'yy':
	                if (plural(number)) {
	                    return result + (withoutSuffix || isFuture ? 'ár' : 'árum');
	                }
	                return result + (withoutSuffix || isFuture ? 'ár' : 'ári');
	        }
	    }

	    return moment.defineLocale('is', {
	        months: 'janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember'.split('_'),
	        monthsShort: 'jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des'.split('_'),
	        weekdays: 'sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur'.split('_'),
	        weekdaysShort: 'sun_mán_þri_mið_fim_fös_lau'.split('_'),
	        weekdaysMin: 'Su_Má_Þr_Mi_Fi_Fö_La'.split('_'),
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS: 'LT:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY [kl.] LT',
	            LLLL: 'dddd, D. MMMM YYYY [kl.] LT'
	        },
	        calendar: {
	            sameDay: '[í dag kl.] LT',
	            nextDay: '[á morgun kl.] LT',
	            nextWeek: 'dddd [kl.] LT',
	            lastDay: '[í gær kl.] LT',
	            lastWeek: '[síðasta] dddd [kl.] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'eftir %s',
	            past: 'fyrir %s síðan',
	            s: translate,
	            m: translate,
	            mm: translate,
	            h: 'klukkustund',
	            hh: translate,
	            d: translate,
	            dd: translate,
	            M: translate,
	            MM: translate,
	            y: translate,
	            yy: translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal: '%d.',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	});

/***/ },
/* 92 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : italian (it)
	// author : Lorenzo : https://github.com/aliem
	// author: Mattia Larentis: https://github.com/nostalgiaz

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    return moment.defineLocale('it', {
	        months: 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),
	        monthsShort: 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),
	        weekdays: 'Domenica_Lunedì_Martedì_Mercoledì_Giovedì_Venerdì_Sabato'.split('_'),
	        weekdaysShort: 'Dom_Lun_Mar_Mer_Gio_Ven_Sab'.split('_'),
	        weekdaysMin: 'D_L_Ma_Me_G_V_S'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'LT:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY LT',
	            LLLL: 'dddd, D MMMM YYYY LT'
	        },
	        calendar: {
	            sameDay: '[Oggi alle] LT',
	            nextDay: '[Domani alle] LT',
	            nextWeek: 'dddd [alle] LT',
	            lastDay: '[Ieri alle] LT',
	            lastWeek: function lastWeek() {
	                switch (this.day()) {
	                    case 0:
	                        return '[la scorsa] dddd [alle] LT';
	                    default:
	                        return '[lo scorso] dddd [alle] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: function future(s) {
	                return (/^[0-9].+$/.test(s) ? 'tra' : 'in') + ' ' + s;
	            },
	            past: '%s fa',
	            s: 'alcuni secondi',
	            m: 'un minuto',
	            mm: '%d minuti',
	            h: 'un\'ora',
	            hh: '%d ore',
	            d: 'un giorno',
	            dd: '%d giorni',
	            M: 'un mese',
	            MM: '%d mesi',
	            y: 'un anno',
	            yy: '%d anni'
	        },
	        ordinalParse: /\d{1,2}º/,
	        ordinal: '%dº',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	});

/***/ },
/* 93 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : japanese (ja)
	// author : LI Long : https://github.com/baryon

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    return moment.defineLocale('ja', {
	        months: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
	        monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
	        weekdays: '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),
	        weekdaysShort: '日_月_火_水_木_金_土'.split('_'),
	        weekdaysMin: '日_月_火_水_木_金_土'.split('_'),
	        longDateFormat: {
	            LT: 'Ah時m分',
	            LTS: 'LTs秒',
	            L: 'YYYY/MM/DD',
	            LL: 'YYYY年M月D日',
	            LLL: 'YYYY年M月D日LT',
	            LLLL: 'YYYY年M月D日LT dddd'
	        },
	        meridiemParse: /午前|午後/i,
	        isPM: function isPM(input) {
	            return input === '午後';
	        },
	        meridiem: function meridiem(hour, minute, isLower) {
	            if (hour < 12) {
	                return '午前';
	            } else {
	                return '午後';
	            }
	        },
	        calendar: {
	            sameDay: '[今日] LT',
	            nextDay: '[明日] LT',
	            nextWeek: '[来週]dddd LT',
	            lastDay: '[昨日] LT',
	            lastWeek: '[前週]dddd LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: '%s後',
	            past: '%s前',
	            s: '数秒',
	            m: '1分',
	            mm: '%d分',
	            h: '1時間',
	            hh: '%d時間',
	            d: '1日',
	            dd: '%d日',
	            M: '1ヶ月',
	            MM: '%dヶ月',
	            y: '1年',
	            yy: '%d年'
	        }
	    });
	});

/***/ },
/* 94 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : Georgian (ka)
	// author : Irakli Janiashvili : https://github.com/irakli-janiashvili

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    function monthsCaseReplace(m, format) {
	        var months = {
	            'nominative': 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split('_'),
	            'accusative': 'იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს'.split('_')
	        },
	            nounCase = /D[oD] *MMMM?/.test(format) ? 'accusative' : 'nominative';

	        return months[nounCase][m.month()];
	    }

	    function weekdaysCaseReplace(m, format) {
	        var weekdays = {
	            'nominative': 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split('_'),
	            'accusative': 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split('_')
	        },
	            nounCase = /(წინა|შემდეგ)/.test(format) ? 'accusative' : 'nominative';

	        return weekdays[nounCase][m.day()];
	    }

	    return moment.defineLocale('ka', {
	        months: monthsCaseReplace,
	        monthsShort: 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),
	        weekdays: weekdaysCaseReplace,
	        weekdaysShort: 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),
	        weekdaysMin: 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),
	        longDateFormat: {
	            LT: 'h:mm A',
	            LTS: 'h:mm:ss A',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY LT',
	            LLLL: 'dddd, D MMMM YYYY LT'
	        },
	        calendar: {
	            sameDay: '[დღეს] LT[-ზე]',
	            nextDay: '[ხვალ] LT[-ზე]',
	            lastDay: '[გუშინ] LT[-ზე]',
	            nextWeek: '[შემდეგ] dddd LT[-ზე]',
	            lastWeek: '[წინა] dddd LT-ზე',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: function future(s) {
	                return /(წამი|წუთი|საათი|წელი)/.test(s) ? s.replace(/ი$/, 'ში') : s + 'ში';
	            },
	            past: function past(s) {
	                if (/(წამი|წუთი|საათი|დღე|თვე)/.test(s)) {
	                    return s.replace(/(ი|ე)$/, 'ის წინ');
	                }
	                if (/წელი/.test(s)) {
	                    return s.replace(/წელი$/, 'წლის წინ');
	                }
	            },
	            s: 'რამდენიმე წამი',
	            m: 'წუთი',
	            mm: '%d წუთი',
	            h: 'საათი',
	            hh: '%d საათი',
	            d: 'დღე',
	            dd: '%d დღე',
	            M: 'თვე',
	            MM: '%d თვე',
	            y: 'წელი',
	            yy: '%d წელი'
	        },
	        ordinalParse: /0|1-ლი|მე-\d{1,2}|\d{1,2}-ე/,
	        ordinal: function ordinal(number) {
	            if (number === 0) {
	                return number;
	            }

	            if (number === 1) {
	                return number + '-ლი';
	            }

	            if (number < 20 || number <= 100 && number % 20 === 0 || number % 100 === 0) {
	                return 'მე-' + number;
	            }

	            return number + '-ე';
	        },
	        week: {
	            dow: 1,
	            doy: 7
	        }
	    });
	});

/***/ },
/* 95 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : khmer (km)
	// author : Kruy Vanna : https://github.com/kruyvanna

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    return moment.defineLocale('km', {
	        months: 'មករា_កុម្ភៈ_មិនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split('_'),
	        monthsShort: 'មករា_កុម្ភៈ_មិនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split('_'),
	        weekdays: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
	        weekdaysShort: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
	        weekdaysMin: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'LT:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY LT',
	            LLLL: 'dddd, D MMMM YYYY LT'
	        },
	        calendar: {
	            sameDay: '[ថ្ងៃនៈ ម៉ោង] LT',
	            nextDay: '[ស្អែក ម៉ោង] LT',
	            nextWeek: 'dddd [ម៉ោង] LT',
	            lastDay: '[ម្សិលមិញ ម៉ោង] LT',
	            lastWeek: 'dddd [សប្តាហ៍មុន] [ម៉ោង] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: '%sទៀត',
	            past: '%sមុន',
	            s: 'ប៉ុន្មានវិនាទី',
	            m: 'មួយនាទី',
	            mm: '%d នាទី',
	            h: 'មួយម៉ោង',
	            hh: '%d ម៉ោង',
	            d: 'មួយថ្ងៃ',
	            dd: '%d ថ្ងៃ',
	            M: 'មួយខែ',
	            MM: '%d ខែ',
	            y: 'មួយឆ្នាំ',
	            yy: '%d ឆ្នាំ'
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	});

/***/ },
/* 96 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : korean (ko)
	//
	// authors
	//
	// - Kyungwook, Park : https://github.com/kyungw00k
	// - Jeeeyul Lee <jeeeyul@gmail.com>
	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    return moment.defineLocale('ko', {
	        months: '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
	        monthsShort: '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
	        weekdays: '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),
	        weekdaysShort: '일_월_화_수_목_금_토'.split('_'),
	        weekdaysMin: '일_월_화_수_목_금_토'.split('_'),
	        longDateFormat: {
	            LT: 'A h시 m분',
	            LTS: 'A h시 m분 s초',
	            L: 'YYYY.MM.DD',
	            LL: 'YYYY년 MMMM D일',
	            LLL: 'YYYY년 MMMM D일 LT',
	            LLLL: 'YYYY년 MMMM D일 dddd LT'
	        },
	        calendar: {
	            sameDay: '오늘 LT',
	            nextDay: '내일 LT',
	            nextWeek: 'dddd LT',
	            lastDay: '어제 LT',
	            lastWeek: '지난주 dddd LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: '%s 후',
	            past: '%s 전',
	            s: '몇초',
	            ss: '%d초',
	            m: '일분',
	            mm: '%d분',
	            h: '한시간',
	            hh: '%d시간',
	            d: '하루',
	            dd: '%d일',
	            M: '한달',
	            MM: '%d달',
	            y: '일년',
	            yy: '%d년'
	        },
	        ordinalParse: /\d{1,2}일/,
	        ordinal: '%d일',
	        meridiemParse: /오전|오후/,
	        isPM: function isPM(token) {
	            return token === '오후';
	        },
	        meridiem: function meridiem(hour, minute, isUpper) {
	            return hour < 12 ? '오전' : '오후';
	        }
	    });
	});

/***/ },
/* 97 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : Luxembourgish (lb)
	// author : mweimerskirch : https://github.com/mweimerskirch, David Raison : https://github.com/kwisatz

	// Note: Luxembourgish has a very particular phonological rule ('Eifeler Regel') that causes the
	// deletion of the final 'n' in certain contexts. That's what the 'eifelerRegelAppliesToWeekday'
	// and 'eifelerRegelAppliesToNumber' methods are meant for

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var format = {
	            'm': ['eng Minutt', 'enger Minutt'],
	            'h': ['eng Stonn', 'enger Stonn'],
	            'd': ['een Dag', 'engem Dag'],
	            'M': ['ee Mount', 'engem Mount'],
	            'y': ['ee Joer', 'engem Joer']
	        };
	        return withoutSuffix ? format[key][0] : format[key][1];
	    }

	    function processFutureTime(string) {
	        var number = string.substr(0, string.indexOf(' '));
	        if (eifelerRegelAppliesToNumber(number)) {
	            return 'a ' + string;
	        }
	        return 'an ' + string;
	    }

	    function processPastTime(string) {
	        var number = string.substr(0, string.indexOf(' '));
	        if (eifelerRegelAppliesToNumber(number)) {
	            return 'viru ' + string;
	        }
	        return 'virun ' + string;
	    }

	    /**
	     * Returns true if the word before the given number loses the '-n' ending.
	     * e.g. 'an 10 Deeg' but 'a 5 Deeg'
	     *
	     * @param number {integer}
	     * @returns {boolean}
	     */
	    function eifelerRegelAppliesToNumber(_x) {
	        var _again = true;

	        _function: while (_again) {
	            var number = _x;
	            lastDigit = firstDigit = undefined;
	            _again = false;

	            number = parseInt(number, 10);
	            if (isNaN(number)) {
	                return false;
	            }
	            if (number < 0) {
	                // Negative Number --> always true
	                return true;
	            } else if (number < 10) {
	                // Only 1 digit
	                if (4 <= number && number <= 7) {
	                    return true;
	                }
	                return false;
	            } else if (number < 100) {
	                // 2 digits
	                var lastDigit = number % 10,
	                    firstDigit = number / 10;
	                if (lastDigit === 0) {
	                    _x = firstDigit;
	                    _again = true;
	                    continue _function;
	                }
	                _x = lastDigit;
	                _again = true;
	                continue _function;
	            } else if (number < 10000) {
	                // 3 or 4 digits --> recursively check first digit
	                while (number >= 10) {
	                    number = number / 10;
	                }
	                _x = number;
	                _again = true;
	                continue _function;
	            } else {
	                // Anything larger than 4 digits: recursively check first n-3 digits
	                number = number / 1000;
	                _x = number;
	                _again = true;
	                continue _function;
	            }
	        }
	    }

	    return moment.defineLocale('lb', {
	        months: 'Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
	        monthsShort: 'Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),
	        weekdays: 'Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg'.split('_'),
	        weekdaysShort: 'So._Mé._Dë._Më._Do._Fr._Sa.'.split('_'),
	        weekdaysMin: 'So_Mé_Dë_Më_Do_Fr_Sa'.split('_'),
	        longDateFormat: {
	            LT: 'H:mm [Auer]',
	            LTS: 'H:mm:ss [Auer]',
	            L: 'DD.MM.YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY LT',
	            LLLL: 'dddd, D. MMMM YYYY LT'
	        },
	        calendar: {
	            sameDay: '[Haut um] LT',
	            sameElse: 'L',
	            nextDay: '[Muer um] LT',
	            nextWeek: 'dddd [um] LT',
	            lastDay: '[Gëschter um] LT',
	            lastWeek: function lastWeek() {
	                // Different date string for 'Dënschdeg' (Tuesday) and 'Donneschdeg' (Thursday) due to phonological rule
	                switch (this.day()) {
	                    case 2:
	                    case 4:
	                        return '[Leschten] dddd [um] LT';
	                    default:
	                        return '[Leschte] dddd [um] LT';
	                }
	            }
	        },
	        relativeTime: {
	            future: processFutureTime,
	            past: processPastTime,
	            s: 'e puer Sekonnen',
	            m: processRelativeTime,
	            mm: '%d Minutten',
	            h: processRelativeTime,
	            hh: '%d Stonnen',
	            d: processRelativeTime,
	            dd: '%d Deeg',
	            M: processRelativeTime,
	            MM: '%d Méint',
	            y: processRelativeTime,
	            yy: '%d Joer'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal: '%d.',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	});

/***/ },
/* 98 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : Lithuanian (lt)
	// author : Mindaugas Mozūras : https://github.com/mmozuras

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    var units = {
	        'm': 'minutė_minutės_minutę',
	        'mm': 'minutės_minučių_minutes',
	        'h': 'valanda_valandos_valandą',
	        'hh': 'valandos_valandų_valandas',
	        'd': 'diena_dienos_dieną',
	        'dd': 'dienos_dienų_dienas',
	        'M': 'mėnuo_mėnesio_mėnesį',
	        'MM': 'mėnesiai_mėnesių_mėnesius',
	        'y': 'metai_metų_metus',
	        'yy': 'metai_metų_metus'
	    },
	        weekDays = 'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split('_');

	    function translateSeconds(number, withoutSuffix, key, isFuture) {
	        if (withoutSuffix) {
	            return 'kelios sekundės';
	        } else {
	            return isFuture ? 'kelių sekundžių' : 'kelias sekundes';
	        }
	    }

	    function translateSingular(number, withoutSuffix, key, isFuture) {
	        return withoutSuffix ? forms(key)[0] : isFuture ? forms(key)[1] : forms(key)[2];
	    }

	    function special(number) {
	        return number % 10 === 0 || number > 10 && number < 20;
	    }

	    function forms(key) {
	        return units[key].split('_');
	    }

	    function translate(number, withoutSuffix, key, isFuture) {
	        var result = number + ' ';
	        if (number === 1) {
	            return result + translateSingular(number, withoutSuffix, key[0], isFuture);
	        } else if (withoutSuffix) {
	            return result + (special(number) ? forms(key)[1] : forms(key)[0]);
	        } else {
	            if (isFuture) {
	                return result + forms(key)[1];
	            } else {
	                return result + (special(number) ? forms(key)[1] : forms(key)[2]);
	            }
	        }
	    }

	    function relativeWeekDay(moment, format) {
	        var nominative = format.indexOf('dddd HH:mm') === -1,
	            weekDay = weekDays[moment.day()];

	        return nominative ? weekDay : weekDay.substring(0, weekDay.length - 2) + 'į';
	    }

	    return moment.defineLocale('lt', {
	        months: 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split('_'),
	        monthsShort: 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),
	        weekdays: relativeWeekDay,
	        weekdaysShort: 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),
	        weekdaysMin: 'S_P_A_T_K_Pn_Š'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'LT:ss',
	            L: 'YYYY-MM-DD',
	            LL: 'YYYY [m.] MMMM D [d.]',
	            LLL: 'YYYY [m.] MMMM D [d.], LT [val.]',
	            LLLL: 'YYYY [m.] MMMM D [d.], dddd, LT [val.]',
	            l: 'YYYY-MM-DD',
	            ll: 'YYYY [m.] MMMM D [d.]',
	            lll: 'YYYY [m.] MMMM D [d.], LT [val.]',
	            llll: 'YYYY [m.] MMMM D [d.], ddd, LT [val.]'
	        },
	        calendar: {
	            sameDay: '[Šiandien] LT',
	            nextDay: '[Rytoj] LT',
	            nextWeek: 'dddd LT',
	            lastDay: '[Vakar] LT',
	            lastWeek: '[Praėjusį] dddd LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'po %s',
	            past: 'prieš %s',
	            s: translateSeconds,
	            m: translateSingular,
	            mm: translate,
	            h: translateSingular,
	            hh: translate,
	            d: translateSingular,
	            dd: translate,
	            M: translateSingular,
	            MM: translate,
	            y: translateSingular,
	            yy: translate
	        },
	        ordinalParse: /\d{1,2}-oji/,
	        ordinal: function ordinal(number) {
	            return number + '-oji';
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	});

/***/ },
/* 99 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : latvian (lv)
	// author : Kristaps Karlsons : https://github.com/skakri

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    var units = {
	        'mm': 'minūti_minūtes_minūte_minūtes',
	        'hh': 'stundu_stundas_stunda_stundas',
	        'dd': 'dienu_dienas_diena_dienas',
	        'MM': 'mēnesi_mēnešus_mēnesis_mēneši',
	        'yy': 'gadu_gadus_gads_gadi'
	    };

	    function format(word, number, withoutSuffix) {
	        var forms = word.split('_');
	        if (withoutSuffix) {
	            return number % 10 === 1 && number !== 11 ? forms[2] : forms[3];
	        } else {
	            return number % 10 === 1 && number !== 11 ? forms[0] : forms[1];
	        }
	    }

	    function relativeTimeWithPlural(number, withoutSuffix, key) {
	        return number + ' ' + format(units[key], number, withoutSuffix);
	    }

	    return moment.defineLocale('lv', {
	        months: 'janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris'.split('_'),
	        monthsShort: 'jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec'.split('_'),
	        weekdays: 'svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena'.split('_'),
	        weekdaysShort: 'Sv_P_O_T_C_Pk_S'.split('_'),
	        weekdaysMin: 'Sv_P_O_T_C_Pk_S'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'LT:ss',
	            L: 'DD.MM.YYYY',
	            LL: 'YYYY. [gada] D. MMMM',
	            LLL: 'YYYY. [gada] D. MMMM, LT',
	            LLLL: 'YYYY. [gada] D. MMMM, dddd, LT'
	        },
	        calendar: {
	            sameDay: '[Šodien pulksten] LT',
	            nextDay: '[Rīt pulksten] LT',
	            nextWeek: 'dddd [pulksten] LT',
	            lastDay: '[Vakar pulksten] LT',
	            lastWeek: '[Pagājušā] dddd [pulksten] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: '%s vēlāk',
	            past: '%s agrāk',
	            s: 'dažas sekundes',
	            m: 'minūti',
	            mm: relativeTimeWithPlural,
	            h: 'stundu',
	            hh: relativeTimeWithPlural,
	            d: 'dienu',
	            dd: relativeTimeWithPlural,
	            M: 'mēnesi',
	            MM: relativeTimeWithPlural,
	            y: 'gadu',
	            yy: relativeTimeWithPlural
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal: '%d.',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	});

/***/ },
/* 100 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : macedonian (mk)
	// author : Borislav Mickov : https://github.com/B0k0

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    return moment.defineLocale('mk', {
	        months: 'јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември'.split('_'),
	        monthsShort: 'јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек'.split('_'),
	        weekdays: 'недела_понеделник_вторник_среда_четврток_петок_сабота'.split('_'),
	        weekdaysShort: 'нед_пон_вто_сре_чет_пет_саб'.split('_'),
	        weekdaysMin: 'нe_пo_вт_ср_че_пе_сa'.split('_'),
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS: 'LT:ss',
	            L: 'D.MM.YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY LT',
	            LLLL: 'dddd, D MMMM YYYY LT'
	        },
	        calendar: {
	            sameDay: '[Денес во] LT',
	            nextDay: '[Утре во] LT',
	            nextWeek: 'dddd [во] LT',
	            lastDay: '[Вчера во] LT',
	            lastWeek: function lastWeek() {
	                switch (this.day()) {
	                    case 0:
	                    case 3:
	                    case 6:
	                        return '[Во изминатата] dddd [во] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                    case 5:
	                        return '[Во изминатиот] dddd [во] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'после %s',
	            past: 'пред %s',
	            s: 'неколку секунди',
	            m: 'минута',
	            mm: '%d минути',
	            h: 'час',
	            hh: '%d часа',
	            d: 'ден',
	            dd: '%d дена',
	            M: 'месец',
	            MM: '%d месеци',
	            y: 'година',
	            yy: '%d години'
	        },
	        ordinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
	        ordinal: function ordinal(number) {
	            var lastDigit = number % 10,
	                last2Digits = number % 100;
	            if (number === 0) {
	                return number + '-ев';
	            } else if (last2Digits === 0) {
	                return number + '-ен';
	            } else if (last2Digits > 10 && last2Digits < 20) {
	                return number + '-ти';
	            } else if (lastDigit === 1) {
	                return number + '-ви';
	            } else if (lastDigit === 2) {
	                return number + '-ри';
	            } else if (lastDigit === 7 || lastDigit === 8) {
	                return number + '-ми';
	            } else {
	                return number + '-ти';
	            }
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 7 // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	});

/***/ },
/* 101 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : malayalam (ml)
	// author : Floyd Pink : https://github.com/floydpink

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    return moment.defineLocale('ml', {
	        months: 'ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ'.split('_'),
	        monthsShort: 'ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.'.split('_'),
	        weekdays: 'ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച'.split('_'),
	        weekdaysShort: 'ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി'.split('_'),
	        weekdaysMin: 'ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ'.split('_'),
	        longDateFormat: {
	            LT: 'A h:mm -നു',
	            LTS: 'A h:mm:ss -നു',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY, LT',
	            LLLL: 'dddd, D MMMM YYYY, LT'
	        },
	        calendar: {
	            sameDay: '[ഇന്ന്] LT',
	            nextDay: '[നാളെ] LT',
	            nextWeek: 'dddd, LT',
	            lastDay: '[ഇന്നലെ] LT',
	            lastWeek: '[കഴിഞ്ഞ] dddd, LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: '%s കഴിഞ്ഞ്',
	            past: '%s മുൻപ്',
	            s: 'അൽപ നിമിഷങ്ങൾ',
	            m: 'ഒരു മിനിറ്റ്',
	            mm: '%d മിനിറ്റ്',
	            h: 'ഒരു മണിക്കൂർ',
	            hh: '%d മണിക്കൂർ',
	            d: 'ഒരു ദിവസം',
	            dd: '%d ദിവസം',
	            M: 'ഒരു മാസം',
	            MM: '%d മാസം',
	            y: 'ഒരു വർഷം',
	            yy: '%d വർഷം'
	        },
	        meridiemParse: /രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,
	        isPM: function isPM(input) {
	            return /^(ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി)$/.test(input);
	        },
	        meridiem: function meridiem(hour, minute, isLower) {
	            if (hour < 4) {
	                return 'രാത്രി';
	            } else if (hour < 12) {
	                return 'രാവിലെ';
	            } else if (hour < 17) {
	                return 'ഉച്ച കഴിഞ്ഞ്';
	            } else if (hour < 20) {
	                return 'വൈകുന്നേരം';
	            } else {
	                return 'രാത്രി';
	            }
	        }
	    });
	});

/***/ },
/* 102 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : Marathi (mr)
	// author : Harshad Kale : https://github.com/kalehv

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    var symbolMap = {
	        '1': '१',
	        '2': '२',
	        '3': '३',
	        '4': '४',
	        '5': '५',
	        '6': '६',
	        '7': '७',
	        '8': '८',
	        '9': '९',
	        '0': '०'
	    },
	        numberMap = {
	        '१': '1',
	        '२': '2',
	        '३': '3',
	        '४': '4',
	        '५': '5',
	        '६': '6',
	        '७': '7',
	        '८': '8',
	        '९': '9',
	        '०': '0'
	    };

	    return moment.defineLocale('mr', {
	        months: 'जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split('_'),
	        monthsShort: 'जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split('_'),
	        weekdays: 'रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
	        weekdaysShort: 'रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि'.split('_'),
	        weekdaysMin: 'र_सो_मं_बु_गु_शु_श'.split('_'),
	        longDateFormat: {
	            LT: 'A h:mm वाजता',
	            LTS: 'A h:mm:ss वाजता',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY, LT',
	            LLLL: 'dddd, D MMMM YYYY, LT'
	        },
	        calendar: {
	            sameDay: '[आज] LT',
	            nextDay: '[उद्या] LT',
	            nextWeek: 'dddd, LT',
	            lastDay: '[काल] LT',
	            lastWeek: '[मागील] dddd, LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: '%s नंतर',
	            past: '%s पूर्वी',
	            s: 'सेकंद',
	            m: 'एक मिनिट',
	            mm: '%d मिनिटे',
	            h: 'एक तास',
	            hh: '%d तास',
	            d: 'एक दिवस',
	            dd: '%d दिवस',
	            M: 'एक महिना',
	            MM: '%d महिने',
	            y: 'एक वर्ष',
	            yy: '%d वर्षे'
	        },
	        preparse: function preparse(string) {
	            return string.replace(/[१२३४५६७८९०]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function postformat(string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        meridiemParse: /रात्री|सकाळी|दुपारी|सायंकाळी/,
	        meridiemHour: function meridiemHour(hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'रात्री') {
	                return hour < 4 ? hour : hour + 12;
	            } else if (meridiem === 'सकाळी') {
	                return hour;
	            } else if (meridiem === 'दुपारी') {
	                return hour >= 10 ? hour : hour + 12;
	            } else if (meridiem === 'सायंकाळी') {
	                return hour + 12;
	            }
	        },
	        meridiem: function meridiem(hour, minute, isLower) {
	            if (hour < 4) {
	                return 'रात्री';
	            } else if (hour < 10) {
	                return 'सकाळी';
	            } else if (hour < 17) {
	                return 'दुपारी';
	            } else if (hour < 20) {
	                return 'सायंकाळी';
	            } else {
	                return 'रात्री';
	            }
	        },
	        week: {
	            dow: 0, // Sunday is the first day of the week.
	            doy: 6 // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	});

/***/ },
/* 103 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : Bahasa Malaysia (ms-MY)
	// author : Weldan Jamili : https://github.com/weldan

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    return moment.defineLocale('ms-my', {
	        months: 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),
	        monthsShort: 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
	        weekdays: 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
	        weekdaysShort: 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
	        weekdaysMin: 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
	        longDateFormat: {
	            LT: 'HH.mm',
	            LTS: 'LT.ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY [pukul] LT',
	            LLLL: 'dddd, D MMMM YYYY [pukul] LT'
	        },
	        meridiemParse: /pagi|tengahari|petang|malam/,
	        meridiemHour: function meridiemHour(hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'pagi') {
	                return hour;
	            } else if (meridiem === 'tengahari') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === 'petang' || meridiem === 'malam') {
	                return hour + 12;
	            }
	        },
	        meridiem: function meridiem(hours, minutes, isLower) {
	            if (hours < 11) {
	                return 'pagi';
	            } else if (hours < 15) {
	                return 'tengahari';
	            } else if (hours < 19) {
	                return 'petang';
	            } else {
	                return 'malam';
	            }
	        },
	        calendar: {
	            sameDay: '[Hari ini pukul] LT',
	            nextDay: '[Esok pukul] LT',
	            nextWeek: 'dddd [pukul] LT',
	            lastDay: '[Kelmarin pukul] LT',
	            lastWeek: 'dddd [lepas pukul] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'dalam %s',
	            past: '%s yang lepas',
	            s: 'beberapa saat',
	            m: 'seminit',
	            mm: '%d minit',
	            h: 'sejam',
	            hh: '%d jam',
	            d: 'sehari',
	            dd: '%d hari',
	            M: 'sebulan',
	            MM: '%d bulan',
	            y: 'setahun',
	            yy: '%d tahun'
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 7 // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	});

/***/ },
/* 104 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : Burmese (my)
	// author : Squar team, mysquar.com

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    var symbolMap = {
	        '1': '၁',
	        '2': '၂',
	        '3': '၃',
	        '4': '၄',
	        '5': '၅',
	        '6': '၆',
	        '7': '၇',
	        '8': '၈',
	        '9': '၉',
	        '0': '၀'
	    },
	        numberMap = {
	        '၁': '1',
	        '၂': '2',
	        '၃': '3',
	        '၄': '4',
	        '၅': '5',
	        '၆': '6',
	        '၇': '7',
	        '၈': '8',
	        '၉': '9',
	        '၀': '0'
	    };
	    return moment.defineLocale('my', {
	        months: 'ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ'.split('_'),
	        monthsShort: 'ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ'.split('_'),
	        weekdays: 'တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ'.split('_'),
	        weekdaysShort: 'နွေ_လာ_င်္ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),
	        weekdaysMin: 'နွေ_လာ_င်္ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY LT',
	            LLLL: 'dddd D MMMM YYYY LT'
	        },
	        calendar: {
	            sameDay: '[ယနေ.] LT [မှာ]',
	            nextDay: '[မနက်ဖြန်] LT [မှာ]',
	            nextWeek: 'dddd LT [မှာ]',
	            lastDay: '[မနေ.က] LT [မှာ]',
	            lastWeek: '[ပြီးခဲ့သော] dddd LT [မှာ]',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'လာမည့် %s မှာ',
	            past: 'လွန်ခဲ့သော %s က',
	            s: 'စက္ကန်.အနည်းငယ်',
	            m: 'တစ်မိနစ်',
	            mm: '%d မိနစ်',
	            h: 'တစ်နာရီ',
	            hh: '%d နာရီ',
	            d: 'တစ်ရက်',
	            dd: '%d ရက်',
	            M: 'တစ်လ',
	            MM: '%d လ',
	            y: 'တစ်နှစ်',
	            yy: '%d နှစ်'
	        },
	        preparse: function preparse(string) {
	            return string.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function postformat(string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	});

/***/ },
/* 105 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : norwegian bokmål (nb)
	// authors : Espen Hovlandsdal : https://github.com/rexxars
	//           Sigurd Gartmann : https://github.com/sigurdga

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    return moment.defineLocale('nb', {
	        months: 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
	        monthsShort: 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
	        weekdays: 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
	        weekdaysShort: 'søn_man_tirs_ons_tors_fre_lør'.split('_'),
	        weekdaysMin: 'sø_ma_ti_on_to_fr_lø'.split('_'),
	        longDateFormat: {
	            LT: 'H.mm',
	            LTS: 'LT.ss',
	            L: 'DD.MM.YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY [kl.] LT',
	            LLLL: 'dddd D. MMMM YYYY [kl.] LT'
	        },
	        calendar: {
	            sameDay: '[i dag kl.] LT',
	            nextDay: '[i morgen kl.] LT',
	            nextWeek: 'dddd [kl.] LT',
	            lastDay: '[i går kl.] LT',
	            lastWeek: '[forrige] dddd [kl.] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'om %s',
	            past: 'for %s siden',
	            s: 'noen sekunder',
	            m: 'ett minutt',
	            mm: '%d minutter',
	            h: 'en time',
	            hh: '%d timer',
	            d: 'en dag',
	            dd: '%d dager',
	            M: 'en måned',
	            MM: '%d måneder',
	            y: 'ett år',
	            yy: '%d år'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal: '%d.',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	});

/***/ },
/* 106 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : nepali/nepalese
	// author : suvash : https://github.com/suvash

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    var symbolMap = {
	        '1': '१',
	        '2': '२',
	        '3': '३',
	        '4': '४',
	        '5': '५',
	        '6': '६',
	        '7': '७',
	        '8': '८',
	        '9': '९',
	        '0': '०'
	    },
	        numberMap = {
	        '१': '1',
	        '२': '2',
	        '३': '3',
	        '४': '4',
	        '५': '5',
	        '६': '6',
	        '७': '7',
	        '८': '8',
	        '९': '9',
	        '०': '0'
	    };

	    return moment.defineLocale('ne', {
	        months: 'जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर'.split('_'),
	        monthsShort: 'जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.'.split('_'),
	        weekdays: 'आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार'.split('_'),
	        weekdaysShort: 'आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.'.split('_'),
	        weekdaysMin: 'आइ._सो._मङ्_बु._बि._शु._श.'.split('_'),
	        longDateFormat: {
	            LT: 'Aको h:mm बजे',
	            LTS: 'Aको h:mm:ss बजे',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY, LT',
	            LLLL: 'dddd, D MMMM YYYY, LT'
	        },
	        preparse: function preparse(string) {
	            return string.replace(/[१२३४५६७८९०]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function postformat(string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        meridiemParse: /राती|बिहान|दिउँसो|बेलुका|साँझ|राती/,
	        meridiemHour: function meridiemHour(hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'राती') {
	                return hour < 3 ? hour : hour + 12;
	            } else if (meridiem === 'बिहान') {
	                return hour;
	            } else if (meridiem === 'दिउँसो') {
	                return hour >= 10 ? hour : hour + 12;
	            } else if (meridiem === 'बेलुका' || meridiem === 'साँझ') {
	                return hour + 12;
	            }
	        },
	        meridiem: function meridiem(hour, minute, isLower) {
	            if (hour < 3) {
	                return 'राती';
	            } else if (hour < 10) {
	                return 'बिहान';
	            } else if (hour < 15) {
	                return 'दिउँसो';
	            } else if (hour < 18) {
	                return 'बेलुका';
	            } else if (hour < 20) {
	                return 'साँझ';
	            } else {
	                return 'राती';
	            }
	        },
	        calendar: {
	            sameDay: '[आज] LT',
	            nextDay: '[भोली] LT',
	            nextWeek: '[आउँदो] dddd[,] LT',
	            lastDay: '[हिजो] LT',
	            lastWeek: '[गएको] dddd[,] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: '%sमा',
	            past: '%s अगाडी',
	            s: 'केही समय',
	            m: 'एक मिनेट',
	            mm: '%d मिनेट',
	            h: 'एक घण्टा',
	            hh: '%d घण्टा',
	            d: 'एक दिन',
	            dd: '%d दिन',
	            M: 'एक महिना',
	            MM: '%d महिना',
	            y: 'एक बर्ष',
	            yy: '%d बर्ष'
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 7 // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	});

/***/ },
/* 107 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : dutch (nl)
	// author : Joris Röling : https://github.com/jjupiter

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),
	        monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');

	    return moment.defineLocale('nl', {
	        months: 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),
	        monthsShort: function monthsShort(m, format) {
	            if (/-MMM-/.test(format)) {
	                return monthsShortWithoutDots[m.month()];
	            } else {
	                return monthsShortWithDots[m.month()];
	            }
	        },
	        weekdays: 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),
	        weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),
	        weekdaysMin: 'Zo_Ma_Di_Wo_Do_Vr_Za'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'LT:ss',
	            L: 'DD-MM-YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY LT',
	            LLLL: 'dddd D MMMM YYYY LT'
	        },
	        calendar: {
	            sameDay: '[vandaag om] LT',
	            nextDay: '[morgen om] LT',
	            nextWeek: 'dddd [om] LT',
	            lastDay: '[gisteren om] LT',
	            lastWeek: '[afgelopen] dddd [om] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'over %s',
	            past: '%s geleden',
	            s: 'een paar seconden',
	            m: 'één minuut',
	            mm: '%d minuten',
	            h: 'één uur',
	            hh: '%d uur',
	            d: 'één dag',
	            dd: '%d dagen',
	            M: 'één maand',
	            MM: '%d maanden',
	            y: 'één jaar',
	            yy: '%d jaar'
	        },
	        ordinalParse: /\d{1,2}(ste|de)/,
	        ordinal: function ordinal(number) {
	            return number + (number === 1 || number === 8 || number >= 20 ? 'ste' : 'de');
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	});

/***/ },
/* 108 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : norwegian nynorsk (nn)
	// author : https://github.com/mechuwind

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    return moment.defineLocale('nn', {
	        months: 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
	        monthsShort: 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
	        weekdays: 'sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag'.split('_'),
	        weekdaysShort: 'sun_mån_tys_ons_tor_fre_lau'.split('_'),
	        weekdaysMin: 'su_må_ty_on_to_fr_lø'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'LT:ss',
	            L: 'DD.MM.YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY LT',
	            LLLL: 'dddd D MMMM YYYY LT'
	        },
	        calendar: {
	            sameDay: '[I dag klokka] LT',
	            nextDay: '[I morgon klokka] LT',
	            nextWeek: 'dddd [klokka] LT',
	            lastDay: '[I går klokka] LT',
	            lastWeek: '[Føregåande] dddd [klokka] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'om %s',
	            past: 'for %s sidan',
	            s: 'nokre sekund',
	            m: 'eit minutt',
	            mm: '%d minutt',
	            h: 'ein time',
	            hh: '%d timar',
	            d: 'ein dag',
	            dd: '%d dagar',
	            M: 'ein månad',
	            MM: '%d månader',
	            y: 'eit år',
	            yy: '%d år'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal: '%d.',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	});

/***/ },
/* 109 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : polish (pl)
	// author : Rafal Hirsz : https://github.com/evoL

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    var monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split('_'),
	        monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split('_');

	    function plural(n) {
	        return n % 10 < 5 && n % 10 > 1 && ~ ~(n / 10) % 10 !== 1;
	    }

	    function translate(number, withoutSuffix, key) {
	        var result = number + ' ';
	        switch (key) {
	            case 'm':
	                return withoutSuffix ? 'minuta' : 'minutę';
	            case 'mm':
	                return result + (plural(number) ? 'minuty' : 'minut');
	            case 'h':
	                return withoutSuffix ? 'godzina' : 'godzinę';
	            case 'hh':
	                return result + (plural(number) ? 'godziny' : 'godzin');
	            case 'MM':
	                return result + (plural(number) ? 'miesiące' : 'miesięcy');
	            case 'yy':
	                return result + (plural(number) ? 'lata' : 'lat');
	        }
	    }

	    return moment.defineLocale('pl', {
	        months: function months(momentToFormat, format) {
	            if (/D MMMM/.test(format)) {
	                return monthsSubjective[momentToFormat.month()];
	            } else {
	                return monthsNominative[momentToFormat.month()];
	            }
	        },
	        monthsShort: 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),
	        weekdays: 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),
	        weekdaysShort: 'nie_pon_wt_śr_czw_pt_sb'.split('_'),
	        weekdaysMin: 'N_Pn_Wt_Śr_Cz_Pt_So'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'LT:ss',
	            L: 'DD.MM.YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY LT',
	            LLLL: 'dddd, D MMMM YYYY LT'
	        },
	        calendar: {
	            sameDay: '[Dziś o] LT',
	            nextDay: '[Jutro o] LT',
	            nextWeek: '[W] dddd [o] LT',
	            lastDay: '[Wczoraj o] LT',
	            lastWeek: function lastWeek() {
	                switch (this.day()) {
	                    case 0:
	                        return '[W zeszłą niedzielę o] LT';
	                    case 3:
	                        return '[W zeszłą środę o] LT';
	                    case 6:
	                        return '[W zeszłą sobotę o] LT';
	                    default:
	                        return '[W zeszły] dddd [o] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'za %s',
	            past: '%s temu',
	            s: 'kilka sekund',
	            m: translate,
	            mm: translate,
	            h: translate,
	            hh: translate,
	            d: '1 dzień',
	            dd: '%d dni',
	            M: 'miesiąc',
	            MM: translate,
	            y: 'rok',
	            yy: translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal: '%d.',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	});

/***/ },
/* 110 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : brazilian portuguese (pt-br)
	// author : Caio Ribeiro Pereira : https://github.com/caio-ribeiro-pereira

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    return moment.defineLocale('pt-br', {
	        months: 'janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro'.split('_'),
	        monthsShort: 'jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez'.split('_'),
	        weekdays: 'domingo_segunda-feira_terça-feira_quarta-feira_quinta-feira_sexta-feira_sábado'.split('_'),
	        weekdaysShort: 'dom_seg_ter_qua_qui_sex_sáb'.split('_'),
	        weekdaysMin: 'dom_2ª_3ª_4ª_5ª_6ª_sáb'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'LT:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D [de] MMMM [de] YYYY',
	            LLL: 'D [de] MMMM [de] YYYY [às] LT',
	            LLLL: 'dddd, D [de] MMMM [de] YYYY [às] LT'
	        },
	        calendar: {
	            sameDay: '[Hoje às] LT',
	            nextDay: '[Amanhã às] LT',
	            nextWeek: 'dddd [às] LT',
	            lastDay: '[Ontem às] LT',
	            lastWeek: function lastWeek() {
	                return this.day() === 0 || this.day() === 6 ? '[Último] dddd [às] LT' : // Saturday + Sunday
	                '[Última] dddd [às] LT'; // Monday - Friday
	            },
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'em %s',
	            past: '%s atrás',
	            s: 'segundos',
	            m: 'um minuto',
	            mm: '%d minutos',
	            h: 'uma hora',
	            hh: '%d horas',
	            d: 'um dia',
	            dd: '%d dias',
	            M: 'um mês',
	            MM: '%d meses',
	            y: 'um ano',
	            yy: '%d anos'
	        },
	        ordinalParse: /\d{1,2}º/,
	        ordinal: '%dº'
	    });
	});

/***/ },
/* 111 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : portuguese (pt)
	// author : Jefferson : https://github.com/jalex79

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    return moment.defineLocale('pt', {
	        months: 'janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro'.split('_'),
	        monthsShort: 'jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez'.split('_'),
	        weekdays: 'domingo_segunda-feira_terça-feira_quarta-feira_quinta-feira_sexta-feira_sábado'.split('_'),
	        weekdaysShort: 'dom_seg_ter_qua_qui_sex_sáb'.split('_'),
	        weekdaysMin: 'dom_2ª_3ª_4ª_5ª_6ª_sáb'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'LT:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D [de] MMMM [de] YYYY',
	            LLL: 'D [de] MMMM [de] YYYY LT',
	            LLLL: 'dddd, D [de] MMMM [de] YYYY LT'
	        },
	        calendar: {
	            sameDay: '[Hoje às] LT',
	            nextDay: '[Amanhã às] LT',
	            nextWeek: 'dddd [às] LT',
	            lastDay: '[Ontem às] LT',
	            lastWeek: function lastWeek() {
	                return this.day() === 0 || this.day() === 6 ? '[Último] dddd [às] LT' : // Saturday + Sunday
	                '[Última] dddd [às] LT'; // Monday - Friday
	            },
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'em %s',
	            past: 'há %s',
	            s: 'segundos',
	            m: 'um minuto',
	            mm: '%d minutos',
	            h: 'uma hora',
	            hh: '%d horas',
	            d: 'um dia',
	            dd: '%d dias',
	            M: 'um mês',
	            MM: '%d meses',
	            y: 'um ano',
	            yy: '%d anos'
	        },
	        ordinalParse: /\d{1,2}º/,
	        ordinal: '%dº',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	});

/***/ },
/* 112 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : romanian (ro)
	// author : Vlad Gurdiga : https://github.com/gurdiga
	// author : Valentin Agachi : https://github.com/avaly

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    function relativeTimeWithPlural(number, withoutSuffix, key) {
	        var format = {
	            'mm': 'minute',
	            'hh': 'ore',
	            'dd': 'zile',
	            'MM': 'luni',
	            'yy': 'ani'
	        },
	            separator = ' ';
	        if (number % 100 >= 20 || number >= 100 && number % 100 === 0) {
	            separator = ' de ';
	        }

	        return number + separator + format[key];
	    }

	    return moment.defineLocale('ro', {
	        months: 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split('_'),
	        monthsShort: 'ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split('_'),
	        weekdays: 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'),
	        weekdaysShort: 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),
	        weekdaysMin: 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS: 'LT:ss',
	            L: 'DD.MM.YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY H:mm',
	            LLLL: 'dddd, D MMMM YYYY H:mm'
	        },
	        calendar: {
	            sameDay: '[azi la] LT',
	            nextDay: '[mâine la] LT',
	            nextWeek: 'dddd [la] LT',
	            lastDay: '[ieri la] LT',
	            lastWeek: '[fosta] dddd [la] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'peste %s',
	            past: '%s în urmă',
	            s: 'câteva secunde',
	            m: 'un minut',
	            mm: relativeTimeWithPlural,
	            h: 'o oră',
	            hh: relativeTimeWithPlural,
	            d: 'o zi',
	            dd: relativeTimeWithPlural,
	            M: 'o lună',
	            MM: relativeTimeWithPlural,
	            y: 'un an',
	            yy: relativeTimeWithPlural
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 7 // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	});

/***/ },
/* 113 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : russian (ru)
	// author : Viktorminator : https://github.com/Viktorminator
	// Author : Menelion Elensúle : https://github.com/Oire

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    function plural(word, num) {
	        var forms = word.split('_');
	        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2];
	    }

	    function relativeTimeWithPlural(number, withoutSuffix, key) {
	        var format = {
	            'mm': withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',
	            'hh': 'час_часа_часов',
	            'dd': 'день_дня_дней',
	            'MM': 'месяц_месяца_месяцев',
	            'yy': 'год_года_лет'
	        };
	        if (key === 'm') {
	            return withoutSuffix ? 'минута' : 'минуту';
	        } else {
	            return number + ' ' + plural(format[key], +number);
	        }
	    }

	    function monthsCaseReplace(m, format) {
	        var months = {
	            'nominative': 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_'),
	            'accusative': 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_')
	        },
	            nounCase = /D[oD]?(\[[^\[\]]*\]|\s+)+MMMM?/.test(format) ? 'accusative' : 'nominative';

	        return months[nounCase][m.month()];
	    }

	    function monthsShortCaseReplace(m, format) {
	        var monthsShort = {
	            'nominative': 'янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split('_'),
	            'accusative': 'янв_фев_мар_апр_мая_июня_июля_авг_сен_окт_ноя_дек'.split('_')
	        },
	            nounCase = /D[oD]?(\[[^\[\]]*\]|\s+)+MMMM?/.test(format) ? 'accusative' : 'nominative';

	        return monthsShort[nounCase][m.month()];
	    }

	    function weekdaysCaseReplace(m, format) {
	        var weekdays = {
	            'nominative': 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),
	            'accusative': 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_')
	        },
	            nounCase = /\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\] ?dddd/.test(format) ? 'accusative' : 'nominative';

	        return weekdays[nounCase][m.day()];
	    }

	    return moment.defineLocale('ru', {
	        months: monthsCaseReplace,
	        monthsShort: monthsShortCaseReplace,
	        weekdays: weekdaysCaseReplace,
	        weekdaysShort: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
	        weekdaysMin: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
	        monthsParse: [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[й|я]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i],
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'LT:ss',
	            L: 'DD.MM.YYYY',
	            LL: 'D MMMM YYYY г.',
	            LLL: 'D MMMM YYYY г., LT',
	            LLLL: 'dddd, D MMMM YYYY г., LT'
	        },
	        calendar: {
	            sameDay: '[Сегодня в] LT',
	            nextDay: '[Завтра в] LT',
	            lastDay: '[Вчера в] LT',
	            nextWeek: function nextWeek() {
	                return this.day() === 2 ? '[Во] dddd [в] LT' : '[В] dddd [в] LT';
	            },
	            lastWeek: function lastWeek(now) {
	                if (now.week() !== this.week()) {
	                    switch (this.day()) {
	                        case 0:
	                            return '[В прошлое] dddd [в] LT';
	                        case 1:
	                        case 2:
	                        case 4:
	                            return '[В прошлый] dddd [в] LT';
	                        case 3:
	                        case 5:
	                        case 6:
	                            return '[В прошлую] dddd [в] LT';
	                    }
	                } else {
	                    if (this.day() === 2) {
	                        return '[Во] dddd [в] LT';
	                    } else {
	                        return '[В] dddd [в] LT';
	                    }
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'через %s',
	            past: '%s назад',
	            s: 'несколько секунд',
	            m: relativeTimeWithPlural,
	            mm: relativeTimeWithPlural,
	            h: 'час',
	            hh: relativeTimeWithPlural,
	            d: 'день',
	            dd: relativeTimeWithPlural,
	            M: 'месяц',
	            MM: relativeTimeWithPlural,
	            y: 'год',
	            yy: relativeTimeWithPlural
	        },

	        meridiemParse: /ночи|утра|дня|вечера/i,
	        isPM: function isPM(input) {
	            return /^(дня|вечера)$/.test(input);
	        },

	        meridiem: function meridiem(hour, minute, isLower) {
	            if (hour < 4) {
	                return 'ночи';
	            } else if (hour < 12) {
	                return 'утра';
	            } else if (hour < 17) {
	                return 'дня';
	            } else {
	                return 'вечера';
	            }
	        },

	        ordinalParse: /\d{1,2}-(й|го|я)/,
	        ordinal: function ordinal(number, period) {
	            switch (period) {
	                case 'M':
	                case 'd':
	                case 'DDD':
	                    return number + '-й';
	                case 'D':
	                    return number + '-го';
	                case 'w':
	                case 'W':
	                    return number + '-я';
	                default:
	                    return number;
	            }
	        },

	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 7 // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	});

/***/ },
/* 114 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : slovak (sk)
	// author : Martin Minka : https://github.com/k2s
	// based on work of petrbela : https://github.com/petrbela

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    var months = 'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split('_'),
	        monthsShort = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');

	    function plural(n) {
	        return n > 1 && n < 5;
	    }

	    function translate(number, withoutSuffix, key, isFuture) {
	        var result = number + ' ';
	        switch (key) {
	            case 's':
	                // a few seconds / in a few seconds / a few seconds ago
	                return withoutSuffix || isFuture ? 'pár sekúnd' : 'pár sekundami';
	            case 'm':
	                // a minute / in a minute / a minute ago
	                return withoutSuffix ? 'minúta' : isFuture ? 'minútu' : 'minútou';
	            case 'mm':
	                // 9 minutes / in 9 minutes / 9 minutes ago
	                if (withoutSuffix || isFuture) {
	                    return result + (plural(number) ? 'minúty' : 'minút');
	                } else {
	                    return result + 'minútami';
	                }
	                break;
	            case 'h':
	                // an hour / in an hour / an hour ago
	                return withoutSuffix ? 'hodina' : isFuture ? 'hodinu' : 'hodinou';
	            case 'hh':
	                // 9 hours / in 9 hours / 9 hours ago
	                if (withoutSuffix || isFuture) {
	                    return result + (plural(number) ? 'hodiny' : 'hodín');
	                } else {
	                    return result + 'hodinami';
	                }
	                break;
	            case 'd':
	                // a day / in a day / a day ago
	                return withoutSuffix || isFuture ? 'deň' : 'dňom';
	            case 'dd':
	                // 9 days / in 9 days / 9 days ago
	                if (withoutSuffix || isFuture) {
	                    return result + (plural(number) ? 'dni' : 'dní');
	                } else {
	                    return result + 'dňami';
	                }
	                break;
	            case 'M':
	                // a month / in a month / a month ago
	                return withoutSuffix || isFuture ? 'mesiac' : 'mesiacom';
	            case 'MM':
	                // 9 months / in 9 months / 9 months ago
	                if (withoutSuffix || isFuture) {
	                    return result + (plural(number) ? 'mesiace' : 'mesiacov');
	                } else {
	                    return result + 'mesiacmi';
	                }
	                break;
	            case 'y':
	                // a year / in a year / a year ago
	                return withoutSuffix || isFuture ? 'rok' : 'rokom';
	            case 'yy':
	                // 9 years / in 9 years / 9 years ago
	                if (withoutSuffix || isFuture) {
	                    return result + (plural(number) ? 'roky' : 'rokov');
	                } else {
	                    return result + 'rokmi';
	                }
	                break;
	        }
	    }

	    return moment.defineLocale('sk', {
	        months: months,
	        monthsShort: monthsShort,
	        monthsParse: (function (months, monthsShort) {
	            var i,
	                _monthsParse = [];
	            for (i = 0; i < 12; i++) {
	                // use custom parser to solve problem with July (červenec)
	                _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');
	            }
	            return _monthsParse;
	        })(months, monthsShort),
	        weekdays: 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'),
	        weekdaysShort: 'ne_po_ut_st_št_pi_so'.split('_'),
	        weekdaysMin: 'ne_po_ut_st_št_pi_so'.split('_'),
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS: 'LT:ss',
	            L: 'DD.MM.YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY LT',
	            LLLL: 'dddd D. MMMM YYYY LT'
	        },
	        calendar: {
	            sameDay: '[dnes o] LT',
	            nextDay: '[zajtra o] LT',
	            nextWeek: function nextWeek() {
	                switch (this.day()) {
	                    case 0:
	                        return '[v nedeľu o] LT';
	                    case 1:
	                    case 2:
	                        return '[v] dddd [o] LT';
	                    case 3:
	                        return '[v stredu o] LT';
	                    case 4:
	                        return '[vo štvrtok o] LT';
	                    case 5:
	                        return '[v piatok o] LT';
	                    case 6:
	                        return '[v sobotu o] LT';
	                }
	            },
	            lastDay: '[včera o] LT',
	            lastWeek: function lastWeek() {
	                switch (this.day()) {
	                    case 0:
	                        return '[minulú nedeľu o] LT';
	                    case 1:
	                    case 2:
	                        return '[minulý] dddd [o] LT';
	                    case 3:
	                        return '[minulú stredu o] LT';
	                    case 4:
	                    case 5:
	                        return '[minulý] dddd [o] LT';
	                    case 6:
	                        return '[minulú sobotu o] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'za %s',
	            past: 'pred %s',
	            s: translate,
	            m: translate,
	            mm: translate,
	            h: translate,
	            hh: translate,
	            d: translate,
	            dd: translate,
	            M: translate,
	            MM: translate,
	            y: translate,
	            yy: translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal: '%d.',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	});

/***/ },
/* 115 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : slovenian (sl)
	// author : Robert Sedovšek : https://github.com/sedovsek

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    function translate(number, withoutSuffix, key) {
	        var result = number + ' ';
	        switch (key) {
	            case 'm':
	                return withoutSuffix ? 'ena minuta' : 'eno minuto';
	            case 'mm':
	                if (number === 1) {
	                    result += 'minuta';
	                } else if (number === 2) {
	                    result += 'minuti';
	                } else if (number === 3 || number === 4) {
	                    result += 'minute';
	                } else {
	                    result += 'minut';
	                }
	                return result;
	            case 'h':
	                return withoutSuffix ? 'ena ura' : 'eno uro';
	            case 'hh':
	                if (number === 1) {
	                    result += 'ura';
	                } else if (number === 2) {
	                    result += 'uri';
	                } else if (number === 3 || number === 4) {
	                    result += 'ure';
	                } else {
	                    result += 'ur';
	                }
	                return result;
	            case 'dd':
	                if (number === 1) {
	                    result += 'dan';
	                } else {
	                    result += 'dni';
	                }
	                return result;
	            case 'MM':
	                if (number === 1) {
	                    result += 'mesec';
	                } else if (number === 2) {
	                    result += 'meseca';
	                } else if (number === 3 || number === 4) {
	                    result += 'mesece';
	                } else {
	                    result += 'mesecev';
	                }
	                return result;
	            case 'yy':
	                if (number === 1) {
	                    result += 'leto';
	                } else if (number === 2) {
	                    result += 'leti';
	                } else if (number === 3 || number === 4) {
	                    result += 'leta';
	                } else {
	                    result += 'let';
	                }
	                return result;
	        }
	    }

	    return moment.defineLocale('sl', {
	        months: 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split('_'),
	        monthsShort: 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split('_'),
	        weekdays: 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),
	        weekdaysShort: 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),
	        weekdaysMin: 'ne_po_to_sr_če_pe_so'.split('_'),
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS: 'LT:ss',
	            L: 'DD. MM. YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY LT',
	            LLLL: 'dddd, D. MMMM YYYY LT'
	        },
	        calendar: {
	            sameDay: '[danes ob] LT',
	            nextDay: '[jutri ob] LT',

	            nextWeek: function nextWeek() {
	                switch (this.day()) {
	                    case 0:
	                        return '[v] [nedeljo] [ob] LT';
	                    case 3:
	                        return '[v] [sredo] [ob] LT';
	                    case 6:
	                        return '[v] [soboto] [ob] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                    case 5:
	                        return '[v] dddd [ob] LT';
	                }
	            },
	            lastDay: '[včeraj ob] LT',
	            lastWeek: function lastWeek() {
	                switch (this.day()) {
	                    case 0:
	                    case 3:
	                    case 6:
	                        return '[prejšnja] dddd [ob] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                    case 5:
	                        return '[prejšnji] dddd [ob] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'čez %s',
	            past: '%s nazaj',
	            s: 'nekaj sekund',
	            m: translate,
	            mm: translate,
	            h: translate,
	            hh: translate,
	            d: 'en dan',
	            dd: translate,
	            M: 'en mesec',
	            MM: translate,
	            y: 'eno leto',
	            yy: translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal: '%d.',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 7 // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	});

/***/ },
/* 116 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : Albanian (sq)
	// author : Flakërim Ismani : https://github.com/flakerimi
	// author: Menelion Elensúle: https://github.com/Oire (tests)
	// author : Oerd Cukalla : https://github.com/oerd (fixes)

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    return moment.defineLocale('sq', {
	        months: 'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split('_'),
	        monthsShort: 'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split('_'),
	        weekdays: 'E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split('_'),
	        weekdaysShort: 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),
	        weekdaysMin: 'D_H_Ma_Më_E_P_Sh'.split('_'),
	        meridiemParse: /PD|MD/,
	        isPM: function isPM(input) {
	            return input.charAt(0) === 'M';
	        },
	        meridiem: function meridiem(hours, minutes, isLower) {
	            return hours < 12 ? 'PD' : 'MD';
	        },
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'LT:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY LT',
	            LLLL: 'dddd, D MMMM YYYY LT'
	        },
	        calendar: {
	            sameDay: '[Sot në] LT',
	            nextDay: '[Nesër në] LT',
	            nextWeek: 'dddd [në] LT',
	            lastDay: '[Dje në] LT',
	            lastWeek: 'dddd [e kaluar në] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'në %s',
	            past: '%s më parë',
	            s: 'disa sekonda',
	            m: 'një minutë',
	            mm: '%d minuta',
	            h: 'një orë',
	            hh: '%d orë',
	            d: 'një ditë',
	            dd: '%d ditë',
	            M: 'një muaj',
	            MM: '%d muaj',
	            y: 'një vit',
	            yy: '%d vite'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal: '%d.',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	});

/***/ },
/* 117 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : Serbian-cyrillic (sr-cyrl)
	// author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    var translator = {
	        words: { //Different grammatical cases
	            m: ['један минут', 'једне минуте'],
	            mm: ['минут', 'минуте', 'минута'],
	            h: ['један сат', 'једног сата'],
	            hh: ['сат', 'сата', 'сати'],
	            dd: ['дан', 'дана', 'дана'],
	            MM: ['месец', 'месеца', 'месеци'],
	            yy: ['година', 'године', 'година']
	        },
	        correctGrammaticalCase: function correctGrammaticalCase(number, wordKey) {
	            return number === 1 ? wordKey[0] : number >= 2 && number <= 4 ? wordKey[1] : wordKey[2];
	        },
	        translate: function translate(number, withoutSuffix, key) {
	            var wordKey = translator.words[key];
	            if (key.length === 1) {
	                return withoutSuffix ? wordKey[0] : wordKey[1];
	            } else {
	                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
	            }
	        }
	    };

	    return moment.defineLocale('sr-cyrl', {
	        months: ['јануар', 'фебруар', 'март', 'април', 'мај', 'јун', 'јул', 'август', 'септембар', 'октобар', 'новембар', 'децембар'],
	        monthsShort: ['јан.', 'феб.', 'мар.', 'апр.', 'мај', 'јун', 'јул', 'авг.', 'сеп.', 'окт.', 'нов.', 'дец.'],
	        weekdays: ['недеља', 'понедељак', 'уторак', 'среда', 'четвртак', 'петак', 'субота'],
	        weekdaysShort: ['нед.', 'пон.', 'уто.', 'сре.', 'чет.', 'пет.', 'суб.'],
	        weekdaysMin: ['не', 'по', 'ут', 'ср', 'че', 'пе', 'су'],
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS: 'LT:ss',
	            L: 'DD. MM. YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY LT',
	            LLLL: 'dddd, D. MMMM YYYY LT'
	        },
	        calendar: {
	            sameDay: '[данас у] LT',
	            nextDay: '[сутра у] LT',

	            nextWeek: function nextWeek() {
	                switch (this.day()) {
	                    case 0:
	                        return '[у] [недељу] [у] LT';
	                    case 3:
	                        return '[у] [среду] [у] LT';
	                    case 6:
	                        return '[у] [суботу] [у] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                    case 5:
	                        return '[у] dddd [у] LT';
	                }
	            },
	            lastDay: '[јуче у] LT',
	            lastWeek: function lastWeek() {
	                var lastWeekDays = ['[прошле] [недеље] [у] LT', '[прошлог] [понедељка] [у] LT', '[прошлог] [уторка] [у] LT', '[прошле] [среде] [у] LT', '[прошлог] [четвртка] [у] LT', '[прошлог] [петка] [у] LT', '[прошле] [суботе] [у] LT'];
	                return lastWeekDays[this.day()];
	            },
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'за %s',
	            past: 'пре %s',
	            s: 'неколико секунди',
	            m: translator.translate,
	            mm: translator.translate,
	            h: translator.translate,
	            hh: translator.translate,
	            d: 'дан',
	            dd: translator.translate,
	            M: 'месец',
	            MM: translator.translate,
	            y: 'годину',
	            yy: translator.translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal: '%d.',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 7 // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	});

/***/ },
/* 118 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : Serbian-latin (sr)
	// author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    var translator = {
	        words: { //Different grammatical cases
	            m: ['jedan minut', 'jedne minute'],
	            mm: ['minut', 'minute', 'minuta'],
	            h: ['jedan sat', 'jednog sata'],
	            hh: ['sat', 'sata', 'sati'],
	            dd: ['dan', 'dana', 'dana'],
	            MM: ['mesec', 'meseca', 'meseci'],
	            yy: ['godina', 'godine', 'godina']
	        },
	        correctGrammaticalCase: function correctGrammaticalCase(number, wordKey) {
	            return number === 1 ? wordKey[0] : number >= 2 && number <= 4 ? wordKey[1] : wordKey[2];
	        },
	        translate: function translate(number, withoutSuffix, key) {
	            var wordKey = translator.words[key];
	            if (key.length === 1) {
	                return withoutSuffix ? wordKey[0] : wordKey[1];
	            } else {
	                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
	            }
	        }
	    };

	    return moment.defineLocale('sr', {
	        months: ['januar', 'februar', 'mart', 'april', 'maj', 'jun', 'jul', 'avgust', 'septembar', 'oktobar', 'novembar', 'decembar'],
	        monthsShort: ['jan.', 'feb.', 'mar.', 'apr.', 'maj', 'jun', 'jul', 'avg.', 'sep.', 'okt.', 'nov.', 'dec.'],
	        weekdays: ['nedelja', 'ponedeljak', 'utorak', 'sreda', 'četvrtak', 'petak', 'subota'],
	        weekdaysShort: ['ned.', 'pon.', 'uto.', 'sre.', 'čet.', 'pet.', 'sub.'],
	        weekdaysMin: ['ne', 'po', 'ut', 'sr', 'če', 'pe', 'su'],
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS: 'LT:ss',
	            L: 'DD. MM. YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY LT',
	            LLLL: 'dddd, D. MMMM YYYY LT'
	        },
	        calendar: {
	            sameDay: '[danas u] LT',
	            nextDay: '[sutra u] LT',

	            nextWeek: function nextWeek() {
	                switch (this.day()) {
	                    case 0:
	                        return '[u] [nedelju] [u] LT';
	                    case 3:
	                        return '[u] [sredu] [u] LT';
	                    case 6:
	                        return '[u] [subotu] [u] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                    case 5:
	                        return '[u] dddd [u] LT';
	                }
	            },
	            lastDay: '[juče u] LT',
	            lastWeek: function lastWeek() {
	                var lastWeekDays = ['[prošle] [nedelje] [u] LT', '[prošlog] [ponedeljka] [u] LT', '[prošlog] [utorka] [u] LT', '[prošle] [srede] [u] LT', '[prošlog] [četvrtka] [u] LT', '[prošlog] [petka] [u] LT', '[prošle] [subote] [u] LT'];
	                return lastWeekDays[this.day()];
	            },
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'za %s',
	            past: 'pre %s',
	            s: 'nekoliko sekundi',
	            m: translator.translate,
	            mm: translator.translate,
	            h: translator.translate,
	            hh: translator.translate,
	            d: 'dan',
	            dd: translator.translate,
	            M: 'mesec',
	            MM: translator.translate,
	            y: 'godinu',
	            yy: translator.translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal: '%d.',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 7 // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	});

/***/ },
/* 119 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : swedish (sv)
	// author : Jens Alm : https://github.com/ulmus

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    return moment.defineLocale('sv', {
	        months: 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split('_'),
	        monthsShort: 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
	        weekdays: 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),
	        weekdaysShort: 'sön_mån_tis_ons_tor_fre_lör'.split('_'),
	        weekdaysMin: 'sö_må_ti_on_to_fr_lö'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'LT:ss',
	            L: 'YYYY-MM-DD',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY LT',
	            LLLL: 'dddd D MMMM YYYY LT'
	        },
	        calendar: {
	            sameDay: '[Idag] LT',
	            nextDay: '[Imorgon] LT',
	            lastDay: '[Igår] LT',
	            nextWeek: 'dddd LT',
	            lastWeek: '[Förra] dddd[en] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'om %s',
	            past: 'för %s sedan',
	            s: 'några sekunder',
	            m: 'en minut',
	            mm: '%d minuter',
	            h: 'en timme',
	            hh: '%d timmar',
	            d: 'en dag',
	            dd: '%d dagar',
	            M: 'en månad',
	            MM: '%d månader',
	            y: 'ett år',
	            yy: '%d år'
	        },
	        ordinalParse: /\d{1,2}(e|a)/,
	        ordinal: function ordinal(number) {
	            var b = number % 10,
	                output = ~ ~(number % 100 / 10) === 1 ? 'e' : b === 1 ? 'a' : b === 2 ? 'a' : b === 3 ? 'e' : 'e';
	            return number + output;
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	});

/***/ },
/* 120 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : tamil (ta)
	// author : Arjunkumar Krishnamoorthy : https://github.com/tk120404

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    /*var symbolMap = {
	            '1': '௧',
	            '2': '௨',
	            '3': '௩',
	            '4': '௪',
	            '5': '௫',
	            '6': '௬',
	            '7': '௭',
	            '8': '௮',
	            '9': '௯',
	            '0': '௦'
	        },
	        numberMap = {
	            '௧': '1',
	            '௨': '2',
	            '௩': '3',
	            '௪': '4',
	            '௫': '5',
	            '௬': '6',
	            '௭': '7',
	            '௮': '8',
	            '௯': '9',
	            '௦': '0'
	        }; */

	    return moment.defineLocale('ta', {
	        months: 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),
	        monthsShort: 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),
	        weekdays: 'ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை'.split('_'),
	        weekdaysShort: 'ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி'.split('_'),
	        weekdaysMin: 'ஞா_தி_செ_பு_வி_வெ_ச'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'LT:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY, LT',
	            LLLL: 'dddd, D MMMM YYYY, LT'
	        },
	        calendar: {
	            sameDay: '[இன்று] LT',
	            nextDay: '[நாளை] LT',
	            nextWeek: 'dddd, LT',
	            lastDay: '[நேற்று] LT',
	            lastWeek: '[கடந்த வாரம்] dddd, LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: '%s இல்',
	            past: '%s முன்',
	            s: 'ஒரு சில விநாடிகள்',
	            m: 'ஒரு நிமிடம்',
	            mm: '%d நிமிடங்கள்',
	            h: 'ஒரு மணி நேரம்',
	            hh: '%d மணி நேரம்',
	            d: 'ஒரு நாள்',
	            dd: '%d நாட்கள்',
	            M: 'ஒரு மாதம்',
	            MM: '%d மாதங்கள்',
	            y: 'ஒரு வருடம்',
	            yy: '%d ஆண்டுகள்'
	        },
	        /*        preparse: function (string) {
	                    return string.replace(/[௧௨௩௪௫௬௭௮௯௦]/g, function (match) {
	                        return numberMap[match];
	                    });
	                },
	                postformat: function (string) {
	                    return string.replace(/\d/g, function (match) {
	                        return symbolMap[match];
	                    });
	                },*/
	        ordinalParse: /\d{1,2}வது/,
	        ordinal: function ordinal(number) {
	            return number + 'வது';
	        },

	        // refer http://ta.wikipedia.org/s/1er1
	        meridiemParse: /யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,
	        meridiem: function meridiem(hour, minute, isLower) {
	            if (hour < 2) {
	                return ' யாமம்';
	            } else if (hour < 6) {
	                return ' வைகறை'; // வைகறை
	            } else if (hour < 10) {
	                return ' காலை'; // காலை
	            } else if (hour < 14) {
	                return ' நண்பகல்'; // நண்பகல்
	            } else if (hour < 18) {
	                return ' எற்பாடு'; // எற்பாடு
	            } else if (hour < 22) {
	                return ' மாலை'; // மாலை
	            } else {
	                return ' யாமம்';
	            }
	        },
	        meridiemHour: function meridiemHour(hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'யாமம்') {
	                return hour < 2 ? hour : hour + 12;
	            } else if (meridiem === 'வைகறை' || meridiem === 'காலை') {
	                return hour;
	            } else if (meridiem === 'நண்பகல்') {
	                return hour >= 10 ? hour : hour + 12;
	            } else {
	                return hour + 12;
	            }
	        },
	        week: {
	            dow: 0, // Sunday is the first day of the week.
	            doy: 6 // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	});

/***/ },
/* 121 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : thai (th)
	// author : Kridsada Thanabulpong : https://github.com/sirn

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    return moment.defineLocale('th', {
	        months: 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),
	        monthsShort: 'มกรา_กุมภา_มีนา_เมษา_พฤษภา_มิถุนา_กรกฎา_สิงหา_กันยา_ตุลา_พฤศจิกา_ธันวา'.split('_'),
	        weekdays: 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),
	        weekdaysShort: 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์'.split('_'), // yes, three characters difference
	        weekdaysMin: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),
	        longDateFormat: {
	            LT: 'H นาฬิกา m นาที',
	            LTS: 'LT s วินาที',
	            L: 'YYYY/MM/DD',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY เวลา LT',
	            LLLL: 'วันddddที่ D MMMM YYYY เวลา LT'
	        },
	        meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,
	        isPM: function isPM(input) {
	            return input === 'หลังเที่ยง';
	        },
	        meridiem: function meridiem(hour, minute, isLower) {
	            if (hour < 12) {
	                return 'ก่อนเที่ยง';
	            } else {
	                return 'หลังเที่ยง';
	            }
	        },
	        calendar: {
	            sameDay: '[วันนี้ เวลา] LT',
	            nextDay: '[พรุ่งนี้ เวลา] LT',
	            nextWeek: 'dddd[หน้า เวลา] LT',
	            lastDay: '[เมื่อวานนี้ เวลา] LT',
	            lastWeek: '[วัน]dddd[ที่แล้ว เวลา] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'อีก %s',
	            past: '%sที่แล้ว',
	            s: 'ไม่กี่วินาที',
	            m: '1 นาที',
	            mm: '%d นาที',
	            h: '1 ชั่วโมง',
	            hh: '%d ชั่วโมง',
	            d: '1 วัน',
	            dd: '%d วัน',
	            M: '1 เดือน',
	            MM: '%d เดือน',
	            y: '1 ปี',
	            yy: '%d ปี'
	        }
	    });
	});

/***/ },
/* 122 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : Tagalog/Filipino (tl-ph)
	// author : Dan Hagman

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    return moment.defineLocale('tl-ph', {
	        months: 'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split('_'),
	        monthsShort: 'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'),
	        weekdays: 'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split('_'),
	        weekdaysShort: 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),
	        weekdaysMin: 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'LT:ss',
	            L: 'MM/D/YYYY',
	            LL: 'MMMM D, YYYY',
	            LLL: 'MMMM D, YYYY LT',
	            LLLL: 'dddd, MMMM DD, YYYY LT'
	        },
	        calendar: {
	            sameDay: '[Ngayon sa] LT',
	            nextDay: '[Bukas sa] LT',
	            nextWeek: 'dddd [sa] LT',
	            lastDay: '[Kahapon sa] LT',
	            lastWeek: 'dddd [huling linggo] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'sa loob ng %s',
	            past: '%s ang nakalipas',
	            s: 'ilang segundo',
	            m: 'isang minuto',
	            mm: '%d minuto',
	            h: 'isang oras',
	            hh: '%d oras',
	            d: 'isang araw',
	            dd: '%d araw',
	            M: 'isang buwan',
	            MM: '%d buwan',
	            y: 'isang taon',
	            yy: '%d taon'
	        },
	        ordinalParse: /\d{1,2}/,
	        ordinal: function ordinal(number) {
	            return number;
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	});

/***/ },
/* 123 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : turkish (tr)
	// authors : Erhan Gundogan : https://github.com/erhangundogan,
	//           Burak Yiğit Kaya: https://github.com/BYK

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    var suffixes = {
	        1: '\'inci',
	        5: '\'inci',
	        8: '\'inci',
	        70: '\'inci',
	        80: '\'inci',

	        2: '\'nci',
	        7: '\'nci',
	        20: '\'nci',
	        50: '\'nci',

	        3: '\'üncü',
	        4: '\'üncü',
	        100: '\'üncü',

	        6: '\'ncı',

	        9: '\'uncu',
	        10: '\'uncu',
	        30: '\'uncu',

	        60: '\'ıncı',
	        90: '\'ıncı'
	    };

	    return moment.defineLocale('tr', {
	        months: 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split('_'),
	        monthsShort: 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),
	        weekdays: 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split('_'),
	        weekdaysShort: 'Paz_Pts_Sal_Çar_Per_Cum_Cts'.split('_'),
	        weekdaysMin: 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'LT:ss',
	            L: 'DD.MM.YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY LT',
	            LLLL: 'dddd, D MMMM YYYY LT'
	        },
	        calendar: {
	            sameDay: '[bugün saat] LT',
	            nextDay: '[yarın saat] LT',
	            nextWeek: '[haftaya] dddd [saat] LT',
	            lastDay: '[dün] LT',
	            lastWeek: '[geçen hafta] dddd [saat] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: '%s sonra',
	            past: '%s önce',
	            s: 'birkaç saniye',
	            m: 'bir dakika',
	            mm: '%d dakika',
	            h: 'bir saat',
	            hh: '%d saat',
	            d: 'bir gün',
	            dd: '%d gün',
	            M: 'bir ay',
	            MM: '%d ay',
	            y: 'bir yıl',
	            yy: '%d yıl'
	        },
	        ordinalParse: /\d{1,2}'(inci|nci|üncü|ncı|uncu|ıncı)/,
	        ordinal: function ordinal(number) {
	            if (number === 0) {
	                // special case for zero
	                return number + '\'ıncı';
	            }
	            var a = number % 10,
	                b = number % 100 - a,
	                c = number >= 100 ? 100 : null;

	            return number + (suffixes[a] || suffixes[b] || suffixes[c]);
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 7 // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	});

/***/ },
/* 124 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : Morocco Central Atlas Tamaziɣt in Latin (tzm-latn)
	// author : Abdel Said : https://github.com/abdelsaid

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    return moment.defineLocale('tzm-latn', {
	        months: 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),
	        monthsShort: 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),
	        weekdays: 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
	        weekdaysShort: 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
	        weekdaysMin: 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'LT:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY LT',
	            LLLL: 'dddd D MMMM YYYY LT'
	        },
	        calendar: {
	            sameDay: '[asdkh g] LT',
	            nextDay: '[aska g] LT',
	            nextWeek: 'dddd [g] LT',
	            lastDay: '[assant g] LT',
	            lastWeek: 'dddd [g] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'dadkh s yan %s',
	            past: 'yan %s',
	            s: 'imik',
	            m: 'minuḍ',
	            mm: '%d minuḍ',
	            h: 'saɛa',
	            hh: '%d tassaɛin',
	            d: 'ass',
	            dd: '%d ossan',
	            M: 'ayowr',
	            MM: '%d iyyirn',
	            y: 'asgas',
	            yy: '%d isgasn'
	        },
	        week: {
	            dow: 6, // Saturday is the first day of the week.
	            doy: 12 // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	});

/***/ },
/* 125 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : Morocco Central Atlas Tamaziɣt (tzm)
	// author : Abdel Said : https://github.com/abdelsaid

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    return moment.defineLocale('tzm', {
	        months: 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),
	        monthsShort: 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),
	        weekdays: 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
	        weekdaysShort: 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
	        weekdaysMin: 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'LT:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY LT',
	            LLLL: 'dddd D MMMM YYYY LT'
	        },
	        calendar: {
	            sameDay: '[ⴰⵙⴷⵅ ⴴ] LT',
	            nextDay: '[ⴰⵙⴽⴰ ⴴ] LT',
	            nextWeek: 'dddd [ⴴ] LT',
	            lastDay: '[ⴰⵚⴰⵏⵜ ⴴ] LT',
	            lastWeek: 'dddd [ⴴ] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s',
	            past: 'ⵢⴰⵏ %s',
	            s: 'ⵉⵎⵉⴽ',
	            m: 'ⵎⵉⵏⵓⴺ',
	            mm: '%d ⵎⵉⵏⵓⴺ',
	            h: 'ⵙⴰⵄⴰ',
	            hh: '%d ⵜⴰⵙⵙⴰⵄⵉⵏ',
	            d: 'ⴰⵙⵙ',
	            dd: '%d oⵙⵙⴰⵏ',
	            M: 'ⴰⵢoⵓⵔ',
	            MM: '%d ⵉⵢⵢⵉⵔⵏ',
	            y: 'ⴰⵙⴳⴰⵙ',
	            yy: '%d ⵉⵙⴳⴰⵙⵏ'
	        },
	        week: {
	            dow: 6, // Saturday is the first day of the week.
	            doy: 12 // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	});

/***/ },
/* 126 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : ukrainian (uk)
	// author : zemlanin : https://github.com/zemlanin
	// Author : Menelion Elensúle : https://github.com/Oire

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    function plural(word, num) {
	        var forms = word.split('_');
	        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2];
	    }

	    function relativeTimeWithPlural(number, withoutSuffix, key) {
	        var format = {
	            'mm': 'хвилина_хвилини_хвилин',
	            'hh': 'година_години_годин',
	            'dd': 'день_дні_днів',
	            'MM': 'місяць_місяці_місяців',
	            'yy': 'рік_роки_років'
	        };
	        if (key === 'm') {
	            return withoutSuffix ? 'хвилина' : 'хвилину';
	        } else if (key === 'h') {
	            return withoutSuffix ? 'година' : 'годину';
	        } else {
	            return number + ' ' + plural(format[key], +number);
	        }
	    }

	    function monthsCaseReplace(m, format) {
	        var months = {
	            'nominative': 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split('_'),
	            'accusative': 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split('_')
	        },
	            nounCase = /D[oD]? *MMMM?/.test(format) ? 'accusative' : 'nominative';

	        return months[nounCase][m.month()];
	    }

	    function weekdaysCaseReplace(m, format) {
	        var weekdays = {
	            'nominative': 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split('_'),
	            'accusative': 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split('_'),
	            'genitive': 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split('_')
	        },
	            nounCase = /(\[[ВвУу]\]) ?dddd/.test(format) ? 'accusative' : /\[?(?:минулої|наступної)? ?\] ?dddd/.test(format) ? 'genitive' : 'nominative';

	        return weekdays[nounCase][m.day()];
	    }

	    function processHoursFunction(str) {
	        return function () {
	            return str + 'о' + (this.hours() === 11 ? 'б' : '') + '] LT';
	        };
	    }

	    return moment.defineLocale('uk', {
	        months: monthsCaseReplace,
	        monthsShort: 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split('_'),
	        weekdays: weekdaysCaseReplace,
	        weekdaysShort: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
	        weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'LT:ss',
	            L: 'DD.MM.YYYY',
	            LL: 'D MMMM YYYY р.',
	            LLL: 'D MMMM YYYY р., LT',
	            LLLL: 'dddd, D MMMM YYYY р., LT'
	        },
	        calendar: {
	            sameDay: processHoursFunction('[Сьогодні '),
	            nextDay: processHoursFunction('[Завтра '),
	            lastDay: processHoursFunction('[Вчора '),
	            nextWeek: processHoursFunction('[У] dddd ['),
	            lastWeek: function lastWeek() {
	                switch (this.day()) {
	                    case 0:
	                    case 3:
	                    case 5:
	                    case 6:
	                        return processHoursFunction('[Минулої] dddd [').call(this);
	                    case 1:
	                    case 2:
	                    case 4:
	                        return processHoursFunction('[Минулого] dddd [').call(this);
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'за %s',
	            past: '%s тому',
	            s: 'декілька секунд',
	            m: relativeTimeWithPlural,
	            mm: relativeTimeWithPlural,
	            h: 'годину',
	            hh: relativeTimeWithPlural,
	            d: 'день',
	            dd: relativeTimeWithPlural,
	            M: 'місяць',
	            MM: relativeTimeWithPlural,
	            y: 'рік',
	            yy: relativeTimeWithPlural
	        },

	        // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason

	        meridiemParse: /ночі|ранку|дня|вечора/,
	        isPM: function isPM(input) {
	            return /^(дня|вечора)$/.test(input);
	        },
	        meridiem: function meridiem(hour, minute, isLower) {
	            if (hour < 4) {
	                return 'ночі';
	            } else if (hour < 12) {
	                return 'ранку';
	            } else if (hour < 17) {
	                return 'дня';
	            } else {
	                return 'вечора';
	            }
	        },

	        ordinalParse: /\d{1,2}-(й|го)/,
	        ordinal: function ordinal(number, period) {
	            switch (period) {
	                case 'M':
	                case 'd':
	                case 'DDD':
	                case 'w':
	                case 'W':
	                    return number + '-й';
	                case 'D':
	                    return number + '-го';
	                default:
	                    return number;
	            }
	        },

	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 7 // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	});

/***/ },
/* 127 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : uzbek (uz)
	// author : Sardor Muminov : https://github.com/muminoff

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    return moment.defineLocale('uz', {
	        months: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_'),
	        monthsShort: 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),
	        weekdays: 'Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба'.split('_'),
	        weekdaysShort: 'Якш_Душ_Сеш_Чор_Пай_Жум_Шан'.split('_'),
	        weekdaysMin: 'Як_Ду_Се_Чо_Па_Жу_Ша'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'LT:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY LT',
	            LLLL: 'D MMMM YYYY, dddd LT'
	        },
	        calendar: {
	            sameDay: '[Бугун соат] LT [да]',
	            nextDay: '[Эртага] LT [да]',
	            nextWeek: 'dddd [куни соат] LT [да]',
	            lastDay: '[Кеча соат] LT [да]',
	            lastWeek: '[Утган] dddd [куни соат] LT [да]',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'Якин %s ичида',
	            past: 'Бир неча %s олдин',
	            s: 'фурсат',
	            m: 'бир дакика',
	            mm: '%d дакика',
	            h: 'бир соат',
	            hh: '%d соат',
	            d: 'бир кун',
	            dd: '%d кун',
	            M: 'бир ой',
	            MM: '%d ой',
	            y: 'бир йил',
	            yy: '%d йил'
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 7 // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	});

/***/ },
/* 128 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : vietnamese (vi)
	// author : Bang Nguyen : https://github.com/bangnk

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    return moment.defineLocale('vi', {
	        months: 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split('_'),
	        monthsShort: 'Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12'.split('_'),
	        weekdays: 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split('_'),
	        weekdaysShort: 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
	        weekdaysMin: 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'LT:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM [năm] YYYY',
	            LLL: 'D MMMM [năm] YYYY LT',
	            LLLL: 'dddd, D MMMM [năm] YYYY LT',
	            l: 'DD/M/YYYY',
	            ll: 'D MMM YYYY',
	            lll: 'D MMM YYYY LT',
	            llll: 'ddd, D MMM YYYY LT'
	        },
	        calendar: {
	            sameDay: '[Hôm nay lúc] LT',
	            nextDay: '[Ngày mai lúc] LT',
	            nextWeek: 'dddd [tuần tới lúc] LT',
	            lastDay: '[Hôm qua lúc] LT',
	            lastWeek: 'dddd [tuần rồi lúc] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: '%s tới',
	            past: '%s trước',
	            s: 'vài giây',
	            m: 'một phút',
	            mm: '%d phút',
	            h: 'một giờ',
	            hh: '%d giờ',
	            d: 'một ngày',
	            dd: '%d ngày',
	            M: 'một tháng',
	            MM: '%d tháng',
	            y: 'một năm',
	            yy: '%d năm'
	        },
	        ordinalParse: /\d{1,2}/,
	        ordinal: function ordinal(number) {
	            return number;
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	});

/***/ },
/* 129 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : chinese (zh-cn)
	// author : suupic : https://github.com/suupic
	// author : Zeno Zeng : https://github.com/zenozeng

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    return moment.defineLocale('zh-cn', {
	        months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
	        monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
	        weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
	        weekdaysShort: '周日_周一_周二_周三_周四_周五_周六'.split('_'),
	        weekdaysMin: '日_一_二_三_四_五_六'.split('_'),
	        longDateFormat: {
	            LT: 'Ah点mm',
	            LTS: 'Ah点m分s秒',
	            L: 'YYYY-MM-DD',
	            LL: 'YYYY年MMMD日',
	            LLL: 'YYYY年MMMD日LT',
	            LLLL: 'YYYY年MMMD日ddddLT',
	            l: 'YYYY-MM-DD',
	            ll: 'YYYY年MMMD日',
	            lll: 'YYYY年MMMD日LT',
	            llll: 'YYYY年MMMD日ddddLT'
	        },
	        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
	        meridiemHour: function meridiemHour(hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
	                return hour;
	            } else if (meridiem === '下午' || meridiem === '晚上') {
	                return hour + 12;
	            } else {
	                // '中午'
	                return hour >= 11 ? hour : hour + 12;
	            }
	        },
	        meridiem: function meridiem(hour, minute, isLower) {
	            var hm = hour * 100 + minute;
	            if (hm < 600) {
	                return '凌晨';
	            } else if (hm < 900) {
	                return '早上';
	            } else if (hm < 1130) {
	                return '上午';
	            } else if (hm < 1230) {
	                return '中午';
	            } else if (hm < 1800) {
	                return '下午';
	            } else {
	                return '晚上';
	            }
	        },
	        calendar: {
	            sameDay: function sameDay() {
	                return this.minutes() === 0 ? '[今天]Ah[点整]' : '[今天]LT';
	            },
	            nextDay: function nextDay() {
	                return this.minutes() === 0 ? '[明天]Ah[点整]' : '[明天]LT';
	            },
	            lastDay: function lastDay() {
	                return this.minutes() === 0 ? '[昨天]Ah[点整]' : '[昨天]LT';
	            },
	            nextWeek: function nextWeek() {
	                var startOfWeek, prefix;
	                startOfWeek = moment().startOf('week');
	                prefix = this.unix() - startOfWeek.unix() >= 7 * 24 * 3600 ? '[下]' : '[本]';
	                return this.minutes() === 0 ? prefix + 'dddAh点整' : prefix + 'dddAh点mm';
	            },
	            lastWeek: function lastWeek() {
	                var startOfWeek, prefix;
	                startOfWeek = moment().startOf('week');
	                prefix = this.unix() < startOfWeek.unix() ? '[上]' : '[本]';
	                return this.minutes() === 0 ? prefix + 'dddAh点整' : prefix + 'dddAh点mm';
	            },
	            sameElse: 'LL'
	        },
	        ordinalParse: /\d{1,2}(日|月|周)/,
	        ordinal: function ordinal(number, period) {
	            switch (period) {
	                case 'd':
	                case 'D':
	                case 'DDD':
	                    return number + '日';
	                case 'M':
	                    return number + '月';
	                case 'w':
	                case 'W':
	                    return number + '周';
	                default:
	                    return number;
	            }
	        },
	        relativeTime: {
	            future: '%s内',
	            past: '%s前',
	            s: '几秒',
	            m: '1分钟',
	            mm: '%d分钟',
	            h: '1小时',
	            hh: '%d小时',
	            d: '1天',
	            dd: '%d天',
	            M: '1个月',
	            MM: '%d个月',
	            y: '1年',
	            yy: '%d年'
	        },
	        week: {
	            // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	});

/***/ },
/* 130 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js locale configuration
	// locale : traditional chinese (zh-tw)
	// author : Ben : https://github.com/ben-lin

	'use strict';

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global
	    }
	})(function (moment) {
	    return moment.defineLocale('zh-tw', {
	        months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
	        monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
	        weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
	        weekdaysShort: '週日_週一_週二_週三_週四_週五_週六'.split('_'),
	        weekdaysMin: '日_一_二_三_四_五_六'.split('_'),
	        longDateFormat: {
	            LT: 'Ah點mm',
	            LTS: 'Ah點m分s秒',
	            L: 'YYYY年MMMD日',
	            LL: 'YYYY年MMMD日',
	            LLL: 'YYYY年MMMD日LT',
	            LLLL: 'YYYY年MMMD日ddddLT',
	            l: 'YYYY年MMMD日',
	            ll: 'YYYY年MMMD日',
	            lll: 'YYYY年MMMD日LT',
	            llll: 'YYYY年MMMD日ddddLT'
	        },
	        meridiemParse: /早上|上午|中午|下午|晚上/,
	        meridiemHour: function meridiemHour(hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === '早上' || meridiem === '上午') {
	                return hour;
	            } else if (meridiem === '中午') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === '下午' || meridiem === '晚上') {
	                return hour + 12;
	            }
	        },
	        meridiem: function meridiem(hour, minute, isLower) {
	            var hm = hour * 100 + minute;
	            if (hm < 900) {
	                return '早上';
	            } else if (hm < 1130) {
	                return '上午';
	            } else if (hm < 1230) {
	                return '中午';
	            } else if (hm < 1800) {
	                return '下午';
	            } else {
	                return '晚上';
	            }
	        },
	        calendar: {
	            sameDay: '[今天]LT',
	            nextDay: '[明天]LT',
	            nextWeek: '[下]ddddLT',
	            lastDay: '[昨天]LT',
	            lastWeek: '[上]ddddLT',
	            sameElse: 'L'
	        },
	        ordinalParse: /\d{1,2}(日|月|週)/,
	        ordinal: function ordinal(number, period) {
	            switch (period) {
	                case 'd':
	                case 'D':
	                case 'DDD':
	                    return number + '日';
	                case 'M':
	                    return number + '月';
	                case 'w':
	                case 'W':
	                    return number + '週';
	                default:
	                    return number;
	            }
	        },
	        relativeTime: {
	            future: '%s內',
	            past: '%s前',
	            s: '幾秒',
	            m: '一分鐘',
	            mm: '%d分鐘',
	            h: '一小時',
	            hh: '%d小時',
	            d: '一天',
	            dd: '%d天',
	            M: '一個月',
	            MM: '%d個月',
	            y: '一年',
	            yy: '%d年'
	        }
	    });
	});

/***/ },
/* 131 */
/***/ function(module, exports, __webpack_require__) {

	// shim for using process in browser

	'use strict';

	var process = module.exports = {};

	process.nextTick = (function () {
	    var canSetImmediate = typeof window !== 'undefined' && window.setImmediate;
	    var canMutationObserver = typeof window !== 'undefined' && window.MutationObserver;
	    var canPost = typeof window !== 'undefined' && window.postMessage && window.addEventListener;

	    if (canSetImmediate) {
	        return function (f) {
	            return window.setImmediate(f);
	        };
	    }

	    var queue = [];

	    if (canMutationObserver) {
	        var hiddenDiv = document.createElement('div');
	        var observer = new MutationObserver(function () {
	            var queueList = queue.slice();
	            queue.length = 0;
	            queueList.forEach(function (fn) {
	                fn();
	            });
	        });

	        observer.observe(hiddenDiv, { attributes: true });

	        return function nextTick(fn) {
	            if (!queue.length) {
	                hiddenDiv.setAttribute('yes', 'no');
	            }
	            queue.push(fn);
	        };
	    }

	    if (canPost) {
	        window.addEventListener('message', function (ev) {
	            var source = ev.source;
	            if ((source === window || source === null) && ev.data === 'process-tick') {
	                ev.stopPropagation();
	                if (queue.length > 0) {
	                    var fn = queue.shift();
	                    fn();
	                }
	            }
	        }, true);

	        return function nextTick(fn) {
	            queue.push(fn);
	            window.postMessage('process-tick', '*');
	        };
	    }

	    return function nextTick(fn) {
	        setTimeout(fn, 0);
	    };
	})();

	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];

	function noop() {}

	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;

	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};

	// TODO(shtylman)
	process.cwd = function () {
	    return '/';
	};
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};

/***/ },
/* 132 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	module.exports = function (module) {
		if (!module.webpackPolyfill) {
			module.deprecate = function () {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	};

/***/ },
/* 133 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var _createClass = (function () {
	    function defineProperties(target, props) {
	        for (var key in props) {
	            var prop = props[key];prop.configurable = true;if (prop.value) prop.writable = true;
	        }Object.defineProperties(target, props);
	    }return function (Constructor, protoProps, staticProps) {
	        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	    };
	})();

	var _classCallCheck = function _classCallCheck(instance, Constructor) {
	    if (!(instance instanceof Constructor)) {
	        throw new TypeError("Cannot call a class as a function");
	    }
	};

	var moment = __webpack_require__(24);
	var _ = __webpack_require__(143);

	var util = __webpack_require__(142);
	var TimeRange = __webpack_require__(134);

	var units = {
	    s: { label: "seconds", length: 1 },
	    m: { label: "minutes", length: 60 },
	    h: { label: "hours", length: 60 * 60 },
	    d: { label: "days", length: 60 * 60 * 24 }
	};

	/**
	 * An index that represents as a string a range of time.
	 *
	 * The actual derived timerange can be found using asRange(). This will return
	 * a TimeRange instance.
	 *
	 * The original string representation can be found with toString().
	 */

	var Index = (function () {
	    function Index(s) {
	        _classCallCheck(this, Index);

	        this._s = s;
	        this._r = this._rangeFromIndexString(s);
	    }

	    _createClass(Index, {
	        _rangeFromIndexString: {
	            value: function _rangeFromIndexString(s) {
	                var parts = s.split("-");
	                var size = parts[0];

	                //Position should be an int
	                var pos = parseInt(parts[1], 10);

	                //size should be two parts, a number and a letter
	                var re = /([0-9]+)([smhd])/;

	                var sizeParts = re.exec(size);
	                if (sizeParts && sizeParts.length >= 3) {
	                    var num = parseInt(sizeParts[1]);
	                    var unit = sizeParts[2];
	                    var length = num * units[unit].length * 1000;
	                }

	                var beginTime = moment.utc(pos * length);
	                var endTime = moment.utc((pos + 1) * length);

	                return new TimeRange(beginTime, endTime);
	            }
	        },
	        toJSON: {
	            value: function toJSON() {
	                return this._s;
	            }
	        },
	        toString: {
	            value: function toString() {
	                return this._s;
	            }
	        },
	        asString: {
	            value: function asString() {
	                return this.toString(); //alias
	            }
	        },
	        asTimerange: {
	            value: function asTimerange() {
	                return this._r;
	            }
	        }
	    });

	    return Index;
	})();

	module.exports = Index;

/***/ },
/* 134 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var _createClass = (function () {
	    function defineProperties(target, props) {
	        for (var key in props) {
	            var prop = props[key];prop.configurable = true;if (prop.value) prop.writable = true;
	        }Object.defineProperties(target, props);
	    }return function (Constructor, protoProps, staticProps) {
	        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	    };
	})();

	var _classCallCheck = function _classCallCheck(instance, Constructor) {
	    if (!(instance instanceof Constructor)) {
	        throw new TypeError("Cannot call a class as a function");
	    }
	};

	var _ = __webpack_require__(143);
	var Immutable = __webpack_require__(144);
	var moment = __webpack_require__(24);

	var TimeRange = (function () {
	    function TimeRange(arg1, arg2) {
	        _classCallCheck(this, TimeRange);

	        if (arg1 instanceof TimeRange) {
	            var other = arg1;
	            this._range = other._range;
	        } else if (arg1 instanceof Immutable.List) {
	            var rangeList = arg1;
	            this._range = rangeList;
	        } else if (_.isArray(arg1)) {
	            var rangeArray = arg1;
	            this._range = Immutable.List([new Date(rangeArray[0]), new Date(rangeArray[1])]);
	        } else {
	            var b = arg1;
	            var e = arg2;
	            if (_.isDate(b) && _.isDate(e)) {
	                this._range = Immutable.List([new Date(b.getTime()), new Date(e.getTime())]);
	            } else if (moment.isMoment(b) && moment.isMoment(e)) {
	                this._range = Immutable.List([new Date(b.valueOf()), new Date(e.valueOf())]);
	            } else if (_.isNumber(b) && _.isNumber(e)) {
	                this._range = Immutable.List([new Date(b), new Date(e)]);
	            }
	        }
	    }

	    _createClass(TimeRange, {
	        range: {

	            /**
	             * Returns the internal range, which is an Immutable List containing begin and end keys
	             */

	            value: function range() {
	                return this._range;
	            }
	        },
	        toJSON: {

	            //
	            // Serialize
	            //

	            value: function toJSON() {
	                return [this.begin().getTime(), this.end().getTime()];
	            }
	        },
	        toString: {
	            value: function toString() {
	                return JSON.stringify(this.toJSON());
	            }
	        },
	        toLocalString: {
	            value: function toLocalString() {
	                return "[" + this.begin().toString() + ", " + this.end().toString() + "]";
	            }
	        },
	        toUTCString: {
	            value: function toUTCString() {
	                return "[" + this.begin().toUTCString() + ", " + this.end().toUTCString() + "]";
	            }
	        },
	        humanize: {
	            value: function humanize() {
	                var begin = new moment(this.begin());
	                var end = new moment(this.end());
	                return "" + begin.format("MMM D, YYYY hh:mm:ss a") + " to " + end.format("MMM D, YYYY hh:mm:ss a");
	            }
	        },
	        relativeString: {
	            value: function relativeString() {
	                var begin = new moment(this.begin());
	                var end = new moment(this.end());
	                return "" + begin.fromNow() + " to " + end.fromNow();
	            }
	        },
	        begin: {
	            value: function begin() {
	                return this._range.get(0);
	            }
	        },
	        end: {
	            value: function end() {
	                return this._range.get(1);
	            }
	        },
	        setBegin: {

	            /**
	             * Sets a new begin time on the TimeRange. The result will be a new TimeRange.
	             *
	             * @param {Date} - The begin time to set the start of the Timerange to.
	             */

	            value: function setBegin(t) {
	                return new TimeRange(this._range.set(0, t));
	            }
	        },
	        setEnd: {

	            /**
	             * Sets a new end time on the TimeRange. The result will be a new TimeRange.
	             *
	             * @param {Date} - The time to set the end of the Timerange to.
	             */

	            value: function setEnd(t) {
	                return new TimeRange(this._range.set(1, t));
	            }
	        },
	        equals: {

	            /**
	             * @returns {boolean} Returns if the two TimeRanges can be considered equal,
	             *                    in that they have the same times.
	             */

	            value: function equals(other) {
	                return this.begin() === other.begin() && this.end() === other.end();
	            }
	        },
	        contains: {

	            /**
	             * @param {TimeRange|Date} - The other Range or Date to compare this to.
	             * @returns {boolean} Returns true if other is completely inside this.
	             */

	            value: function contains(other) {
	                if (_.isDate(other)) {
	                    return this.begin() <= other && this.end() >= other;
	                } else {
	                    return this.begin() <= other.begin() && this.end() >= other.end();
	                }
	                return false;
	            }
	        },
	        within: {

	            /**
	             * @param - The other Range to compare this to.
	             * @returns {boolean} Returns true if this TimeRange is completely within the supplied other TimeRange.
	             */

	            value: function within(other) {
	                return this.begin() >= other.begin() && this.end() <= other.end();
	            }
	        },
	        overlaps: {

	            /**
	             * @param - The other Range to compare this to.
	             * @returns {boolean} Returns true if the passed in other TimeRange overlaps this time Range.
	             */

	            value: function overlaps(other) {
	                if (this.contains(other.begin()) && !this.contains(other.end()) || this.contains(other.end()) && !this.contains(other.begin())) {
	                    return true;
	                } else {
	                    return false;
	                }
	            }
	        },
	        disjoint: {

	            /**
	             * @param - The other Range to compare this to.
	             * @returns {boolean} Returns true if the passed in other Range in no way
	             * overlaps this time Range.
	             */

	            value: function disjoint(other) {
	                return this.end() < other.begin() || this.begin() > other.end();
	            }
	        },
	        extents: {

	            /**
	            * Returns a new Timerange which covers the extents of this and other combined.
	            *
	            * @param - The other Range to take the Union with.
	            * @returns {TimeRange} Returns a new Range that is the union of this and other.
	            */

	            value: function extents(other) {
	                var b = this.begin() < other.begin() ? this.begin() : other.begin();
	                var e = this.end() > other.end() ? this.end() : other.end();
	                return new TimeRange(new Date(b.getTime()), new Date(e.getTime()));
	            }
	        },
	        intersection: {

	            /**
	            * Returns a new TimeRange which is the intersection of this and other.
	            * @param - The other TimeRange to take the intersection with.
	            * @returns {TimeRange} Returns a new TimeRange which represents the intersection
	            * (overlapping) part of this and other.
	            */

	            value: function intersection(other) {
	                if (this.disjoint(other)) {
	                    return undefined;
	                }
	                var b = this.begin() > other.begin() ? this.begin() : other.begin();
	                var e = this.end() < other.end() ? this.end() : other.end();
	                return new TimeRange(new Date(b.getTime()), new Date(e.getTime()));
	            }
	        },
	        duration: {
	            value: function duration() {
	                return this.end().getTime() - this.begin().getTime();
	            }
	        },
	        humanizeDuration: {
	            value: function humanizeDuration() {
	                return moment.duration(this.duration()).humanize();
	            }
	        }
	    }, {
	        lastDay: {

	            //
	            // Static TimeRange creators
	            //

	            value: function lastDay(thing) {
	                var beginTime = moment();
	                var endTime = beginTime.clone().subtract(24, "hours");
	                return new TimeRange(beginTime, endTime);
	            }
	        },
	        lastSevenDays: {
	            value: function lastSevenDays(thing) {
	                var beginTime = moment();
	                var endTime = beginTime.clone().subtract(7, "days");
	                return new TimeRange(beginTime, endTime);
	            }
	        },
	        lastThirtyDays: {
	            value: function lastThirtyDays(thing) {
	                var beginTime = moment();
	                var endTime = beginTime.clone().subtract(30, "days");
	                return new TimeRange(beginTime, endTime);
	            }
	        },
	        lastNinetyDays: {
	            value: function lastNinetyDays(thing) {
	                var beginTime = moment();
	                var endTime = beginTime.clone().subtract(90, "days");
	                return new TimeRange(beginTime, endTime);
	            }
	        }
	    });

	    return TimeRange;
	})();

	module.exports = TimeRange;

/***/ },
/* 135 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var _createClass = (function () {
	    function defineProperties(target, props) {
	        for (var key in props) {
	            var prop = props[key];prop.configurable = true;if (prop.value) prop.writable = true;
	        }Object.defineProperties(target, props);
	    }return function (Constructor, protoProps, staticProps) {
	        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	    };
	})();

	var _classCallCheck = function _classCallCheck(instance, Constructor) {
	    if (!(instance instanceof Constructor)) {
	        throw new TypeError("Cannot call a class as a function");
	    }
	};

	var moment = __webpack_require__(24);
	var _ = __webpack_require__(143);
	var Immutable = __webpack_require__(144);

	var util = __webpack_require__(142);
	var Index = __webpack_require__(133);
	var TimeRange = __webpack_require__(134);

	function timestampFromArgs(arg1) {
	    var timestamp = undefined;
	    if (_.isNumber(arg1)) {
	        timestamp = new Date(arg1);
	    } else if (_.isDate(arg1)) {
	        timestamp = new Date(arg1.getTime());
	    } else if (moment.isMoment(arg1)) {
	        timestamp = new Date(arg1.valueOf());
	    }
	    return timestamp;
	}

	function dataFromArgs(arg1) {
	    var data = {};
	    if (_.isObject(arg1)) {
	        data = new Immutable.Map(arg1);
	    } else if (data instanceof Immutable.Map) {
	        data = arg1;
	    } else {
	        data = new Immutable.Map({ value: arg1 });
	    }
	    return data;
	}

	/**
	 * A generic event
	 *
	 * This represents a data object at a single timestamp, supplied
	 * at initialization.
	 *
	 * The timestamp may be a javascript Date object or a Moment, but is
	 * stored internally as ms since UNIX epoch.
	 *
	 * The data may be any type.
	 *
	 * Asking the Event object for the timestamp returns an integer copy
	 * of the number of ms since the UNIX epoch. There's not method on
	 * the Event object to mutate the Event timestamp after it is created.
	 *
	 */

	var Event = (function () {
	    function Event(arg1, arg2) {
	        _classCallCheck(this, Event);

	        //Copy constructor
	        if (arg1 instanceof Event) {
	            var other = arg1;
	            this._time = other._time;
	            this._data = other._data;
	            return;
	        }

	        //Timestamp
	        this._time = timestampFromArgs(arg1);

	        //Data
	        this._data = dataFromArgs(arg2);
	    }

	    _createClass(Event, {
	        toJSON: {
	            value: function toJSON() {
	                return { time: this._time.getTime(), data: this._data.toJSON() };
	            }
	        },
	        toString: {
	            value: function toString() {
	                return JSON.stringify(this.toJSON());
	            }
	        },
	        timestampAsUTCString: {
	            value: function timestampAsUTCString() {
	                return this._time.toUTCString();
	            }
	        },
	        timestampAsLocalString: {
	            value: function timestampAsLocalString() {
	                return this._time.toString();
	            }
	        },
	        timestamp: {
	            value: function timestamp() {
	                return this._time;
	            }
	        },
	        data: {
	            value: function data() {
	                return this._data;
	            }
	        },
	        get: {
	            value: function get(key) {
	                var k = key || "value";
	                return this._data.get(k);
	            }
	        },
	        stringify: {
	            value: function stringify() {
	                return data.stringify(this._data);
	            }
	        }
	    });

	    return Event;
	})();

	/**
	 * An time range event uses a TimeRange to specify the range over which the event occurs
	 * and maps that to a data object representing some measurements or metrics during
	 * that time range.
	 *
	 * You supply the timerange as a TimeRange object.
	 *
	 * The data is also specified during construction and me be either:
	 *  1) a Javascript object or simple type
	 *  2) an Immutable.Map.
	 *
	 * If an Javascript object is provided it will be stored internally as an Immutable Map.
	 * If the data provided is some other simple type (such as an integer) then it will be
	 * equivalent to supplying an object of {value: data}. Data may also be undefined.
	 *
	 * The get the data out of an IndexedEvent instance use data(). It will return an
	 * Immutable.Map. Alternatively you can call toJSON() to return a Javascript object
	 * representation of the data, while toString() will serialize the event to a string.
	 *
	 */

	var TimeRangeEvent = (function () {
	    function TimeRangeEvent(arg1, arg2) {
	        _classCallCheck(this, TimeRangeEvent);

	        //Timerange
	        if (arg1 instanceof TimeRange) {
	            var timerange = arg1;
	            this._range = timerange;
	        }

	        //Data
	        this._data = dataFromArgs(arg2);
	    }

	    _createClass(TimeRangeEvent, {
	        toJSON: {
	            value: function toJSON() {
	                return { timerange: this._range.toJSON(), data: this._data.toJSON() };
	            }
	        },
	        toString: {
	            value: function toString() {
	                return JSON.stringify(this.toJSON());
	            }
	        },
	        timerange: {

	            //
	            // Access the timerange represented by the index
	            //

	            value: function timerange() {
	                return this._range;
	            }
	        },
	        timerangeAsUTCString: {
	            value: function timerangeAsUTCString() {
	                return this.timerange().toUTCString();
	            }
	        },
	        timerangeAsLocalString: {
	            value: function timerangeAsLocalString() {
	                return this.timerange().toLocalString();
	            }
	        },
	        begin: {
	            value: function begin() {
	                return this._range.begin();
	            }
	        },
	        end: {
	            value: function end() {
	                return this._range.end();
	            }
	        },
	        humanizeDuration: {
	            value: function humanizeDuration() {
	                return this._range.humanizeDuration();
	            }
	        },
	        data: {

	            //
	            // Access the event data
	            //

	            value: function data() {
	                return this._data;
	            }
	        },
	        get: {
	            value: function get(key) {
	                var k = key || "value";
	                return this._data.get(k);
	            }
	        }
	    });

	    return TimeRangeEvent;
	})();

	/**
	 * An indexed event uses a Index to specify a timerange over which the event occurs
	 * and maps that to a data object representing some measurement of metric during
	 * that time range.
	 *
	 * You can supply the index as a string or as an Index object.
	 *
	 * Example Indexes are:
	 *     - 1d-156 is the entire duration of the 156th day since the UNIX epoch
	 *     - 12:Mar:2014 is the entire duration of march in 2014 [not supported yet]
	 *
	 * The range, as expressed by the Index, is provided by the convenience method range(),
	 * which returns a TimeRange instance. Alternatively the begin and end times represented
	 * by the Index can be found with begin() and end() respectively.
	 *
	 * The data is also specified during construction, and is generally expected to be an
	 * object or an Immutable.Map. If an object is provided it will be stored internally as
	 * an ImmutableMap. If the data provided is some other type then it will be equivalent to
	 * supplying an object of {value: data}. Data may be undefined.
	 *
	 * The get the data out of an IndexedEvent instance use data(). It will return an
	 * Immutable.Map.
	 */

	var IndexedEvent = (function () {
	    function IndexedEvent(index, data) {
	        _classCallCheck(this, IndexedEvent);

	        //Index
	        if (_.isString(index)) {
	            this._i = new Index(index);
	        } else if (index instanceof Index) {
	            this._i = index;
	        }

	        //Data
	        if (_.isObject(data)) {
	            this._data = new Immutable.Map(data);
	        } else if (data instanceof Immutable.Map) {
	            this._data = data;
	        } else {
	            this._data = new Immutable.Map({ value: data });
	        }
	    }

	    _createClass(IndexedEvent, {
	        toJSON: {
	            value: function toJSON() {
	                return { index: this._i.asString(), data: this._data.toJSON() };
	            }
	        },
	        toString: {
	            value: function toString() {
	                return JSON.stringify(this.toJSON());
	            }
	        },
	        index: {

	            //
	            // Access the index itself
	            //

	            value: function index() {
	                return this._i;
	            }
	        },
	        timerangeAsUTCString: {

	            //
	            // Access the timerange represented by the index
	            //

	            value: function timerangeAsUTCString() {
	                return this.timerange().toUTCString();
	            }
	        },
	        timerangeAsLocalString: {
	            value: function timerangeAsLocalString() {
	                return this.timerange().toLocalString();
	            }
	        },
	        timerange: {
	            value: function timerange() {
	                return this._i.asTimerange();
	            }
	        },
	        begin: {
	            value: function begin() {
	                return this.timerange().begin();
	            }
	        },
	        end: {
	            value: function end() {
	                return this.timerange().end();
	            }
	        },
	        data: {

	            //
	            // Access the event data
	            //

	            value: function data() {
	                return this._data;
	            }
	        },
	        get: {
	            value: function get(key) {
	                var k = key || "value";
	                return this._data.get(k);
	            }
	        }
	    });

	    return IndexedEvent;
	})();

	module.exports.Event = Event;
	module.exports.TimeRangeEvent = TimeRangeEvent;
	module.exports.IndexedEvent = IndexedEvent;

/***/ },
/* 136 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var _toArray = function _toArray(arr) {
	    return Array.isArray(arr) ? arr : Array.from(arr);
	};

	var _objectWithoutProperties = function _objectWithoutProperties(obj, keys) {
	    var target = {};for (var i in obj) {
	        if (keys.indexOf(i) >= 0) continue;if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;target[i] = obj[i];
	    }return target;
	};

	var _get = function get(_x, _x2, _x3) {
	    var _again = true;

	    _function: while (_again) {
	        var object = _x,
	            property = _x2,
	            receiver = _x3;
	        desc = parent = getter = undefined;
	        _again = false;
	        var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
	            var parent = Object.getPrototypeOf(object);if (parent === null) {
	                return undefined;
	            } else {
	                _x = parent;
	                _x2 = property;
	                _x3 = receiver;
	                _again = true;
	                continue _function;
	            }
	        } else if ("value" in desc && desc.writable) {
	            return desc.value;
	        } else {
	            var getter = desc.get;if (getter === undefined) {
	                return undefined;
	            }return getter.call(receiver);
	        }
	    }
	};

	var _inherits = function _inherits(subClass, superClass) {
	    if (typeof superClass !== "function" && superClass !== null) {
	        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
	    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) subClass.__proto__ = superClass;
	};

	var _createClass = (function () {
	    function defineProperties(target, props) {
	        for (var key in props) {
	            var prop = props[key];prop.configurable = true;if (prop.value) prop.writable = true;
	        }Object.defineProperties(target, props);
	    }return function (Constructor, protoProps, staticProps) {
	        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	    };
	})();

	var _classCallCheck = function _classCallCheck(instance, Constructor) {
	    if (!(instance instanceof Constructor)) {
	        throw new TypeError("Cannot call a class as a function");
	    }
	};

	var _ = __webpack_require__(143);
	var Immutable = __webpack_require__(144);

	var Index = __webpack_require__(133);
	var TimeRange = __webpack_require__(134);

	var _require = __webpack_require__(135);

	var Event = _require.Event;

	/**
	 * Base class for a series of events.
	 *
	 * A series is compact representation for a list of events, with some additional
	 * meta data on top of that.
	 *
	 */

	var Series = (function () {

	    /**
	     * A Series is constructed by either:
	     *
	     *  1) passing in another series (copy constructor)
	     *  2) passing in three arguments:
	     *      name - the name of the series
	     *      columns - an array containing the title of each data column
	     *      data - an array containing the data of each column
	     *             Note: data may be either:
	     *               a) An Immutable.List of Immutable.Map data objects
	     *               b) An array of objects
	     *
	     * Internally a Series is List of Maps. Each item in the list is one data map,
	     * and is stored as an Immutable Map, where the keys are the column names
	     * and the value is the data for that column at that index.
	     *
	     * This enables efficient extraction of Events, since the internal data of the
	     * Event can be simply a reference to the Immutable Map in this Series, combined
	     * with the time, Timerange or Index.
	     */

	    function Series(arg1, arg2, arg3, arg4) {
	        var _this = this;

	        _classCallCheck(this, Series);

	        if (arg1 instanceof Series) {

	            //
	            // Copy constructor
	            //

	            var other = arg1;

	            this._name = other._name;
	            this._meta = other._meta;
	            this._columns = other._columns;
	            this._series = other._series;
	        } else if (_.isString(arg1) && _.isObject(arg2) && _.isArray(arg3) && (_.isArray(arg4) || Immutable.List.isList(arg4))) {
	            (function () {

	                //
	                // Object constructor
	                //

	                var name = arg1;
	                var meta = arg2;
	                var columns = arg3;
	                var data = arg4;

	                _this._name = name;
	                _this._meta = Immutable.fromJS(meta);
	                _this._columns = Immutable.fromJS(columns);

	                if (Immutable.List.isList(data)) {
	                    _this._series = data;
	                } else {
	                    _this._series = Immutable.fromJS(_.map(data, function (d) {
	                        var pointMap = {};
	                        _.each(d, function (p, i) {
	                            pointMap[columns[i]] = p;
	                        });
	                        return pointMap;
	                    }));
	                }
	            })();
	        }
	    }

	    _createClass(Series, {
	        toJSON: {

	            //
	            // Serialize
	            //

	            value: function toJSON() {
	                var cols = this._columns;
	                var series = this._series;
	                return {
	                    name: this._name,
	                    columns: cols.toJSON(),
	                    points: series.map(function (value, i) {
	                        return cols.map(function (column, j) {
	                            data.push(value.get(column));
	                        });
	                    })
	                };
	            }
	        },
	        toString: {
	            value: function toString() {
	                return JSON.stringify(this.toJSON());
	            }
	        },
	        name: {

	            //
	            // Access meta data about the series
	            //

	            value: function name() {
	                return this._name;
	            }
	        },
	        meta: {
	            value: function meta(key) {
	                return this._meta.get(key);
	            }
	        },
	        size: {

	            //
	            // Access the series itself
	            //

	            value: function size() {
	                return this._series.size;
	            }
	        },
	        count: {
	            value: function count() {
	                return this.size();
	            }
	        },
	        at: {
	            value: function at(i) {
	                return this._series.get(i);
	            }
	        },
	        sum: {

	            //
	            // Aggregate the series
	            //

	            value: function sum(column) {
	                var c = column || "value";
	                if (!this._columns.contains(c)) {
	                    return undefined;
	                }
	                return this._series.reduce(function (memo, data) {
	                    return data.get(c) + memo;
	                }, 0);
	            }
	        },
	        avg: {
	            value: function avg(column) {
	                var c = column || "value";
	                if (!this._columns.contains(c)) {
	                    return undefined;
	                }
	                return this.sum(column) / this.size();
	            }
	        },
	        max: {
	            value: function max(column) {
	                var c = column || "value";
	                if (!this._columns.contains(c)) {
	                    return undefined;
	                }
	                var max = this._series.maxBy(function (a) {
	                    return a.get(c);
	                });
	                return max.get(c);
	            }
	        },
	        min: {
	            value: function min(column) {
	                var c = column || "value";
	                if (!this._columns.contains(c)) {
	                    return undefined;
	                }
	                var min = this._series.minBy(function (a) {
	                    return a.get(c);
	                });
	                return min.get(c);
	            }
	        }
	    }, {
	        equal: {
	            value: function equal(series1, series2) {
	                return series1._name === series2._name && series1._meta === series2._meta && series1._columns === series2._columns && series1._series === series2._series;
	            }
	        },
	        is: {
	            value: function is(series1, series2) {
	                return series1._name === series2._name && Immutable.is(series1._meta, series2._meta) && Immutable.is(series1._columns, series2._columns) && Immutable.is(series1._series, series2._series);
	            }
	        }
	    });

	    return Series;
	})();

	/** Internal function to find the unique keys of a bunch
	  * of immutable maps objects. There's probably a more elegent way
	  * to do this.
	  */
	function uniqueKeys(events) {
	    var arrayOfKeys = [];
	    var _iteratorNormalCompletion = true;
	    var _didIteratorError = false;
	    var _iteratorError = undefined;

	    try {
	        for (var _iterator = events[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	            var e = _step.value;
	            var _iteratorNormalCompletion2 = true;
	            var _didIteratorError2 = false;
	            var _iteratorError2 = undefined;

	            try {
	                for (var _iterator2 = e.data().keySeq()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
	                    var k = _step2.value;

	                    arrayOfKeys.push(k);
	                }
	            } catch (err) {
	                _didIteratorError2 = true;
	                _iteratorError2 = err;
	            } finally {
	                try {
	                    if (!_iteratorNormalCompletion2 && _iterator2["return"]) {
	                        _iterator2["return"]();
	                    }
	                } finally {
	                    if (_didIteratorError2) {
	                        throw _iteratorError2;
	                    }
	                }
	            }
	        }
	    } catch (err) {
	        _didIteratorError = true;
	        _iteratorError = err;
	    } finally {
	        try {
	            if (!_iteratorNormalCompletion && _iterator["return"]) {
	                _iterator["return"]();
	            }
	        } finally {
	            if (_didIteratorError) {
	                throw _iteratorError;
	            }
	        }
	    }

	    return new Immutable.Set(arrayOfKeys);
	}

	/**
	 * A TimeSeries is a a Series where each event is an association of a timestamp
	 * and some associated data.
	 *
	 * Data passed into it may have the following format, which corresponds to InfluxDB's
	 * wire format:
	 *
	 *   {
	 *     "name": "traffic",
	 *     "columns": ["time", "value", ...],
	 *     "points": [
	 *        [1400425947000, 52, ...],
	 *        [1400425948000, 18, ...],
	 *        [1400425949000, 26, ...],
	 *        [1400425950000, 93, ...],
	 *        ...
	 *      ]
	 *   }
	 *
	 * Alternatively, the TimeSeries may be constructed from a list of Events.
	 *
	 * Internaly the above series is represented as two lists, one of times and
	 * one of data associated with those times. The index of the list links them
	 * together. You can fetch the full item at index n using get(n). This returns
	 * the item as an Event. Note that the internal data of the Event will be
	 * a reference to the immutable Map in the series list, so there's no copying. 
	 *
	 * The timerange associated with a TimeSeries is simply the bounds of the
	 * events within it (i.e. the min and max times).
	 */

	var TimeSeries = (function (_Series) {
	    function TimeSeries(arg1) {
	        var _this = this;

	        _classCallCheck(this, TimeSeries);

	        if (arg1 instanceof TimeSeries) {

	            _get(Object.getPrototypeOf(TimeSeries.prototype), "constructor", this).call(this);

	            //
	            // Copy constructor
	            //

	            //Construct the base series
	            var other = arg1;

	            this._name = other._name;
	            this._meta = other._meta;
	            this._columns = other._columns;
	            this._series = other._series;
	            this._times = other._times;
	        } else if (_.isObject(arg1)) {
	            var name;

	            var _points;

	            var columns;
	            var meta;

	            (function () {

	                //
	                // Object constructor
	                //
	                // There are two forms of Timeseries construction:
	                //   - As a list of Events
	                //   - As a list of points and columns
	                //
	                // See below.
	                //

	                var obj = arg1;

	                var columns = [];
	                var times = [];
	                var data = [];

	                if (_.has(obj, "events")) {

	                    //
	                    // If events is passed in, then we construct the series out of a list
	                    // of Event objects
	                    //

	                    var events = obj.events;
	                    var _name = obj.name;

	                    var _meta = _objectWithoutProperties(obj, ["events", "name"]);

	                    columns = uniqueKeys(events).toJSON();
	                    _.each(events, function (event) {
	                        times.push(event.timestamp());
	                        data.push(event.data());
	                    });

	                    //Construct the base series
	                    _get(Object.getPrototypeOf(TimeSeries.prototype), "constructor", _this).call(_this, _name, _meta, columns, new Immutable.List(data));

	                    //List of times, as Immutable List
	                    _this._times = new Immutable.List(times);
	                } else if (_.has(obj, "columns") && _.has(obj, "points")) {
	                    name = obj.name;
	                    _points = obj.points;
	                    columns = obj.columns;
	                    meta = _objectWithoutProperties(obj, ["name", "points", "columns"]);

	                    name = name || "";
	                    meta = meta || {};

	                    //
	                    // If columns and points are passed in, then we construct the series
	                    // out of those, assuming the format of each point is:
	                    //
	                    //   [time, col1, col2, col3]
	                    //

	                    var _points = obj.points || [];

	                    // TODO: check to see if the first item is the time
	                    columns = obj.columns.slice(1) || [];

	                    //Series of data that we extract out the time and
	                    //pass the rest to the base class
	                    _.each(_points, function (point) {
	                        var _point = _toArray(point);

	                        var time = _point[0];

	                        var others = _point.slice(1);

	                        times.push(time);
	                        data.push(others);
	                    });

	                    _get(Object.getPrototypeOf(TimeSeries.prototype), "constructor", _this).call(_this, name, meta, columns, data);

	                    //List of times, as Immutable List
	                    _this._times = Immutable.fromJS(times);
	                }
	            })();
	        }
	    }

	    _inherits(TimeSeries, _Series);

	    _createClass(TimeSeries, {
	        toJSON: {

	            //
	            // Serialize
	            //

	            /**
	             * Turn the TimeSeries into regular javascript objects
	             */

	            value: function toJSON() {
	                var name = this._name;
	                var cols = this._columns;
	                var series = this._series;
	                var times = this._times;

	                var points = series.map(function (value, i) {
	                    var data = [times.get(i)]; //time
	                    cols.forEach(function (column, j) {
	                        data.push(value.get(column));
	                    }); //values
	                    return data;
	                }).toJSON();

	                //The JSON output has 'time' as the first column
	                var columns = ["time"];
	                cols.forEach(function (column) {
	                    columns.push(column);
	                });

	                return _.extend(this._meta.toJSON(), {
	                    name: name,
	                    columns: columns,
	                    points: points
	                });
	            }
	        },
	        toString: {

	            /**
	             * Represent the TimeSeries as a string
	             */

	            value: function toString() {
	                return JSON.stringify(this.toJSON());
	            }
	        },
	        range: {

	            //
	            // Series range
	            //

	            value: function range() {
	                var result = new TimeRange(this._times.min(), this._times.max());
	                return result;
	            }
	        },
	        begin: {
	            value: function begin() {
	                return this.range().begin();
	            }
	        },
	        end: {
	            value: function end() {
	                return this.range().end();
	            }
	        },
	        at: {

	            //
	            // Access the series itself
	            //

	            value: function at(i) {
	                return new Event(this._times.get(i), this._series.get(i));
	            }
	        }
	    }, {
	        equal: {
	            value: function equal(series1, series2) {
	                return series1._name === series2._name && series1._meta === series2._meta && series1._columns === series2._columns && series1._series === series2._series && series1._times === series2._times;
	            }
	        },
	        is: {
	            value: function is(series1, series2) {
	                return series1._name === series2._name && Immutable.is(series1._meta, series2._meta) && Immutable.is(series1._columns, series2._columns) && Immutable.is(series1._series, series2._series) && Immutable.is(series1._times, series2._times);
	            }
	        }
	    });

	    return TimeSeries;
	})(Series);

	/**
	 * TODO
	 */

	var TimeRangeSeries = (function (_Series2) {
	    function TimeRangeSeries(index, data) {
	        _classCallCheck(this, TimeRangeSeries);

	        _get(Object.getPrototypeOf(TimeRangeSeries.prototype), "constructor", this).call(this, data);
	    }

	    _inherits(TimeRangeSeries, _Series2);

	    _createClass(TimeRangeSeries, {
	        at: {
	            value: function at(i) {
	                return new TimeRangeEvent(this._times.get(i), this._series.get(i));
	            }
	        }
	    });

	    return TimeRangeSeries;
	})(Series);

	/**
	 * EXPERIMENTAL
	 *
	 * An IndexSeries is a timeseries, like a Series, only the timerange associated with it
	 * comes from an Index rather than a specific time range.
	 *
	 * The use for this would be in an indexed cache:
	 *
	 * Insert into cache by taking a IndexSeries, indexedSeries, getting the key (s.indexAsString()) and
	 * insering it as cache[indexedSeries.indexAsString] = indexedSeries;
	 *
	 * A range of indexes can easily be generated for a timerange (we need a utility for this). Using each
	 * index in that range we can pull data from the cache (if it's there) or request it if it isn't.
	 *
	 */

	var IndexedSeries = (function (_TimeSeries) {
	    function IndexedSeries(index, data) {
	        _classCallCheck(this, IndexedSeries);

	        _get(Object.getPrototypeOf(IndexedSeries.prototype), "constructor", this).call(this, data);

	        if (_.isString(index)) {
	            this._index = new Index(index);
	        } else if (index instanceof Index) {
	            this._index = index;
	        }
	    }

	    _inherits(IndexedSeries, _TimeSeries);

	    _createClass(IndexedSeries, {
	        toJSON: {

	            //
	            // Serialize
	            //

	            value: function toJSON() {
	                var cols = this._columns;
	                var series = this._series;
	                var times = this._times;

	                //The JSON output has 'time' as the first column
	                var columns = ["time"];
	                cols.forEach(function (column) {
	                    columns.push(column);
	                });

	                return _.extend(this._meta.toJSON(), {
	                    name: this._name,
	                    index: this.indexAsString(),
	                    columns: columns,
	                    points: series.map(function (value, i) {
	                        var data = [times.get(i)];
	                        cols.forEach(function (column, j) {
	                            data.push(value.get(column));
	                        });
	                        return data;
	                    })
	                });
	            }
	        },
	        toString: {
	            value: function toString() {
	                return JSON.stringify(this.toJSON());
	            }
	        },
	        index: {

	            //
	            // Convenience access the series range and index
	            //

	            value: function index() {
	                return this._index;
	            }
	        },
	        indexAsString: {
	            value: function indexAsString() {
	                return this._index.asString();
	            }
	        },
	        range: {
	            value: function range() {
	                return this._index.asTimerange();
	            }
	        }
	    });

	    return IndexedSeries;
	})(TimeSeries);

	module.exports.Series = Series;
	module.exports.TimeSeries = TimeSeries;
	module.exports.IndexedSeries = IndexedSeries;

/***/ },
/* 137 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var _createClass = (function () {
	    function defineProperties(target, props) {
	        for (var key in props) {
	            var prop = props[key];prop.configurable = true;if (prop.value) prop.writable = true;
	        }Object.defineProperties(target, props);
	    }return function (Constructor, protoProps, staticProps) {
	        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	    };
	})();

	var _classCallCheck = function _classCallCheck(instance, Constructor) {
	    if (!(instance instanceof Constructor)) {
	        throw new TypeError("Cannot call a class as a function");
	    }
	};

	var moment = __webpack_require__(24);
	var Immutable = __webpack_require__(144);
	var _ = __webpack_require__(143);

	var _require = __webpack_require__(135);

	var IndexedEvent = _require.IndexedEvent;

	var _require2 = __webpack_require__(136);

	var IndexedSeries = _require2.IndexedSeries;

	var Index = __webpack_require__(133);
	var TimeRange = __webpack_require__(134);

	/** Internal function to fund the unique keys of a bunch
	  * of immutable maps objects. There's probably a more elegent way
	  * to do this.
	  */
	function uniqueKeys(events) {
	    var arrayOfKeys = [];
	    var _iteratorNormalCompletion = true;
	    var _didIteratorError = false;
	    var _iteratorError = undefined;

	    try {
	        for (var _iterator = events[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	            var e = _step.value;
	            var _iteratorNormalCompletion2 = true;
	            var _didIteratorError2 = false;
	            var _iteratorError2 = undefined;

	            try {
	                for (var _iterator2 = e.data().keySeq()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
	                    var k = _step2.value;

	                    arrayOfKeys.push(k);
	                }
	            } catch (err) {
	                _didIteratorError2 = true;
	                _iteratorError2 = err;
	            } finally {
	                try {
	                    if (!_iteratorNormalCompletion2 && _iterator2["return"]) {
	                        _iterator2["return"]();
	                    }
	                } finally {
	                    if (_didIteratorError2) {
	                        throw _iteratorError2;
	                    }
	                }
	            }
	        }
	    } catch (err) {
	        _didIteratorError = true;
	        _iteratorError = err;
	    } finally {
	        try {
	            if (!_iteratorNormalCompletion && _iterator["return"]) {
	                _iterator["return"]();
	            }
	        } finally {
	            if (_didIteratorError) {
	                throw _iteratorError;
	            }
	        }
	    }

	    return new Immutable.Set(arrayOfKeys);
	}

	/**
	 * A bucket is a mutable collection of values that is used to
	 * accumulate aggregations over the index. The index may be an
	 * Index instance or a string.
	 *
	 * The left side of the index is the range indicator, which is
	 * itself a combination of a letter and a number:
	 *     - the letter is the unit, either s (seconds), d (days),
	 *       h (hours), or d (days).
	 *     - the size is the quantity of that unit.
	 * So 6h is six hours, 7d is seven days.
	 *
	 * The right side of the index is a number, which is n number of
	 * that range since Jan 1, 1970 UTC.
	 *
	 * And example of an index might be 1d-1673. This uniquely
	 * refers to a block of time 1 day long, starting 1673 days after
	 * the beginning of 1970.
	 */

	var Bucket = (function () {
	    function Bucket(index) {
	        _classCallCheck(this, Bucket);

	        //Index
	        if (_.isString(index)) {
	            this._index = new Index(index);
	        } else if (index instanceof Index) {
	            this._index = index;
	        }

	        this._cache = []; // Mutable internal list
	    }

	    _createClass(Bucket, {
	        index: {
	            value: function index() {
	                return this._index;
	            }
	        },
	        toUTCString: {
	            value: function toUTCString() {
	                return this.index().asString() + ": " + this.range().toUTCString();
	            }
	        },
	        toLocalString: {
	            value: function toLocalString() {
	                return this.index().asString() + ": " + this.range().toLocalString();
	            }
	        },
	        range: {

	            //
	            // Convenience access the bucket range
	            //

	            value: function range() {
	                return this._index.asTimerange();
	            }
	        },
	        begin: {
	            value: function begin() {
	                return this.range().begin();
	            }
	        },
	        end: {
	            value: function end() {
	                return this.range().end();
	            }
	        },
	        _pushToCache: {

	            //
	            // Bucket cache, which could potentially be redis or something
	            // so pushing to the cache takes a callback, which will be called
	            // when the event is added to the cache.
	            //
	            // TODO: This should be stategy based.
	            //

	            value: function _pushToCache(event, cb) {
	                this._cache.push(event);
	                cb && cb(null);
	            }
	        },
	        _readFromCache: {
	            value: function _readFromCache(cb) {
	                cb && cb(this._cache);
	            }
	        },
	        addEvent: {

	            //
	            // Add values to the bucket
	            //

	            value: function addEvent(event, cb) {
	                this._pushToCache(event, function (err) {
	                    cb && cb(err);
	                });
	            }
	        },
	        aggregate: {

	            /**
	             * Takes the values within the bucket and aggregates them together
	             * into a new IndexedEvent using the operator supplied. Then result
	             * or error is passed to the callback.
	             */

	            value: function aggregate(operator, cb) {
	                var _this = this;

	                this._readFromCache(function (events) {
	                    var keys = uniqueKeys(events);
	                    var result = {};
	                    _.each(keys.toJS(), function (k) {
	                        var vals = _.map(events, function (v) {
	                            return v.get(k);
	                        });
	                        result[k] = operator.call(_this, _this._index, vals, k);
	                    });
	                    var event = new IndexedEvent(_this._index, result);
	                    cb && cb(event);
	                });
	            }
	        },
	        collect: {

	            /**
	             * Takes the values within the bucket and collects them together
	             * into a new IndexedSeries using the operator supplied. Then result
	             * or error is passed to the callback.
	             */

	            value: function collect(cb) {
	                var _this = this;

	                this._readFromCache(function (events) {
	                    var series = new IndexedSeries(_this._index, {
	                        name: _this._index.toString(),
	                        events: events
	                    });
	                    cb && cb(series);
	                });
	            }
	        }
	    });

	    return Bucket;
	})();

	module.exports = Bucket;

/***/ },
/* 138 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var _createClass = (function () {
	    function defineProperties(target, props) {
	        for (var key in props) {
	            var prop = props[key];prop.configurable = true;if (prop.value) prop.writable = true;
	        }Object.defineProperties(target, props);
	    }return function (Constructor, protoProps, staticProps) {
	        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	    };
	})();

	var _classCallCheck = function _classCallCheck(instance, Constructor) {
	    if (!(instance instanceof Constructor)) {
	        throw new TypeError("Cannot call a class as a function");
	    }
	};

	var moment = __webpack_require__(24);
	var _ = __webpack_require__(143);

	var TimeRange = __webpack_require__(134);
	var Bucket = __webpack_require__(137);

	var units = {
	    s: { label: "seconds", length: 1 },
	    m: { label: "minutes", length: 60 },
	    h: { label: "hours", length: 60 * 60 },
	    d: { label: "days", length: 60 * 60 * 24 }
	};

	/**
	 * A BucketGenerator
	 *
	 * To use a BucketGenerator you supply the size of the buckets you want
	 * e.g. "1h" for hourly. Then you call bucket() as needed, each time
	 * with a date. The bucket containing that date will be returned.
	 *
	 * Buckets can then be used to aggregate data.
	 *
	 * @param {string} size The size of the bucket (e.g. 1d, 6h, 5m, 30s)
	 */

	var Generator = (function () {
	    function Generator(size) {
	        _classCallCheck(this, Generator);

	        this.size = size;
	        this.length = Generator.getLengthFromSize(size);
	    }

	    _createClass(Generator, {
	        bucketIndex: {
	            value: function bucketIndex(date) {
	                var pos = Generator.getBucketPosFromDate(date, this.length);
	                var index = this.size + "-" + pos;
	                return index;
	            }
	        },
	        bucket: {

	            /**
	             * Date in is assumed to be local and that the bucket will be
	             * created in UTC time. Note that this doesn't really matter
	             * for seconds, minutes, or hours. But days will be offset from
	             * midnight to midnight, depending on local timezone.
	             */

	            value: function bucket(date) {
	                var index = this.bucketIndex(date);
	                return new Bucket(index);
	            }
	        }
	    }, {
	        getLengthFromSize: {

	            /**
	             * Takes the size (e.g. 1d, 6h, 5m, 30s) and returns the length
	             * of the bucket in ms.
	             */

	            value: function getLengthFromSize(size) {
	                var num, unit, length;

	                //size should be two parts, a number and a letter. From the size
	                //we can get the length
	                var re = /([0-9]+)([smhd])/;
	                var parts = re.exec(size);
	                if (parts && parts.length >= 3) {
	                    num = parseInt(parts[1]);
	                    unit = parts[2];
	                    length = num * units[unit].length * 1000;
	                }
	                return length;
	            }
	        },
	        getBucketPosFromDate: {
	            value: function getBucketPosFromDate(date, length) {
	                //console.log("getBucketPosFromDate", date)
	                var dd = moment.utc(date).valueOf();
	                return parseInt(dd /= length, 10);
	            }
	        }
	    });

	    return Generator;
	})();

	module.exports = Generator;

/***/ },
/* 139 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var _createClass = (function () {
	    function defineProperties(target, props) {
	        for (var key in props) {
	            var prop = props[key];prop.configurable = true;if (prop.value) prop.writable = true;
	        }Object.defineProperties(target, props);
	    }return function (Constructor, protoProps, staticProps) {
	        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	    };
	})();

	var _classCallCheck = function _classCallCheck(instance, Constructor) {
	    if (!(instance instanceof Constructor)) {
	        throw new TypeError("Cannot call a class as a function");
	    }
	};

	var Generator = __webpack_require__(138);
	var _ = __webpack_require__(143);
	var Immutable = __webpack_require__(144);

	var Aggregator = (function () {
	    function Aggregator(size, processor, selector, observer) {
	        _classCallCheck(this, Aggregator);

	        this._generator = new Generator(size);
	        this._processor = processor;
	        this._selector = selector;
	        this._currentBucket = null;

	        //Callback
	        this._onEmit = observer;
	    }

	    _createClass(Aggregator, {
	        bucket: {

	            /**
	             * Gets the current bucket or returns a new one.
	             *
	             * If a new bucket is generated the result of the old bucket is emitted
	             * automatically.
	             */

	            value: function bucket(d) {
	                var _this = this;

	                var thisBucketIndex = this._generator.bucketIndex(d);
	                var currentBucketIndex = this._currentBucket ? this._currentBucket.index().asString() : "";

	                if (thisBucketIndex !== currentBucketIndex) {
	                    if (this._currentBucket) {
	                        this._currentBucket.aggregate(this._processor, function (event) {
	                            _this._onEmit && _this._onEmit(_this._currentBucket.index(), event);
	                        });
	                    }
	                    this._currentBucket = this._generator.bucket(d);
	                }

	                return this._currentBucket;
	            }
	        },
	        done: {

	            /**
	             * Forces the current bucket to emit
	             */

	            value: function done() {
	                var _this = this;

	                if (this._currentBucket) {
	                    this._currentBucket.aggregate(this._processor, function (event) {
	                        _this._onEmit && _this._onEmit(_this._currentBucket.index(), event);
	                        _this._currentBucket = null;
	                    });
	                }
	            }
	        },
	        addEvent: {

	            /**
	             * Add an event, which will be assigned to a bucket
	             */

	            value: function addEvent(event, cb) {
	                var t = event.timestamp();
	                var bucket = this.bucket(t);

	                //
	                // Adding the value to the bucket. This could be an async operation
	                // so the passed in callback to this function will be called when this
	                // is done.
	                //

	                bucket.addEvent(event, this._aggregationFn, function (err) {
	                    if (err) {
	                        console.error("Could not add value to bucket:", err);
	                    }
	                    cb && cb(err);
	                });
	            }
	        },
	        onEmit: {
	            value: function onEmit(cb) {
	                this._onEmit = cb;
	            }
	        }
	    });

	    return Aggregator;
	})();

	module.exports = Aggregator;

/***/ },
/* 140 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var _ = __webpack_require__(143);

	var _require = __webpack_require__(135);

	var IndexedEvent = _require.IndexedEvent;

	module.exports = {

	    /**
	     * These functions take an index and a list of values and
	     * return a calculated result.
	     */

	    sum: function sum(index, values) {
	        return _.reduce(values, function (a, b) {
	            return a + b;
	        }, 0);
	    },
	    avg: function avg(index, values) {
	        var sum = _.reduce(values, function (a, b) {
	            return a + b;
	        }, 0);
	        return sum / values.length;
	    },
	    max: function max(index, values) {
	        return _.max(values);
	    },
	    count: function count(index, values) {
	        return values.length;
	    } };

/***/ },
/* 141 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	if (typeof Object.create === 'function') {
	  // implementation from standard node.js 'util' module
	  module.exports = function inherits(ctor, superCtor) {
	    ctor.super_ = superCtor;
	    ctor.prototype = Object.create(superCtor.prototype, {
	      constructor: {
	        value: ctor,
	        enumerable: false,
	        writable: true,
	        configurable: true
	      }
	    });
	  };
	} else {
	  // old school shim for old browsers
	  module.exports = function inherits(ctor, superCtor) {
	    ctor.super_ = superCtor;
	    var TempCtor = function TempCtor() {};
	    TempCtor.prototype = superCtor.prototype;
	    ctor.prototype = new TempCtor();
	    ctor.prototype.constructor = ctor;
	  };
	}

/***/ },
/* 142 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var moment = __webpack_require__(24);
	var _ = __webpack_require__(143);

	var TimeRange = __webpack_require__(134);

	/**
	 * This function will take an index such as 1d-278 and
	 * return a TimeRange for that time
	 */
	function rangeFromIndex(index) {
	    var parts = index.split("-");
	    var size = parts[0];

	    //Position should be an int
	    var pos = parseInt(parts[1], 10);

	    //size should be two parts, a number and a letter
	    var re = /([0-9]+)([smhd])/;

	    var sizeParts = re.exec(size);
	    if (sizeParts && sizeParts.length >= 3) {
	        var num = parseInt(sizeParts[1]);
	        var unit = sizeParts[2];
	        var length = num * units[unit].length * 1000;
	    }

	    var beginTime = moment.utc(pos * length);
	    var endTime = moment.utc((pos + 1) * length);

	    return new TimeRange(beginTime, endTime);
	}

	module.exports.rangeFromIndex = rangeFromIndex;

/***/ },
/* 143 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;//     Underscore.js 1.8.3
	//     http://underscorejs.org
	//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
	//     Underscore may be freely distributed under the MIT license.

	'use strict';

	(function () {

	  // Baseline setup
	  // --------------

	  // Establish the root object, `window` in the browser, or `exports` on the server.
	  var root = this;

	  // Save the previous value of the `_` variable.
	  var previousUnderscore = root._;

	  // Save bytes in the minified (but not gzipped) version:
	  var ArrayProto = Array.prototype,
	      ObjProto = Object.prototype,
	      FuncProto = Function.prototype;

	  // Create quick reference variables for speed access to core prototypes.
	  var push = ArrayProto.push,
	      slice = ArrayProto.slice,
	      toString = ObjProto.toString,
	      hasOwnProperty = ObjProto.hasOwnProperty;

	  // All **ECMAScript 5** native function implementations that we hope to use
	  // are declared here.
	  var nativeIsArray = Array.isArray,
	      nativeKeys = Object.keys,
	      nativeBind = FuncProto.bind,
	      nativeCreate = Object.create;

	  // Naked function reference for surrogate-prototype-swapping.
	  var Ctor = function Ctor() {};

	  // Create a safe reference to the Underscore object for use below.
	  var _ = function _(obj) {
	    if (obj instanceof _) return obj;
	    if (!(this instanceof _)) return new _(obj);
	    this._wrapped = obj;
	  };

	  // Export the Underscore object for **Node.js**, with
	  // backwards-compatibility for the old `require()` API. If we're in
	  // the browser, add `_` as a global object.
	  if (true) {
	    if (typeof module !== 'undefined' && module.exports) {
	      exports = module.exports = _;
	    }
	    exports._ = _;
	  } else {
	    root._ = _;
	  }

	  // Current version.
	  _.VERSION = '1.8.3';

	  // Internal function that returns an efficient (for current engines) version
	  // of the passed-in callback, to be repeatedly applied in other Underscore
	  // functions.
	  var optimizeCb = function optimizeCb(func, context, argCount) {
	    if (context === void 0) return func;
	    switch (argCount == null ? 3 : argCount) {
	      case 1:
	        return function (value) {
	          return func.call(context, value);
	        };
	      case 2:
	        return function (value, other) {
	          return func.call(context, value, other);
	        };
	      case 3:
	        return function (value, index, collection) {
	          return func.call(context, value, index, collection);
	        };
	      case 4:
	        return function (accumulator, value, index, collection) {
	          return func.call(context, accumulator, value, index, collection);
	        };
	    }
	    return function () {
	      return func.apply(context, arguments);
	    };
	  };

	  // A mostly-internal function to generate callbacks that can be applied
	  // to each element in a collection, returning the desired result — either
	  // identity, an arbitrary callback, a property matcher, or a property accessor.
	  var cb = function cb(value, context, argCount) {
	    if (value == null) return _.identity;
	    if (_.isFunction(value)) return optimizeCb(value, context, argCount);
	    if (_.isObject(value)) return _.matcher(value);
	    return _.property(value);
	  };
	  _.iteratee = function (value, context) {
	    return cb(value, context, Infinity);
	  };

	  // An internal function for creating assigner functions.
	  var createAssigner = function createAssigner(keysFunc, undefinedOnly) {
	    return function (obj) {
	      var length = arguments.length;
	      if (length < 2 || obj == null) return obj;
	      for (var index = 1; index < length; index++) {
	        var source = arguments[index],
	            keys = keysFunc(source),
	            l = keys.length;
	        for (var i = 0; i < l; i++) {
	          var key = keys[i];
	          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];
	        }
	      }
	      return obj;
	    };
	  };

	  // An internal function for creating a new object that inherits from another.
	  var baseCreate = function baseCreate(prototype) {
	    if (!_.isObject(prototype)) return {};
	    if (nativeCreate) return nativeCreate(prototype);
	    Ctor.prototype = prototype;
	    var result = new Ctor();
	    Ctor.prototype = null;
	    return result;
	  };

	  var property = function property(key) {
	    return function (obj) {
	      return obj == null ? void 0 : obj[key];
	    };
	  };

	  // Helper for collection methods to determine whether a collection
	  // should be iterated as an array or as an object
	  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength
	  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094
	  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;
	  var getLength = property('length');
	  var isArrayLike = function isArrayLike(collection) {
	    var length = getLength(collection);
	    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;
	  };

	  // Collection Functions
	  // --------------------

	  // The cornerstone, an `each` implementation, aka `forEach`.
	  // Handles raw objects in addition to array-likes. Treats all
	  // sparse array-likes as if they were dense.
	  _.each = _.forEach = function (obj, iteratee, context) {
	    iteratee = optimizeCb(iteratee, context);
	    var i, length;
	    if (isArrayLike(obj)) {
	      for (i = 0, length = obj.length; i < length; i++) {
	        iteratee(obj[i], i, obj);
	      }
	    } else {
	      var keys = _.keys(obj);
	      for (i = 0, length = keys.length; i < length; i++) {
	        iteratee(obj[keys[i]], keys[i], obj);
	      }
	    }
	    return obj;
	  };

	  // Return the results of applying the iteratee to each element.
	  _.map = _.collect = function (obj, iteratee, context) {
	    iteratee = cb(iteratee, context);
	    var keys = !isArrayLike(obj) && _.keys(obj),
	        length = (keys || obj).length,
	        results = Array(length);
	    for (var index = 0; index < length; index++) {
	      var currentKey = keys ? keys[index] : index;
	      results[index] = iteratee(obj[currentKey], currentKey, obj);
	    }
	    return results;
	  };

	  // Create a reducing function iterating left or right.
	  function createReduce(dir) {
	    // Optimized iterator function as using arguments.length
	    // in the main function will deoptimize the, see #1991.
	    function iterator(obj, iteratee, memo, keys, index, length) {
	      for (; index >= 0 && index < length; index += dir) {
	        var currentKey = keys ? keys[index] : index;
	        memo = iteratee(memo, obj[currentKey], currentKey, obj);
	      }
	      return memo;
	    }

	    return function (obj, iteratee, memo, context) {
	      iteratee = optimizeCb(iteratee, context, 4);
	      var keys = !isArrayLike(obj) && _.keys(obj),
	          length = (keys || obj).length,
	          index = dir > 0 ? 0 : length - 1;
	      // Determine the initial value if none is provided.
	      if (arguments.length < 3) {
	        memo = obj[keys ? keys[index] : index];
	        index += dir;
	      }
	      return iterator(obj, iteratee, memo, keys, index, length);
	    };
	  }

	  // **Reduce** builds up a single result from a list of values, aka `inject`,
	  // or `foldl`.
	  _.reduce = _.foldl = _.inject = createReduce(1);

	  // The right-associative version of reduce, also known as `foldr`.
	  _.reduceRight = _.foldr = createReduce(-1);

	  // Return the first value which passes a truth test. Aliased as `detect`.
	  _.find = _.detect = function (obj, predicate, context) {
	    var key;
	    if (isArrayLike(obj)) {
	      key = _.findIndex(obj, predicate, context);
	    } else {
	      key = _.findKey(obj, predicate, context);
	    }
	    if (key !== void 0 && key !== -1) return obj[key];
	  };

	  // Return all the elements that pass a truth test.
	  // Aliased as `select`.
	  _.filter = _.select = function (obj, predicate, context) {
	    var results = [];
	    predicate = cb(predicate, context);
	    _.each(obj, function (value, index, list) {
	      if (predicate(value, index, list)) results.push(value);
	    });
	    return results;
	  };

	  // Return all the elements for which a truth test fails.
	  _.reject = function (obj, predicate, context) {
	    return _.filter(obj, _.negate(cb(predicate)), context);
	  };

	  // Determine whether all of the elements match a truth test.
	  // Aliased as `all`.
	  _.every = _.all = function (obj, predicate, context) {
	    predicate = cb(predicate, context);
	    var keys = !isArrayLike(obj) && _.keys(obj),
	        length = (keys || obj).length;
	    for (var index = 0; index < length; index++) {
	      var currentKey = keys ? keys[index] : index;
	      if (!predicate(obj[currentKey], currentKey, obj)) return false;
	    }
	    return true;
	  };

	  // Determine if at least one element in the object matches a truth test.
	  // Aliased as `any`.
	  _.some = _.any = function (obj, predicate, context) {
	    predicate = cb(predicate, context);
	    var keys = !isArrayLike(obj) && _.keys(obj),
	        length = (keys || obj).length;
	    for (var index = 0; index < length; index++) {
	      var currentKey = keys ? keys[index] : index;
	      if (predicate(obj[currentKey], currentKey, obj)) return true;
	    }
	    return false;
	  };

	  // Determine if the array or object contains a given item (using `===`).
	  // Aliased as `includes` and `include`.
	  _.contains = _.includes = _.include = function (obj, item, fromIndex, guard) {
	    if (!isArrayLike(obj)) obj = _.values(obj);
	    if (typeof fromIndex != 'number' || guard) fromIndex = 0;
	    return _.indexOf(obj, item, fromIndex) >= 0;
	  };

	  // Invoke a method (with arguments) on every item in a collection.
	  _.invoke = function (obj, method) {
	    var args = slice.call(arguments, 2);
	    var isFunc = _.isFunction(method);
	    return _.map(obj, function (value) {
	      var func = isFunc ? method : value[method];
	      return func == null ? func : func.apply(value, args);
	    });
	  };

	  // Convenience version of a common use case of `map`: fetching a property.
	  _.pluck = function (obj, key) {
	    return _.map(obj, _.property(key));
	  };

	  // Convenience version of a common use case of `filter`: selecting only objects
	  // containing specific `key:value` pairs.
	  _.where = function (obj, attrs) {
	    return _.filter(obj, _.matcher(attrs));
	  };

	  // Convenience version of a common use case of `find`: getting the first object
	  // containing specific `key:value` pairs.
	  _.findWhere = function (obj, attrs) {
	    return _.find(obj, _.matcher(attrs));
	  };

	  // Return the maximum element (or element-based computation).
	  _.max = function (obj, iteratee, context) {
	    var result = -Infinity,
	        lastComputed = -Infinity,
	        value,
	        computed;
	    if (iteratee == null && obj != null) {
	      obj = isArrayLike(obj) ? obj : _.values(obj);
	      for (var i = 0, length = obj.length; i < length; i++) {
	        value = obj[i];
	        if (value > result) {
	          result = value;
	        }
	      }
	    } else {
	      iteratee = cb(iteratee, context);
	      _.each(obj, function (value, index, list) {
	        computed = iteratee(value, index, list);
	        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {
	          result = value;
	          lastComputed = computed;
	        }
	      });
	    }
	    return result;
	  };

	  // Return the minimum element (or element-based computation).
	  _.min = function (obj, iteratee, context) {
	    var result = Infinity,
	        lastComputed = Infinity,
	        value,
	        computed;
	    if (iteratee == null && obj != null) {
	      obj = isArrayLike(obj) ? obj : _.values(obj);
	      for (var i = 0, length = obj.length; i < length; i++) {
	        value = obj[i];
	        if (value < result) {
	          result = value;
	        }
	      }
	    } else {
	      iteratee = cb(iteratee, context);
	      _.each(obj, function (value, index, list) {
	        computed = iteratee(value, index, list);
	        if (computed < lastComputed || computed === Infinity && result === Infinity) {
	          result = value;
	          lastComputed = computed;
	        }
	      });
	    }
	    return result;
	  };

	  // Shuffle a collection, using the modern version of the
	  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).
	  _.shuffle = function (obj) {
	    var set = isArrayLike(obj) ? obj : _.values(obj);
	    var length = set.length;
	    var shuffled = Array(length);
	    for (var index = 0, rand; index < length; index++) {
	      rand = _.random(0, index);
	      if (rand !== index) shuffled[index] = shuffled[rand];
	      shuffled[rand] = set[index];
	    }
	    return shuffled;
	  };

	  // Sample **n** random values from a collection.
	  // If **n** is not specified, returns a single random element.
	  // The internal `guard` argument allows it to work with `map`.
	  _.sample = function (obj, n, guard) {
	    if (n == null || guard) {
	      if (!isArrayLike(obj)) obj = _.values(obj);
	      return obj[_.random(obj.length - 1)];
	    }
	    return _.shuffle(obj).slice(0, Math.max(0, n));
	  };

	  // Sort the object's values by a criterion produced by an iteratee.
	  _.sortBy = function (obj, iteratee, context) {
	    iteratee = cb(iteratee, context);
	    return _.pluck(_.map(obj, function (value, index, list) {
	      return {
	        value: value,
	        index: index,
	        criteria: iteratee(value, index, list)
	      };
	    }).sort(function (left, right) {
	      var a = left.criteria;
	      var b = right.criteria;
	      if (a !== b) {
	        if (a > b || a === void 0) return 1;
	        if (a < b || b === void 0) return -1;
	      }
	      return left.index - right.index;
	    }), 'value');
	  };

	  // An internal function used for aggregate "group by" operations.
	  var group = function group(behavior) {
	    return function (obj, iteratee, context) {
	      var result = {};
	      iteratee = cb(iteratee, context);
	      _.each(obj, function (value, index) {
	        var key = iteratee(value, index, obj);
	        behavior(result, value, key);
	      });
	      return result;
	    };
	  };

	  // Groups the object's values by a criterion. Pass either a string attribute
	  // to group by, or a function that returns the criterion.
	  _.groupBy = group(function (result, value, key) {
	    if (_.has(result, key)) result[key].push(value);else result[key] = [value];
	  });

	  // Indexes the object's values by a criterion, similar to `groupBy`, but for
	  // when you know that your index values will be unique.
	  _.indexBy = group(function (result, value, key) {
	    result[key] = value;
	  });

	  // Counts instances of an object that group by a certain criterion. Pass
	  // either a string attribute to count by, or a function that returns the
	  // criterion.
	  _.countBy = group(function (result, value, key) {
	    if (_.has(result, key)) result[key]++;else result[key] = 1;
	  });

	  // Safely create a real, live array from anything iterable.
	  _.toArray = function (obj) {
	    if (!obj) return [];
	    if (_.isArray(obj)) return slice.call(obj);
	    if (isArrayLike(obj)) return _.map(obj, _.identity);
	    return _.values(obj);
	  };

	  // Return the number of elements in an object.
	  _.size = function (obj) {
	    if (obj == null) return 0;
	    return isArrayLike(obj) ? obj.length : _.keys(obj).length;
	  };

	  // Split a collection into two arrays: one whose elements all satisfy the given
	  // predicate, and one whose elements all do not satisfy the predicate.
	  _.partition = function (obj, predicate, context) {
	    predicate = cb(predicate, context);
	    var pass = [],
	        fail = [];
	    _.each(obj, function (value, key, obj) {
	      (predicate(value, key, obj) ? pass : fail).push(value);
	    });
	    return [pass, fail];
	  };

	  // Array Functions
	  // ---------------

	  // Get the first element of an array. Passing **n** will return the first N
	  // values in the array. Aliased as `head` and `take`. The **guard** check
	  // allows it to work with `_.map`.
	  _.first = _.head = _.take = function (array, n, guard) {
	    if (array == null) return void 0;
	    if (n == null || guard) return array[0];
	    return _.initial(array, array.length - n);
	  };

	  // Returns everything but the last entry of the array. Especially useful on
	  // the arguments object. Passing **n** will return all the values in
	  // the array, excluding the last N.
	  _.initial = function (array, n, guard) {
	    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));
	  };

	  // Get the last element of an array. Passing **n** will return the last N
	  // values in the array.
	  _.last = function (array, n, guard) {
	    if (array == null) return void 0;
	    if (n == null || guard) return array[array.length - 1];
	    return _.rest(array, Math.max(0, array.length - n));
	  };

	  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.
	  // Especially useful on the arguments object. Passing an **n** will return
	  // the rest N values in the array.
	  _.rest = _.tail = _.drop = function (array, n, guard) {
	    return slice.call(array, n == null || guard ? 1 : n);
	  };

	  // Trim out all falsy values from an array.
	  _.compact = function (array) {
	    return _.filter(array, _.identity);
	  };

	  // Internal implementation of a recursive `flatten` function.
	  var flatten = function flatten(input, shallow, strict, startIndex) {
	    var output = [],
	        idx = 0;
	    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {
	      var value = input[i];
	      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {
	        //flatten current level of array or arguments object
	        if (!shallow) value = flatten(value, shallow, strict);
	        var j = 0,
	            len = value.length;
	        output.length += len;
	        while (j < len) {
	          output[idx++] = value[j++];
	        }
	      } else if (!strict) {
	        output[idx++] = value;
	      }
	    }
	    return output;
	  };

	  // Flatten out an array, either recursively (by default), or just one level.
	  _.flatten = function (array, shallow) {
	    return flatten(array, shallow, false);
	  };

	  // Return a version of the array that does not contain the specified value(s).
	  _.without = function (array) {
	    return _.difference(array, slice.call(arguments, 1));
	  };

	  // Produce a duplicate-free version of the array. If the array has already
	  // been sorted, you have the option of using a faster algorithm.
	  // Aliased as `unique`.
	  _.uniq = _.unique = function (array, isSorted, iteratee, context) {
	    if (!_.isBoolean(isSorted)) {
	      context = iteratee;
	      iteratee = isSorted;
	      isSorted = false;
	    }
	    if (iteratee != null) iteratee = cb(iteratee, context);
	    var result = [];
	    var seen = [];
	    for (var i = 0, length = getLength(array); i < length; i++) {
	      var value = array[i],
	          computed = iteratee ? iteratee(value, i, array) : value;
	      if (isSorted) {
	        if (!i || seen !== computed) result.push(value);
	        seen = computed;
	      } else if (iteratee) {
	        if (!_.contains(seen, computed)) {
	          seen.push(computed);
	          result.push(value);
	        }
	      } else if (!_.contains(result, value)) {
	        result.push(value);
	      }
	    }
	    return result;
	  };

	  // Produce an array that contains the union: each distinct element from all of
	  // the passed-in arrays.
	  _.union = function () {
	    return _.uniq(flatten(arguments, true, true));
	  };

	  // Produce an array that contains every item shared between all the
	  // passed-in arrays.
	  _.intersection = function (array) {
	    var result = [];
	    var argsLength = arguments.length;
	    for (var i = 0, length = getLength(array); i < length; i++) {
	      var item = array[i];
	      if (_.contains(result, item)) continue;
	      for (var j = 1; j < argsLength; j++) {
	        if (!_.contains(arguments[j], item)) break;
	      }
	      if (j === argsLength) result.push(item);
	    }
	    return result;
	  };

	  // Take the difference between one array and a number of other arrays.
	  // Only the elements present in just the first array will remain.
	  _.difference = function (array) {
	    var rest = flatten(arguments, true, true, 1);
	    return _.filter(array, function (value) {
	      return !_.contains(rest, value);
	    });
	  };

	  // Zip together multiple lists into a single array -- elements that share
	  // an index go together.
	  _.zip = function () {
	    return _.unzip(arguments);
	  };

	  // Complement of _.zip. Unzip accepts an array of arrays and groups
	  // each array's elements on shared indices
	  _.unzip = function (array) {
	    var length = array && _.max(array, getLength).length || 0;
	    var result = Array(length);

	    for (var index = 0; index < length; index++) {
	      result[index] = _.pluck(array, index);
	    }
	    return result;
	  };

	  // Converts lists into objects. Pass either a single array of `[key, value]`
	  // pairs, or two parallel arrays of the same length -- one of keys, and one of
	  // the corresponding values.
	  _.object = function (list, values) {
	    var result = {};
	    for (var i = 0, length = getLength(list); i < length; i++) {
	      if (values) {
	        result[list[i]] = values[i];
	      } else {
	        result[list[i][0]] = list[i][1];
	      }
	    }
	    return result;
	  };

	  // Generator function to create the findIndex and findLastIndex functions
	  function createPredicateIndexFinder(dir) {
	    return function (array, predicate, context) {
	      predicate = cb(predicate, context);
	      var length = getLength(array);
	      var index = dir > 0 ? 0 : length - 1;
	      for (; index >= 0 && index < length; index += dir) {
	        if (predicate(array[index], index, array)) return index;
	      }
	      return -1;
	    };
	  }

	  // Returns the first index on an array-like that passes a predicate test
	  _.findIndex = createPredicateIndexFinder(1);
	  _.findLastIndex = createPredicateIndexFinder(-1);

	  // Use a comparator function to figure out the smallest index at which
	  // an object should be inserted so as to maintain order. Uses binary search.
	  _.sortedIndex = function (array, obj, iteratee, context) {
	    iteratee = cb(iteratee, context, 1);
	    var value = iteratee(obj);
	    var low = 0,
	        high = getLength(array);
	    while (low < high) {
	      var mid = Math.floor((low + high) / 2);
	      if (iteratee(array[mid]) < value) low = mid + 1;else high = mid;
	    }
	    return low;
	  };

	  // Generator function to create the indexOf and lastIndexOf functions
	  function createIndexFinder(dir, predicateFind, sortedIndex) {
	    return function (array, item, idx) {
	      var i = 0,
	          length = getLength(array);
	      if (typeof idx == 'number') {
	        if (dir > 0) {
	          i = idx >= 0 ? idx : Math.max(idx + length, i);
	        } else {
	          length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;
	        }
	      } else if (sortedIndex && idx && length) {
	        idx = sortedIndex(array, item);
	        return array[idx] === item ? idx : -1;
	      }
	      if (item !== item) {
	        idx = predicateFind(slice.call(array, i, length), _.isNaN);
	        return idx >= 0 ? idx + i : -1;
	      }
	      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {
	        if (array[idx] === item) return idx;
	      }
	      return -1;
	    };
	  }

	  // Return the position of the first occurrence of an item in an array,
	  // or -1 if the item is not included in the array.
	  // If the array is large and already in sort order, pass `true`
	  // for **isSorted** to use binary search.
	  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);
	  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);

	  // Generate an integer Array containing an arithmetic progression. A port of
	  // the native Python `range()` function. See
	  // [the Python documentation](http://docs.python.org/library/functions.html#range).
	  _.range = function (start, stop, step) {
	    if (stop == null) {
	      stop = start || 0;
	      start = 0;
	    }
	    step = step || 1;

	    var length = Math.max(Math.ceil((stop - start) / step), 0);
	    var range = Array(length);

	    for (var idx = 0; idx < length; idx++, start += step) {
	      range[idx] = start;
	    }

	    return range;
	  };

	  // Function (ahem) Functions
	  // ------------------

	  // Determines whether to execute a function as a constructor
	  // or a normal function with the provided arguments
	  var executeBound = function executeBound(sourceFunc, boundFunc, context, callingContext, args) {
	    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);
	    var self = baseCreate(sourceFunc.prototype);
	    var result = sourceFunc.apply(self, args);
	    if (_.isObject(result)) return result;
	    return self;
	  };

	  // Create a function bound to a given object (assigning `this`, and arguments,
	  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if
	  // available.
	  _.bind = function (func, context) {
	    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));
	    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');
	    var args = slice.call(arguments, 2);
	    var bound = function bound() {
	      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));
	    };
	    return bound;
	  };

	  // Partially apply a function by creating a version that has had some of its
	  // arguments pre-filled, without changing its dynamic `this` context. _ acts
	  // as a placeholder, allowing any combination of arguments to be pre-filled.
	  _.partial = function (func) {
	    var boundArgs = slice.call(arguments, 1);
	    var bound = function bound() {
	      var position = 0,
	          length = boundArgs.length;
	      var args = Array(length);
	      for (var i = 0; i < length; i++) {
	        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];
	      }
	      while (position < arguments.length) args.push(arguments[position++]);
	      return executeBound(func, bound, this, this, args);
	    };
	    return bound;
	  };

	  // Bind a number of an object's methods to that object. Remaining arguments
	  // are the method names to be bound. Useful for ensuring that all callbacks
	  // defined on an object belong to it.
	  _.bindAll = function (obj) {
	    var i,
	        length = arguments.length,
	        key;
	    if (length <= 1) throw new Error('bindAll must be passed function names');
	    for (i = 1; i < length; i++) {
	      key = arguments[i];
	      obj[key] = _.bind(obj[key], obj);
	    }
	    return obj;
	  };

	  // Memoize an expensive function by storing its results.
	  _.memoize = function (func, hasher) {
	    var memoize = function memoize(key) {
	      var cache = memoize.cache;
	      var address = '' + (hasher ? hasher.apply(this, arguments) : key);
	      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);
	      return cache[address];
	    };
	    memoize.cache = {};
	    return memoize;
	  };

	  // Delays a function for the given number of milliseconds, and then calls
	  // it with the arguments supplied.
	  _.delay = function (func, wait) {
	    var args = slice.call(arguments, 2);
	    return setTimeout(function () {
	      return func.apply(null, args);
	    }, wait);
	  };

	  // Defers a function, scheduling it to run after the current call stack has
	  // cleared.
	  _.defer = _.partial(_.delay, _, 1);

	  // Returns a function, that, when invoked, will only be triggered at most once
	  // during a given window of time. Normally, the throttled function will run
	  // as much as it can, without ever going more than once per `wait` duration;
	  // but if you'd like to disable the execution on the leading edge, pass
	  // `{leading: false}`. To disable execution on the trailing edge, ditto.
	  _.throttle = function (func, wait, options) {
	    var context, args, result;
	    var timeout = null;
	    var previous = 0;
	    if (!options) options = {};
	    var later = function later() {
	      previous = options.leading === false ? 0 : _.now();
	      timeout = null;
	      result = func.apply(context, args);
	      if (!timeout) context = args = null;
	    };
	    return function () {
	      var now = _.now();
	      if (!previous && options.leading === false) previous = now;
	      var remaining = wait - (now - previous);
	      context = this;
	      args = arguments;
	      if (remaining <= 0 || remaining > wait) {
	        if (timeout) {
	          clearTimeout(timeout);
	          timeout = null;
	        }
	        previous = now;
	        result = func.apply(context, args);
	        if (!timeout) context = args = null;
	      } else if (!timeout && options.trailing !== false) {
	        timeout = setTimeout(later, remaining);
	      }
	      return result;
	    };
	  };

	  // Returns a function, that, as long as it continues to be invoked, will not
	  // be triggered. The function will be called after it stops being called for
	  // N milliseconds. If `immediate` is passed, trigger the function on the
	  // leading edge, instead of the trailing.
	  _.debounce = function (func, wait, immediate) {
	    var timeout, args, context, timestamp, result;

	    var later = function later() {
	      var last = _.now() - timestamp;

	      if (last < wait && last >= 0) {
	        timeout = setTimeout(later, wait - last);
	      } else {
	        timeout = null;
	        if (!immediate) {
	          result = func.apply(context, args);
	          if (!timeout) context = args = null;
	        }
	      }
	    };

	    return function () {
	      context = this;
	      args = arguments;
	      timestamp = _.now();
	      var callNow = immediate && !timeout;
	      if (!timeout) timeout = setTimeout(later, wait);
	      if (callNow) {
	        result = func.apply(context, args);
	        context = args = null;
	      }

	      return result;
	    };
	  };

	  // Returns the first function passed as an argument to the second,
	  // allowing you to adjust arguments, run code before and after, and
	  // conditionally execute the original function.
	  _.wrap = function (func, wrapper) {
	    return _.partial(wrapper, func);
	  };

	  // Returns a negated version of the passed-in predicate.
	  _.negate = function (predicate) {
	    return function () {
	      return !predicate.apply(this, arguments);
	    };
	  };

	  // Returns a function that is the composition of a list of functions, each
	  // consuming the return value of the function that follows.
	  _.compose = function () {
	    var args = arguments;
	    var start = args.length - 1;
	    return function () {
	      var i = start;
	      var result = args[start].apply(this, arguments);
	      while (i--) result = args[i].call(this, result);
	      return result;
	    };
	  };

	  // Returns a function that will only be executed on and after the Nth call.
	  _.after = function (times, func) {
	    return function () {
	      if (--times < 1) {
	        return func.apply(this, arguments);
	      }
	    };
	  };

	  // Returns a function that will only be executed up to (but not including) the Nth call.
	  _.before = function (times, func) {
	    var memo;
	    return function () {
	      if (--times > 0) {
	        memo = func.apply(this, arguments);
	      }
	      if (times <= 1) func = null;
	      return memo;
	    };
	  };

	  // Returns a function that will be executed at most one time, no matter how
	  // often you call it. Useful for lazy initialization.
	  _.once = _.partial(_.before, 2);

	  // Object Functions
	  // ----------------

	  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.
	  var hasEnumBug = !({ toString: null }).propertyIsEnumerable('toString');
	  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];

	  function collectNonEnumProps(obj, keys) {
	    var nonEnumIdx = nonEnumerableProps.length;
	    var constructor = obj.constructor;
	    var proto = _.isFunction(constructor) && constructor.prototype || ObjProto;

	    // Constructor is a special case.
	    var prop = 'constructor';
	    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);

	    while (nonEnumIdx--) {
	      prop = nonEnumerableProps[nonEnumIdx];
	      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {
	        keys.push(prop);
	      }
	    }
	  }

	  // Retrieve the names of an object's own properties.
	  // Delegates to **ECMAScript 5**'s native `Object.keys`
	  _.keys = function (obj) {
	    if (!_.isObject(obj)) return [];
	    if (nativeKeys) return nativeKeys(obj);
	    var keys = [];
	    for (var key in obj) if (_.has(obj, key)) keys.push(key);
	    // Ahem, IE < 9.
	    if (hasEnumBug) collectNonEnumProps(obj, keys);
	    return keys;
	  };

	  // Retrieve all the property names of an object.
	  _.allKeys = function (obj) {
	    if (!_.isObject(obj)) return [];
	    var keys = [];
	    for (var key in obj) keys.push(key);
	    // Ahem, IE < 9.
	    if (hasEnumBug) collectNonEnumProps(obj, keys);
	    return keys;
	  };

	  // Retrieve the values of an object's properties.
	  _.values = function (obj) {
	    var keys = _.keys(obj);
	    var length = keys.length;
	    var values = Array(length);
	    for (var i = 0; i < length; i++) {
	      values[i] = obj[keys[i]];
	    }
	    return values;
	  };

	  // Returns the results of applying the iteratee to each element of the object
	  // In contrast to _.map it returns an object
	  _.mapObject = function (obj, iteratee, context) {
	    iteratee = cb(iteratee, context);
	    var keys = _.keys(obj),
	        length = keys.length,
	        results = {},
	        currentKey;
	    for (var index = 0; index < length; index++) {
	      currentKey = keys[index];
	      results[currentKey] = iteratee(obj[currentKey], currentKey, obj);
	    }
	    return results;
	  };

	  // Convert an object into a list of `[key, value]` pairs.
	  _.pairs = function (obj) {
	    var keys = _.keys(obj);
	    var length = keys.length;
	    var pairs = Array(length);
	    for (var i = 0; i < length; i++) {
	      pairs[i] = [keys[i], obj[keys[i]]];
	    }
	    return pairs;
	  };

	  // Invert the keys and values of an object. The values must be serializable.
	  _.invert = function (obj) {
	    var result = {};
	    var keys = _.keys(obj);
	    for (var i = 0, length = keys.length; i < length; i++) {
	      result[obj[keys[i]]] = keys[i];
	    }
	    return result;
	  };

	  // Return a sorted list of the function names available on the object.
	  // Aliased as `methods`
	  _.functions = _.methods = function (obj) {
	    var names = [];
	    for (var key in obj) {
	      if (_.isFunction(obj[key])) names.push(key);
	    }
	    return names.sort();
	  };

	  // Extend a given object with all the properties in passed-in object(s).
	  _.extend = createAssigner(_.allKeys);

	  // Assigns a given object with all the own properties in the passed-in object(s)
	  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)
	  _.extendOwn = _.assign = createAssigner(_.keys);

	  // Returns the first key on an object that passes a predicate test
	  _.findKey = function (obj, predicate, context) {
	    predicate = cb(predicate, context);
	    var keys = _.keys(obj),
	        key;
	    for (var i = 0, length = keys.length; i < length; i++) {
	      key = keys[i];
	      if (predicate(obj[key], key, obj)) return key;
	    }
	  };

	  // Return a copy of the object only containing the whitelisted properties.
	  _.pick = function (object, oiteratee, context) {
	    var result = {},
	        obj = object,
	        iteratee,
	        keys;
	    if (obj == null) return result;
	    if (_.isFunction(oiteratee)) {
	      keys = _.allKeys(obj);
	      iteratee = optimizeCb(oiteratee, context);
	    } else {
	      keys = flatten(arguments, false, false, 1);
	      iteratee = function (value, key, obj) {
	        return key in obj;
	      };
	      obj = Object(obj);
	    }
	    for (var i = 0, length = keys.length; i < length; i++) {
	      var key = keys[i];
	      var value = obj[key];
	      if (iteratee(value, key, obj)) result[key] = value;
	    }
	    return result;
	  };

	  // Return a copy of the object without the blacklisted properties.
	  _.omit = function (obj, iteratee, context) {
	    if (_.isFunction(iteratee)) {
	      iteratee = _.negate(iteratee);
	    } else {
	      var keys = _.map(flatten(arguments, false, false, 1), String);
	      iteratee = function (value, key) {
	        return !_.contains(keys, key);
	      };
	    }
	    return _.pick(obj, iteratee, context);
	  };

	  // Fill in a given object with default properties.
	  _.defaults = createAssigner(_.allKeys, true);

	  // Creates an object that inherits from the given prototype object.
	  // If additional properties are provided then they will be added to the
	  // created object.
	  _.create = function (prototype, props) {
	    var result = baseCreate(prototype);
	    if (props) _.extendOwn(result, props);
	    return result;
	  };

	  // Create a (shallow-cloned) duplicate of an object.
	  _.clone = function (obj) {
	    if (!_.isObject(obj)) return obj;
	    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);
	  };

	  // Invokes interceptor with the obj, and then returns obj.
	  // The primary purpose of this method is to "tap into" a method chain, in
	  // order to perform operations on intermediate results within the chain.
	  _.tap = function (obj, interceptor) {
	    interceptor(obj);
	    return obj;
	  };

	  // Returns whether an object has a given set of `key:value` pairs.
	  _.isMatch = function (object, attrs) {
	    var keys = _.keys(attrs),
	        length = keys.length;
	    if (object == null) return !length;
	    var obj = Object(object);
	    for (var i = 0; i < length; i++) {
	      var key = keys[i];
	      if (attrs[key] !== obj[key] || !(key in obj)) return false;
	    }
	    return true;
	  };

	  // Internal recursive comparison function for `isEqual`.
	  var eq = function eq(a, b, aStack, bStack) {
	    // Identical objects are equal. `0 === -0`, but they aren't identical.
	    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).
	    if (a === b) return a !== 0 || 1 / a === 1 / b;
	    // A strict comparison is necessary because `null == undefined`.
	    if (a == null || b == null) return a === b;
	    // Unwrap any wrapped objects.
	    if (a instanceof _) a = a._wrapped;
	    if (b instanceof _) b = b._wrapped;
	    // Compare `[[Class]]` names.
	    var className = toString.call(a);
	    if (className !== toString.call(b)) return false;
	    switch (className) {
	      // Strings, numbers, regular expressions, dates, and booleans are compared by value.
	      case '[object RegExp]':
	      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')
	      case '[object String]':
	        // Primitives and their corresponding object wrappers are equivalent; thus, `"5"` is
	        // equivalent to `new String("5")`.
	        return '' + a === '' + b;
	      case '[object Number]':
	        // `NaN`s are equivalent, but non-reflexive.
	        // Object(NaN) is equivalent to NaN
	        if (+a !== +a) return +b !== +b;
	        // An `egal` comparison is performed for other numeric values.
	        return +a === 0 ? 1 / +a === 1 / b : +a === +b;
	      case '[object Date]':
	      case '[object Boolean]':
	        // Coerce dates and booleans to numeric primitive values. Dates are compared by their
	        // millisecond representations. Note that invalid dates with millisecond representations
	        // of `NaN` are not equivalent.
	        return +a === +b;
	    }

	    var areArrays = className === '[object Array]';
	    if (!areArrays) {
	      if (typeof a != 'object' || typeof b != 'object') return false;

	      // Objects with different constructors are not equivalent, but `Object`s or `Array`s
	      // from different frames are.
	      var aCtor = a.constructor,
	          bCtor = b.constructor;
	      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor && _.isFunction(bCtor) && bCtor instanceof bCtor) && ('constructor' in a && 'constructor' in b)) {
	        return false;
	      }
	    }
	    // Assume equality for cyclic structures. The algorithm for detecting cyclic
	    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.

	    // Initializing stack of traversed objects.
	    // It's done here since we only need them for objects and arrays comparison.
	    aStack = aStack || [];
	    bStack = bStack || [];
	    var length = aStack.length;
	    while (length--) {
	      // Linear search. Performance is inversely proportional to the number of
	      // unique nested structures.
	      if (aStack[length] === a) return bStack[length] === b;
	    }

	    // Add the first object to the stack of traversed objects.
	    aStack.push(a);
	    bStack.push(b);

	    // Recursively compare objects and arrays.
	    if (areArrays) {
	      // Compare array lengths to determine if a deep comparison is necessary.
	      length = a.length;
	      if (length !== b.length) return false;
	      // Deep compare the contents, ignoring non-numeric properties.
	      while (length--) {
	        if (!eq(a[length], b[length], aStack, bStack)) return false;
	      }
	    } else {
	      // Deep compare objects.
	      var keys = _.keys(a),
	          key;
	      length = keys.length;
	      // Ensure that both objects contain the same number of properties before comparing deep equality.
	      if (_.keys(b).length !== length) return false;
	      while (length--) {
	        // Deep compare each member
	        key = keys[length];
	        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;
	      }
	    }
	    // Remove the first object from the stack of traversed objects.
	    aStack.pop();
	    bStack.pop();
	    return true;
	  };

	  // Perform a deep comparison to check if two objects are equal.
	  _.isEqual = function (a, b) {
	    return eq(a, b);
	  };

	  // Is a given array, string, or object empty?
	  // An "empty" object has no enumerable own-properties.
	  _.isEmpty = function (obj) {
	    if (obj == null) return true;
	    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;
	    return _.keys(obj).length === 0;
	  };

	  // Is a given value a DOM element?
	  _.isElement = function (obj) {
	    return !!(obj && obj.nodeType === 1);
	  };

	  // Is a given value an array?
	  // Delegates to ECMA5's native Array.isArray
	  _.isArray = nativeIsArray || function (obj) {
	    return toString.call(obj) === '[object Array]';
	  };

	  // Is a given variable an object?
	  _.isObject = function (obj) {
	    var type = typeof obj;
	    return type === 'function' || type === 'object' && !!obj;
	  };

	  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.
	  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function (name) {
	    _['is' + name] = function (obj) {
	      return toString.call(obj) === '[object ' + name + ']';
	    };
	  });

	  // Define a fallback version of the method in browsers (ahem, IE < 9), where
	  // there isn't any inspectable "Arguments" type.
	  if (!_.isArguments(arguments)) {
	    _.isArguments = function (obj) {
	      return _.has(obj, 'callee');
	    };
	  }

	  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,
	  // IE 11 (#1621), and in Safari 8 (#1929).
	  if (typeof /./ != 'function' && typeof Int8Array != 'object') {
	    _.isFunction = function (obj) {
	      return typeof obj == 'function' || false;
	    };
	  }

	  // Is a given object a finite number?
	  _.isFinite = function (obj) {
	    return isFinite(obj) && !isNaN(parseFloat(obj));
	  };

	  // Is the given value `NaN`? (NaN is the only number which does not equal itself).
	  _.isNaN = function (obj) {
	    return _.isNumber(obj) && obj !== +obj;
	  };

	  // Is a given value a boolean?
	  _.isBoolean = function (obj) {
	    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';
	  };

	  // Is a given value equal to null?
	  _.isNull = function (obj) {
	    return obj === null;
	  };

	  // Is a given variable undefined?
	  _.isUndefined = function (obj) {
	    return obj === void 0;
	  };

	  // Shortcut function for checking if an object has a given property directly
	  // on itself (in other words, not on a prototype).
	  _.has = function (obj, key) {
	    return obj != null && hasOwnProperty.call(obj, key);
	  };

	  // Utility Functions
	  // -----------------

	  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its
	  // previous owner. Returns a reference to the Underscore object.
	  _.noConflict = function () {
	    root._ = previousUnderscore;
	    return this;
	  };

	  // Keep the identity function around for default iteratees.
	  _.identity = function (value) {
	    return value;
	  };

	  // Predicate-generating functions. Often useful outside of Underscore.
	  _.constant = function (value) {
	    return function () {
	      return value;
	    };
	  };

	  _.noop = function () {};

	  _.property = property;

	  // Generates a function for a given object that returns a given property.
	  _.propertyOf = function (obj) {
	    return obj == null ? function () {} : function (key) {
	      return obj[key];
	    };
	  };

	  // Returns a predicate for checking whether an object has a given set of
	  // `key:value` pairs.
	  _.matcher = _.matches = function (attrs) {
	    attrs = _.extendOwn({}, attrs);
	    return function (obj) {
	      return _.isMatch(obj, attrs);
	    };
	  };

	  // Run a function **n** times.
	  _.times = function (n, iteratee, context) {
	    var accum = Array(Math.max(0, n));
	    iteratee = optimizeCb(iteratee, context, 1);
	    for (var i = 0; i < n; i++) accum[i] = iteratee(i);
	    return accum;
	  };

	  // Return a random integer between min and max (inclusive).
	  _.random = function (min, max) {
	    if (max == null) {
	      max = min;
	      min = 0;
	    }
	    return min + Math.floor(Math.random() * (max - min + 1));
	  };

	  // A (possibly faster) way to get the current timestamp as an integer.
	  _.now = Date.now || function () {
	    return new Date().getTime();
	  };

	  // List of HTML entities for escaping.
	  var escapeMap = {
	    '&': '&amp;',
	    '<': '&lt;',
	    '>': '&gt;',
	    '"': '&quot;',
	    '\'': '&#x27;',
	    '`': '&#x60;'
	  };
	  var unescapeMap = _.invert(escapeMap);

	  // Functions for escaping and unescaping strings to/from HTML interpolation.
	  var createEscaper = function createEscaper(map) {
	    var escaper = function escaper(match) {
	      return map[match];
	    };
	    // Regexes for identifying a key that needs to be escaped
	    var source = '(?:' + _.keys(map).join('|') + ')';
	    var testRegexp = RegExp(source);
	    var replaceRegexp = RegExp(source, 'g');
	    return function (string) {
	      string = string == null ? '' : '' + string;
	      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;
	    };
	  };
	  _.escape = createEscaper(escapeMap);
	  _.unescape = createEscaper(unescapeMap);

	  // If the value of the named `property` is a function then invoke it with the
	  // `object` as context; otherwise, return it.
	  _.result = function (object, property, fallback) {
	    var value = object == null ? void 0 : object[property];
	    if (value === void 0) {
	      value = fallback;
	    }
	    return _.isFunction(value) ? value.call(object) : value;
	  };

	  // Generate a unique integer id (unique within the entire client session).
	  // Useful for temporary DOM ids.
	  var idCounter = 0;
	  _.uniqueId = function (prefix) {
	    var id = ++idCounter + '';
	    return prefix ? prefix + id : id;
	  };

	  // By default, Underscore uses ERB-style template delimiters, change the
	  // following template settings to use alternative delimiters.
	  _.templateSettings = {
	    evaluate: /<%([\s\S]+?)%>/g,
	    interpolate: /<%=([\s\S]+?)%>/g,
	    escape: /<%-([\s\S]+?)%>/g
	  };

	  // When customizing `templateSettings`, if you don't want to define an
	  // interpolation, evaluation or escaping regex, we need one that is
	  // guaranteed not to match.
	  var noMatch = /(.)^/;

	  // Certain characters need to be escaped so that they can be put into a
	  // string literal.
	  var escapes = {
	    '\'': '\'',
	    '\\': '\\',
	    '\r': 'r',
	    '\n': 'n',
	    '\u2028': 'u2028',
	    '\u2029': 'u2029'
	  };

	  var escaper = /\\|'|\r|\n|\u2028|\u2029/g;

	  var escapeChar = function escapeChar(match) {
	    return '\\' + escapes[match];
	  };

	  // JavaScript micro-templating, similar to John Resig's implementation.
	  // Underscore templating handles arbitrary delimiters, preserves whitespace,
	  // and correctly escapes quotes within interpolated code.
	  // NB: `oldSettings` only exists for backwards compatibility.
	  _.template = function (text, settings, oldSettings) {
	    if (!settings && oldSettings) settings = oldSettings;
	    settings = _.defaults({}, settings, _.templateSettings);

	    // Combine delimiters into one regular expression via alternation.
	    var matcher = RegExp([(settings.escape || noMatch).source, (settings.interpolate || noMatch).source, (settings.evaluate || noMatch).source].join('|') + '|$', 'g');

	    // Compile the template source, escaping string literals appropriately.
	    var index = 0;
	    var source = '__p+=\'';
	    text.replace(matcher, function (match, escape, interpolate, evaluate, offset) {
	      source += text.slice(index, offset).replace(escaper, escapeChar);
	      index = offset + match.length;

	      if (escape) {
	        source += '\'+\n((__t=(' + escape + '))==null?\'\':_.escape(__t))+\n\'';
	      } else if (interpolate) {
	        source += '\'+\n((__t=(' + interpolate + '))==null?\'\':__t)+\n\'';
	      } else if (evaluate) {
	        source += '\';\n' + evaluate + '\n__p+=\'';
	      }

	      // Adobe VMs need the match returned to produce the correct offest.
	      return match;
	    });
	    source += '\';\n';

	    // If a variable is not specified, place data values in local scope.
	    if (!settings.variable) source = 'with(obj||{}){\n' + source + '}\n';

	    source = 'var __t,__p=\'\',__j=Array.prototype.join,' + 'print=function(){__p+=__j.call(arguments,\'\');};\n' + source + 'return __p;\n';

	    try {
	      var render = new Function(settings.variable || 'obj', '_', source);
	    } catch (e) {
	      e.source = source;
	      throw e;
	    }

	    var template = function template(data) {
	      return render.call(this, data, _);
	    };

	    // Provide the compiled source as a convenience for precompilation.
	    var argument = settings.variable || 'obj';
	    template.source = 'function(' + argument + '){\n' + source + '}';

	    return template;
	  };

	  // Add a "chain" function. Start chaining a wrapped Underscore object.
	  _.chain = function (obj) {
	    var instance = _(obj);
	    instance._chain = true;
	    return instance;
	  };

	  // OOP
	  // ---------------
	  // If Underscore is called as a function, it returns a wrapped object that
	  // can be used OO-style. This wrapper holds altered versions of all the
	  // underscore functions. Wrapped objects may be chained.

	  // Helper function to continue chaining intermediate results.
	  var result = function result(instance, obj) {
	    return instance._chain ? _(obj).chain() : obj;
	  };

	  // Add your own custom functions to the Underscore object.
	  _.mixin = function (obj) {
	    _.each(_.functions(obj), function (name) {
	      var func = _[name] = obj[name];
	      _.prototype[name] = function () {
	        var args = [this._wrapped];
	        push.apply(args, arguments);
	        return result(this, func.apply(_, args));
	      };
	    });
	  };

	  // Add all of the Underscore functions to the wrapper object.
	  _.mixin(_);

	  // Add all mutator Array functions to the wrapper.
	  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function (name) {
	    var method = ArrayProto[name];
	    _.prototype[name] = function () {
	      var obj = this._wrapped;
	      method.apply(obj, arguments);
	      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];
	      return result(this, obj);
	    };
	  });

	  // Add all accessor Array functions to the wrapper.
	  _.each(['concat', 'join', 'slice'], function (name) {
	    var method = ArrayProto[name];
	    _.prototype[name] = function () {
	      return result(this, method.apply(this._wrapped, arguments));
	    };
	  });

	  // Extracts the result from a wrapped and chained object.
	  _.prototype.value = function () {
	    return this._wrapped;
	  };

	  // Provide unwrapping proxy for some methods used in engine operations
	  // such as arithmetic and JSON stringification.
	  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;

	  _.prototype.toString = function () {
	    return '' + this._wrapped;
	  };

	  // AMD registration happens at the end for compatibility with AMD loaders
	  // that may not enforce next-turn semantics on modules. Even though general
	  // practice for AMD registration is to be anonymous, underscore registers
	  // as a named module because, like jQuery, it is a base library that is
	  // popular enough to be bundled in a third party lib, but not be part of
	  // an AMD load request. Those cases could generate an error when an
	  // anonymous define() is called outside of a loader request.
	  if (true) {
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
	      return _;
	    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  }
	}).call(undefined);

/***/ },
/* 144 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';(function(global, factory){true?module.exports = factory():typeof define === 'function' && define.amd?define(factory):global.Immutable = factory();})(undefined, function(){'use strict';var SLICE$0=Array.prototype.slice;function createClass(ctor, superClass){if(superClass){ctor.prototype = Object.create(superClass.prototype);}ctor.prototype.constructor = ctor;}var DELETE='delete';var SHIFT=5;var SIZE=1 << SHIFT;var MASK=SIZE - 1;var NOT_SET={};var CHANGE_LENGTH={value:false};var DID_ALTER={value:false};function MakeRef(ref){ref.value = false;return ref;}function SetRef(ref){ref && (ref.value = true);}function OwnerID(){}function arrCopy(arr, offset){offset = offset || 0;var len=Math.max(0, arr.length - offset);var newArr=new Array(len);for(var ii=0; ii < len; ii++) {newArr[ii] = arr[ii + offset];}return newArr;}function ensureSize(iter){if(iter.size === undefined){iter.size = iter.__iterate(returnTrue);}return iter.size;}function wrapIndex(iter, index){return index >= 0?+index:ensureSize(iter) + +index;}function returnTrue(){return true;}function wholeSlice(begin, end, size){return (begin === 0 || size !== undefined && begin <= -size) && (end === undefined || size !== undefined && end >= size);}function resolveBegin(begin, size){return resolveIndex(begin, size, 0);}function resolveEnd(end, size){return resolveIndex(end, size, size);}function resolveIndex(index, size, defaultIndex){return index === undefined?defaultIndex:index < 0?Math.max(0, size + index):size === undefined?index:Math.min(size, index);}function Iterable(value){return isIterable(value)?value:Seq(value);}createClass(KeyedIterable, Iterable);function KeyedIterable(value){return isKeyed(value)?value:KeyedSeq(value);}createClass(IndexedIterable, Iterable);function IndexedIterable(value){return isIndexed(value)?value:IndexedSeq(value);}createClass(SetIterable, Iterable);function SetIterable(value){return isIterable(value) && !isAssociative(value)?value:SetSeq(value);}function isIterable(maybeIterable){return !!(maybeIterable && maybeIterable[IS_ITERABLE_SENTINEL]);}function isKeyed(maybeKeyed){return !!(maybeKeyed && maybeKeyed[IS_KEYED_SENTINEL]);}function isIndexed(maybeIndexed){return !!(maybeIndexed && maybeIndexed[IS_INDEXED_SENTINEL]);}function isAssociative(maybeAssociative){return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);}function isOrdered(maybeOrdered){return !!(maybeOrdered && maybeOrdered[IS_ORDERED_SENTINEL]);}Iterable.isIterable = isIterable;Iterable.isKeyed = isKeyed;Iterable.isIndexed = isIndexed;Iterable.isAssociative = isAssociative;Iterable.isOrdered = isOrdered;Iterable.Keyed = KeyedIterable;Iterable.Indexed = IndexedIterable;Iterable.Set = SetIterable;var IS_ITERABLE_SENTINEL='@@__IMMUTABLE_ITERABLE__@@';var IS_KEYED_SENTINEL='@@__IMMUTABLE_KEYED__@@';var IS_INDEXED_SENTINEL='@@__IMMUTABLE_INDEXED__@@';var IS_ORDERED_SENTINEL='@@__IMMUTABLE_ORDERED__@@';var ITERATE_KEYS=0;var ITERATE_VALUES=1;var ITERATE_ENTRIES=2;var REAL_ITERATOR_SYMBOL=typeof Symbol === 'function' && Symbol.iterator;var FAUX_ITERATOR_SYMBOL='@@iterator';var ITERATOR_SYMBOL=REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;function src_Iterator__Iterator(next){this.next = next;}src_Iterator__Iterator.prototype.toString = function(){return '[Iterator]';};src_Iterator__Iterator.KEYS = ITERATE_KEYS;src_Iterator__Iterator.VALUES = ITERATE_VALUES;src_Iterator__Iterator.ENTRIES = ITERATE_ENTRIES;src_Iterator__Iterator.prototype.inspect = src_Iterator__Iterator.prototype.toSource = function(){return this.toString();};src_Iterator__Iterator.prototype[ITERATOR_SYMBOL] = function(){return this;};function iteratorValue(type, k, v, iteratorResult){var value=type === 0?k:type === 1?v:[k, v];iteratorResult?iteratorResult.value = value:iteratorResult = {value:value, done:false};return iteratorResult;}function iteratorDone(){return {value:undefined, done:true};}function hasIterator(maybeIterable){return !!getIteratorFn(maybeIterable);}function isIterator(maybeIterator){return maybeIterator && typeof maybeIterator.next === 'function';}function getIterator(iterable){var iteratorFn=getIteratorFn(iterable);return iteratorFn && iteratorFn.call(iterable);}function getIteratorFn(iterable){var iteratorFn=iterable && (REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL] || iterable[FAUX_ITERATOR_SYMBOL]);if(typeof iteratorFn === 'function'){return iteratorFn;}}function isArrayLike(value){return value && typeof value.length === 'number';}createClass(Seq, Iterable);function Seq(value){return value === null || value === undefined?emptySequence():isIterable(value)?value.toSeq():seqFromValue(value);}Seq.of = function(){return Seq(arguments);};Seq.prototype.toSeq = function(){return this;};Seq.prototype.toString = function(){return this.__toString('Seq {', '}');};Seq.prototype.cacheResult = function(){if(!this._cache && this.__iterateUncached){this._cache = this.entrySeq().toArray();this.size = this._cache.length;}return this;};Seq.prototype.__iterate = function(fn, reverse){return seqIterate(this, fn, reverse, true);};Seq.prototype.__iterator = function(type, reverse){return seqIterator(this, type, reverse, true);};createClass(KeyedSeq, Seq);function KeyedSeq(value){return value === null || value === undefined?emptySequence().toKeyedSeq():isIterable(value)?isKeyed(value)?value.toSeq():value.fromEntrySeq():keyedSeqFromValue(value);}KeyedSeq.prototype.toKeyedSeq = function(){return this;};createClass(IndexedSeq, Seq);function IndexedSeq(value){return value === null || value === undefined?emptySequence():!isIterable(value)?indexedSeqFromValue(value):isKeyed(value)?value.entrySeq():value.toIndexedSeq();}IndexedSeq.of = function(){return IndexedSeq(arguments);};IndexedSeq.prototype.toIndexedSeq = function(){return this;};IndexedSeq.prototype.toString = function(){return this.__toString('Seq [', ']');};IndexedSeq.prototype.__iterate = function(fn, reverse){return seqIterate(this, fn, reverse, false);};IndexedSeq.prototype.__iterator = function(type, reverse){return seqIterator(this, type, reverse, false);};createClass(SetSeq, Seq);function SetSeq(value){return (value === null || value === undefined?emptySequence():!isIterable(value)?indexedSeqFromValue(value):isKeyed(value)?value.entrySeq():value).toSetSeq();}SetSeq.of = function(){return SetSeq(arguments);};SetSeq.prototype.toSetSeq = function(){return this;};Seq.isSeq = isSeq;Seq.Keyed = KeyedSeq;Seq.Set = SetSeq;Seq.Indexed = IndexedSeq;var IS_SEQ_SENTINEL='@@__IMMUTABLE_SEQ__@@';Seq.prototype[IS_SEQ_SENTINEL] = true;createClass(ArraySeq, IndexedSeq);function ArraySeq(array){this._array = array;this.size = array.length;}ArraySeq.prototype.get = function(index, notSetValue){return this.has(index)?this._array[wrapIndex(this, index)]:notSetValue;};ArraySeq.prototype.__iterate = function(fn, reverse){var array=this._array;var maxIndex=array.length - 1;for(var ii=0; ii <= maxIndex; ii++) {if(fn(array[reverse?maxIndex - ii:ii], ii, this) === false){return ii + 1;}}return ii;};ArraySeq.prototype.__iterator = function(type, reverse){var array=this._array;var maxIndex=array.length - 1;var ii=0;return new src_Iterator__Iterator(function(){return ii > maxIndex?iteratorDone():iteratorValue(type, ii, array[reverse?maxIndex - ii++:ii++]);});};createClass(ObjectSeq, KeyedSeq);function ObjectSeq(object){var keys=Object.keys(object);this._object = object;this._keys = keys;this.size = keys.length;}ObjectSeq.prototype.get = function(key, notSetValue){if(notSetValue !== undefined && !this.has(key)){return notSetValue;}return this._object[key];};ObjectSeq.prototype.has = function(key){return this._object.hasOwnProperty(key);};ObjectSeq.prototype.__iterate = function(fn, reverse){var object=this._object;var keys=this._keys;var maxIndex=keys.length - 1;for(var ii=0; ii <= maxIndex; ii++) {var key=keys[reverse?maxIndex - ii:ii];if(fn(object[key], key, this) === false){return ii + 1;}}return ii;};ObjectSeq.prototype.__iterator = function(type, reverse){var object=this._object;var keys=this._keys;var maxIndex=keys.length - 1;var ii=0;return new src_Iterator__Iterator(function(){var key=keys[reverse?maxIndex - ii:ii];return ii++ > maxIndex?iteratorDone():iteratorValue(type, key, object[key]);});};ObjectSeq.prototype[IS_ORDERED_SENTINEL] = true;createClass(IterableSeq, IndexedSeq);function IterableSeq(iterable){this._iterable = iterable;this.size = iterable.length || iterable.size;}IterableSeq.prototype.__iterateUncached = function(fn, reverse){if(reverse){return this.cacheResult().__iterate(fn, reverse);}var iterable=this._iterable;var iterator=getIterator(iterable);var iterations=0;if(isIterator(iterator)){var step;while(!(step = iterator.next()).done) {if(fn(step.value, iterations++, this) === false){break;}}}return iterations;};IterableSeq.prototype.__iteratorUncached = function(type, reverse){if(reverse){return this.cacheResult().__iterator(type, reverse);}var iterable=this._iterable;var iterator=getIterator(iterable);if(!isIterator(iterator)){return new src_Iterator__Iterator(iteratorDone);}var iterations=0;return new src_Iterator__Iterator(function(){var step=iterator.next();return step.done?step:iteratorValue(type, iterations++, step.value);});};createClass(IteratorSeq, IndexedSeq);function IteratorSeq(iterator){this._iterator = iterator;this._iteratorCache = [];}IteratorSeq.prototype.__iterateUncached = function(fn, reverse){if(reverse){return this.cacheResult().__iterate(fn, reverse);}var iterator=this._iterator;var cache=this._iteratorCache;var iterations=0;while(iterations < cache.length) {if(fn(cache[iterations], iterations++, this) === false){return iterations;}}var step;while(!(step = iterator.next()).done) {var val=step.value;cache[iterations] = val;if(fn(val, iterations++, this) === false){break;}}return iterations;};IteratorSeq.prototype.__iteratorUncached = function(type, reverse){if(reverse){return this.cacheResult().__iterator(type, reverse);}var iterator=this._iterator;var cache=this._iteratorCache;var iterations=0;return new src_Iterator__Iterator(function(){if(iterations >= cache.length){var step=iterator.next();if(step.done){return step;}cache[iterations] = step.value;}return iteratorValue(type, iterations, cache[iterations++]);});};function isSeq(maybeSeq){return !!(maybeSeq && maybeSeq[IS_SEQ_SENTINEL]);}var EMPTY_SEQ;function emptySequence(){return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));}function keyedSeqFromValue(value){var seq=Array.isArray(value)?new ArraySeq(value).fromEntrySeq():isIterator(value)?new IteratorSeq(value).fromEntrySeq():hasIterator(value)?new IterableSeq(value).fromEntrySeq():typeof value === 'object'?new ObjectSeq(value):undefined;if(!seq){throw new TypeError('Expected Array or iterable object of [k, v] entries, ' + 'or keyed object: ' + value);}return seq;}function indexedSeqFromValue(value){var seq=maybeIndexedSeqFromValue(value);if(!seq){throw new TypeError('Expected Array or iterable object of values: ' + value);}return seq;}function seqFromValue(value){var seq=maybeIndexedSeqFromValue(value) || typeof value === 'object' && new ObjectSeq(value);if(!seq){throw new TypeError('Expected Array or iterable object of values, or keyed object: ' + value);}return seq;}function maybeIndexedSeqFromValue(value){return isArrayLike(value)?new ArraySeq(value):isIterator(value)?new IteratorSeq(value):hasIterator(value)?new IterableSeq(value):undefined;}function seqIterate(seq, fn, reverse, useKeys){var cache=seq._cache;if(cache){var maxIndex=cache.length - 1;for(var ii=0; ii <= maxIndex; ii++) {var entry=cache[reverse?maxIndex - ii:ii];if(fn(entry[1], useKeys?entry[0]:ii, seq) === false){return ii + 1;}}return ii;}return seq.__iterateUncached(fn, reverse);}function seqIterator(seq, type, reverse, useKeys){var cache=seq._cache;if(cache){var maxIndex=cache.length - 1;var ii=0;return new src_Iterator__Iterator(function(){var entry=cache[reverse?maxIndex - ii:ii];return ii++ > maxIndex?iteratorDone():iteratorValue(type, useKeys?entry[0]:ii - 1, entry[1]);});}return seq.__iteratorUncached(type, reverse);}createClass(Collection, Iterable);function Collection(){throw TypeError('Abstract');}createClass(KeyedCollection, Collection);function KeyedCollection(){}createClass(IndexedCollection, Collection);function IndexedCollection(){}createClass(SetCollection, Collection);function SetCollection(){}Collection.Keyed = KeyedCollection;Collection.Indexed = IndexedCollection;Collection.Set = SetCollection;function is(valueA, valueB){if(valueA === valueB || valueA !== valueA && valueB !== valueB){return true;}if(!valueA || !valueB){return false;}if(typeof valueA.valueOf === 'function' && typeof valueB.valueOf === 'function'){valueA = valueA.valueOf();valueB = valueB.valueOf();if(valueA === valueB || valueA !== valueA && valueB !== valueB){return true;}if(!valueA || !valueB){return false;}}if(typeof valueA.equals === 'function' && typeof valueB.equals === 'function' && valueA.equals(valueB)){return true;}return false;}function fromJS(json, converter){return converter?fromJSWith(converter, json, '', {'':json}):fromJSDefault(json);}function fromJSWith(converter, json, key, parentJSON){if(Array.isArray(json)){return converter.call(parentJSON, key, IndexedSeq(json).map(function(v, k){return fromJSWith(converter, v, k, json);}));}if(isPlainObj(json)){return converter.call(parentJSON, key, KeyedSeq(json).map(function(v, k){return fromJSWith(converter, v, k, json);}));}return json;}function fromJSDefault(json){if(Array.isArray(json)){return IndexedSeq(json).map(fromJSDefault).toList();}if(isPlainObj(json)){return KeyedSeq(json).map(fromJSDefault).toMap();}return json;}function isPlainObj(value){return value && (value.constructor === Object || value.constructor === undefined);}var src_Math__imul=typeof Math.imul === 'function' && Math.imul(4294967295, 2) === -2?Math.imul:function imul(a, b){a = a | 0;b = b | 0;var c=a & 65535;var d=b & 65535;return c * d + ((a >>> 16) * d + c * (b >>> 16) << 16 >>> 0) | 0;};function smi(i32){return i32 >>> 1 & 1073741824 | i32 & 3221225471;}function hash(o){if(o === false || o === null || o === undefined){return 0;}if(typeof o.valueOf === 'function'){o = o.valueOf();if(o === false || o === null || o === undefined){return 0;}}if(o === true){return 1;}var type=typeof o;if(type === 'number'){var h=o | 0;if(h !== o){h ^= o * 4294967295;}while(o > 4294967295) {o /= 4294967295;h ^= o;}return smi(h);}if(type === 'string'){return o.length > STRING_HASH_CACHE_MIN_STRLEN?cachedHashString(o):hashString(o);}if(typeof o.hashCode === 'function'){return o.hashCode();}return hashJSObj(o);}function cachedHashString(string){var hash=stringHashCache[string];if(hash === undefined){hash = hashString(string);if(STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE){STRING_HASH_CACHE_SIZE = 0;stringHashCache = {};}STRING_HASH_CACHE_SIZE++;stringHashCache[string] = hash;}return hash;}function hashString(string){var hash=0;for(var ii=0; ii < string.length; ii++) {hash = 31 * hash + string.charCodeAt(ii) | 0;}return smi(hash);}function hashJSObj(obj){var hash;if(usingWeakMap){hash = weakMap.get(obj);if(hash !== undefined){return hash;}}hash = obj[UID_HASH_KEY];if(hash !== undefined){return hash;}if(!canDefineProperty){hash = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];if(hash !== undefined){return hash;}hash = getIENodeHash(obj);if(hash !== undefined){return hash;}}hash = ++objHashUID;if(objHashUID & 1073741824){objHashUID = 0;}if(usingWeakMap){weakMap.set(obj, hash);}else if(isExtensible !== undefined && isExtensible(obj) === false){throw new Error('Non-extensible objects are not allowed as keys.');}else if(canDefineProperty){Object.defineProperty(obj, UID_HASH_KEY, {'enumerable':false, 'configurable':false, 'writable':false, 'value':hash});}else if(obj.propertyIsEnumerable !== undefined && obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable){obj.propertyIsEnumerable = function(){return this.constructor.prototype.propertyIsEnumerable.apply(this, arguments);};obj.propertyIsEnumerable[UID_HASH_KEY] = hash;}else if(obj.nodeType !== undefined){obj[UID_HASH_KEY] = hash;}else {throw new Error('Unable to set a non-enumerable property on object.');}return hash;}var isExtensible=Object.isExtensible;var canDefineProperty=(function(){try{Object.defineProperty({}, '@', {});return true;}catch(e) {return false;}})();function getIENodeHash(node){if(node && node.nodeType > 0){switch(node.nodeType){case 1:return node.uniqueID;case 9:return node.documentElement && node.documentElement.uniqueID;}}}var usingWeakMap=typeof WeakMap === 'function';var weakMap;if(usingWeakMap){weakMap = new WeakMap();}var objHashUID=0;var UID_HASH_KEY='__immutablehash__';if(typeof Symbol === 'function'){UID_HASH_KEY = Symbol(UID_HASH_KEY);}var STRING_HASH_CACHE_MIN_STRLEN=16;var STRING_HASH_CACHE_MAX_SIZE=255;var STRING_HASH_CACHE_SIZE=0;var stringHashCache={};function invariant(condition, error){if(!condition)throw new Error(error);}function assertNotInfinite(size){invariant(size !== Infinity, 'Cannot perform this action with an infinite size.');}createClass(ToKeyedSequence, KeyedSeq);function ToKeyedSequence(indexed, useKeys){this._iter = indexed;this._useKeys = useKeys;this.size = indexed.size;}ToKeyedSequence.prototype.get = function(key, notSetValue){return this._iter.get(key, notSetValue);};ToKeyedSequence.prototype.has = function(key){return this._iter.has(key);};ToKeyedSequence.prototype.valueSeq = function(){return this._iter.valueSeq();};ToKeyedSequence.prototype.reverse = function(){var this$0=this;var reversedSequence=reverseFactory(this, true);if(!this._useKeys){reversedSequence.valueSeq = function(){return this$0._iter.toSeq().reverse();};}return reversedSequence;};ToKeyedSequence.prototype.map = function(mapper, context){var this$0=this;var mappedSequence=mapFactory(this, mapper, context);if(!this._useKeys){mappedSequence.valueSeq = function(){return this$0._iter.toSeq().map(mapper, context);};}return mappedSequence;};ToKeyedSequence.prototype.__iterate = function(fn, reverse){var this$0=this;var ii;return this._iter.__iterate(this._useKeys?function(v, k){return fn(v, k, this$0);}:(ii = reverse?resolveSize(this):0, function(v){return fn(v, reverse?--ii:ii++, this$0);}), reverse);};ToKeyedSequence.prototype.__iterator = function(type, reverse){if(this._useKeys){return this._iter.__iterator(type, reverse);}var iterator=this._iter.__iterator(ITERATE_VALUES, reverse);var ii=reverse?resolveSize(this):0;return new src_Iterator__Iterator(function(){var step=iterator.next();return step.done?step:iteratorValue(type, reverse?--ii:ii++, step.value, step);});};ToKeyedSequence.prototype[IS_ORDERED_SENTINEL] = true;createClass(ToIndexedSequence, IndexedSeq);function ToIndexedSequence(iter){this._iter = iter;this.size = iter.size;}ToIndexedSequence.prototype.includes = function(value){return this._iter.includes(value);};ToIndexedSequence.prototype.__iterate = function(fn, reverse){var this$0=this;var iterations=0;return this._iter.__iterate(function(v){return fn(v, iterations++, this$0);}, reverse);};ToIndexedSequence.prototype.__iterator = function(type, reverse){var iterator=this._iter.__iterator(ITERATE_VALUES, reverse);var iterations=0;return new src_Iterator__Iterator(function(){var step=iterator.next();return step.done?step:iteratorValue(type, iterations++, step.value, step);});};createClass(ToSetSequence, SetSeq);function ToSetSequence(iter){this._iter = iter;this.size = iter.size;}ToSetSequence.prototype.has = function(key){return this._iter.includes(key);};ToSetSequence.prototype.__iterate = function(fn, reverse){var this$0=this;return this._iter.__iterate(function(v){return fn(v, v, this$0);}, reverse);};ToSetSequence.prototype.__iterator = function(type, reverse){var iterator=this._iter.__iterator(ITERATE_VALUES, reverse);return new src_Iterator__Iterator(function(){var step=iterator.next();return step.done?step:iteratorValue(type, step.value, step.value, step);});};createClass(FromEntriesSequence, KeyedSeq);function FromEntriesSequence(entries){this._iter = entries;this.size = entries.size;}FromEntriesSequence.prototype.entrySeq = function(){return this._iter.toSeq();};FromEntriesSequence.prototype.__iterate = function(fn, reverse){var this$0=this;return this._iter.__iterate(function(entry){if(entry){validateEntry(entry);var indexedIterable=isIterable(entry);return fn(indexedIterable?entry.get(1):entry[1], indexedIterable?entry.get(0):entry[0], this$0);}}, reverse);};FromEntriesSequence.prototype.__iterator = function(type, reverse){var iterator=this._iter.__iterator(ITERATE_VALUES, reverse);return new src_Iterator__Iterator(function(){while(true) {var step=iterator.next();if(step.done){return step;}var entry=step.value;if(entry){validateEntry(entry);var indexedIterable=isIterable(entry);return iteratorValue(type, indexedIterable?entry.get(0):entry[0], indexedIterable?entry.get(1):entry[1], step);}}});};ToIndexedSequence.prototype.cacheResult = ToKeyedSequence.prototype.cacheResult = ToSetSequence.prototype.cacheResult = FromEntriesSequence.prototype.cacheResult = cacheResultThrough;function flipFactory(iterable){var flipSequence=makeSequence(iterable);flipSequence._iter = iterable;flipSequence.size = iterable.size;flipSequence.flip = function(){return iterable;};flipSequence.reverse = function(){var reversedSequence=iterable.reverse.apply(this);reversedSequence.flip = function(){return iterable.reverse();};return reversedSequence;};flipSequence.has = function(key){return iterable.includes(key);};flipSequence.includes = function(key){return iterable.has(key);};flipSequence.cacheResult = cacheResultThrough;flipSequence.__iterateUncached = function(fn, reverse){var this$0=this;return iterable.__iterate(function(v, k){return fn(k, v, this$0) !== false;}, reverse);};flipSequence.__iteratorUncached = function(type, reverse){if(type === ITERATE_ENTRIES){var iterator=iterable.__iterator(type, reverse);return new src_Iterator__Iterator(function(){var step=iterator.next();if(!step.done){var k=step.value[0];step.value[0] = step.value[1];step.value[1] = k;}return step;});}return iterable.__iterator(type === ITERATE_VALUES?ITERATE_KEYS:ITERATE_VALUES, reverse);};return flipSequence;}function mapFactory(iterable, mapper, context){var mappedSequence=makeSequence(iterable);mappedSequence.size = iterable.size;mappedSequence.has = function(key){return iterable.has(key);};mappedSequence.get = function(key, notSetValue){var v=iterable.get(key, NOT_SET);return v === NOT_SET?notSetValue:mapper.call(context, v, key, iterable);};mappedSequence.__iterateUncached = function(fn, reverse){var this$0=this;return iterable.__iterate(function(v, k, c){return fn(mapper.call(context, v, k, c), k, this$0) !== false;}, reverse);};mappedSequence.__iteratorUncached = function(type, reverse){var iterator=iterable.__iterator(ITERATE_ENTRIES, reverse);return new src_Iterator__Iterator(function(){var step=iterator.next();if(step.done){return step;}var entry=step.value;var key=entry[0];return iteratorValue(type, key, mapper.call(context, entry[1], key, iterable), step);});};return mappedSequence;}function reverseFactory(iterable, useKeys){var reversedSequence=makeSequence(iterable);reversedSequence._iter = iterable;reversedSequence.size = iterable.size;reversedSequence.reverse = function(){return iterable;};if(iterable.flip){reversedSequence.flip = function(){var flipSequence=flipFactory(iterable);flipSequence.reverse = function(){return iterable.flip();};return flipSequence;};}reversedSequence.get = function(key, notSetValue){return iterable.get(useKeys?key:-1 - key, notSetValue);};reversedSequence.has = function(key){return iterable.has(useKeys?key:-1 - key);};reversedSequence.includes = function(value){return iterable.includes(value);};reversedSequence.cacheResult = cacheResultThrough;reversedSequence.__iterate = function(fn, reverse){var this$0=this;return iterable.__iterate(function(v, k){return fn(v, k, this$0);}, !reverse);};reversedSequence.__iterator = function(type, reverse){return iterable.__iterator(type, !reverse);};return reversedSequence;}function filterFactory(iterable, predicate, context, useKeys){var filterSequence=makeSequence(iterable);if(useKeys){filterSequence.has = function(key){var v=iterable.get(key, NOT_SET);return v !== NOT_SET && !!predicate.call(context, v, key, iterable);};filterSequence.get = function(key, notSetValue){var v=iterable.get(key, NOT_SET);return v !== NOT_SET && predicate.call(context, v, key, iterable)?v:notSetValue;};}filterSequence.__iterateUncached = function(fn, reverse){var this$0=this;var iterations=0;iterable.__iterate(function(v, k, c){if(predicate.call(context, v, k, c)){iterations++;return fn(v, useKeys?k:iterations - 1, this$0);}}, reverse);return iterations;};filterSequence.__iteratorUncached = function(type, reverse){var iterator=iterable.__iterator(ITERATE_ENTRIES, reverse);var iterations=0;return new src_Iterator__Iterator(function(){while(true) {var step=iterator.next();if(step.done){return step;}var entry=step.value;var key=entry[0];var value=entry[1];if(predicate.call(context, value, key, iterable)){return iteratorValue(type, useKeys?key:iterations++, value, step);}}});};return filterSequence;}function countByFactory(iterable, grouper, context){var groups=src_Map__Map().asMutable();iterable.__iterate(function(v, k){groups.update(grouper.call(context, v, k, iterable), 0, function(a){return a + 1;});});return groups.asImmutable();}function groupByFactory(iterable, grouper, context){var isKeyedIter=isKeyed(iterable);var groups=(isOrdered(iterable)?OrderedMap():src_Map__Map()).asMutable();iterable.__iterate(function(v, k){groups.update(grouper.call(context, v, k, iterable), function(a){return (a = a || [], a.push(isKeyedIter?[k, v]:v), a);});});var coerce=iterableClass(iterable);return groups.map(function(arr){return reify(iterable, coerce(arr));});}function sliceFactory(_x, _x2, _x3, _x4){var _again=true;_function: while(_again) {var iterable=_x, begin=_x2, end=_x3, useKeys=_x4;originalSize = resolvedBegin = resolvedEnd = resolvedSize = sliceSize = sliceSeq = undefined;_again = false;var originalSize=iterable.size;if(wholeSlice(begin, end, originalSize)){return iterable;}var resolvedBegin=resolveBegin(begin, originalSize);var resolvedEnd=resolveEnd(end, originalSize);if(resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd){_x = iterable.toSeq().cacheResult();_x2 = begin;_x3 = end;_x4 = useKeys;_again = true;continue _function;}var resolvedSize=resolvedEnd - resolvedBegin;var sliceSize;if(resolvedSize === resolvedSize){sliceSize = resolvedSize < 0?0:resolvedSize;}var sliceSeq=makeSequence(iterable);sliceSeq.size = sliceSize;if(!useKeys && isSeq(iterable) && sliceSize >= 0){sliceSeq.get = function(index, notSetValue){index = wrapIndex(this, index);return index >= 0 && index < sliceSize?iterable.get(index + resolvedBegin, notSetValue):notSetValue;};}sliceSeq.__iterateUncached = function(fn, reverse){var this$0=this;if(sliceSize === 0){return 0;}if(reverse){return this.cacheResult().__iterate(fn, reverse);}var skipped=0;var isSkipping=true;var iterations=0;iterable.__iterate(function(v, k){if(!(isSkipping && (isSkipping = skipped++ < resolvedBegin))){iterations++;return fn(v, useKeys?k:iterations - 1, this$0) !== false && iterations !== sliceSize;}});return iterations;};sliceSeq.__iteratorUncached = function(type, reverse){if(sliceSize !== 0 && reverse){return this.cacheResult().__iterator(type, reverse);}var iterator=sliceSize !== 0 && iterable.__iterator(type, reverse);var skipped=0;var iterations=0;return new src_Iterator__Iterator(function(){while(skipped++ < resolvedBegin) {iterator.next();}if(++iterations > sliceSize){return iteratorDone();}var step=iterator.next();if(useKeys || type === ITERATE_VALUES){return step;}else if(type === ITERATE_KEYS){return iteratorValue(type, iterations - 1, undefined, step);}else {return iteratorValue(type, iterations - 1, step.value[1], step);}});};return sliceSeq;}}function takeWhileFactory(iterable, predicate, context){var takeSequence=makeSequence(iterable);takeSequence.__iterateUncached = function(fn, reverse){var this$0=this;if(reverse){return this.cacheResult().__iterate(fn, reverse);}var iterations=0;iterable.__iterate(function(v, k, c){return predicate.call(context, v, k, c) && ++iterations && fn(v, k, this$0);});return iterations;};takeSequence.__iteratorUncached = function(type, reverse){var this$0=this;if(reverse){return this.cacheResult().__iterator(type, reverse);}var iterator=iterable.__iterator(ITERATE_ENTRIES, reverse);var iterating=true;return new src_Iterator__Iterator(function(){if(!iterating){return iteratorDone();}var step=iterator.next();if(step.done){return step;}var entry=step.value;var k=entry[0];var v=entry[1];if(!predicate.call(context, v, k, this$0)){iterating = false;return iteratorDone();}return type === ITERATE_ENTRIES?step:iteratorValue(type, k, v, step);});};return takeSequence;}function skipWhileFactory(iterable, predicate, context, useKeys){var skipSequence=makeSequence(iterable);skipSequence.__iterateUncached = function(fn, reverse){var this$0=this;if(reverse){return this.cacheResult().__iterate(fn, reverse);}var isSkipping=true;var iterations=0;iterable.__iterate(function(v, k, c){if(!(isSkipping && (isSkipping = predicate.call(context, v, k, c)))){iterations++;return fn(v, useKeys?k:iterations - 1, this$0);}});return iterations;};skipSequence.__iteratorUncached = function(type, reverse){var this$0=this;if(reverse){return this.cacheResult().__iterator(type, reverse);}var iterator=iterable.__iterator(ITERATE_ENTRIES, reverse);var skipping=true;var iterations=0;return new src_Iterator__Iterator(function(){var step, k, v;do {step = iterator.next();if(step.done){if(useKeys || type === ITERATE_VALUES){return step;}else if(type === ITERATE_KEYS){return iteratorValue(type, iterations++, undefined, step);}else {return iteratorValue(type, iterations++, step.value[1], step);}}var entry=step.value;k = entry[0];v = entry[1];skipping && (skipping = predicate.call(context, v, k, this$0));}while(skipping);return type === ITERATE_ENTRIES?step:iteratorValue(type, k, v, step);});};return skipSequence;}function concatFactory(iterable, values){var isKeyedIterable=isKeyed(iterable);var iters=[iterable].concat(values).map(function(v){if(!isIterable(v)){v = isKeyedIterable?keyedSeqFromValue(v):indexedSeqFromValue(Array.isArray(v)?v:[v]);}else if(isKeyedIterable){v = KeyedIterable(v);}return v;}).filter(function(v){return v.size !== 0;});if(iters.length === 0){return iterable;}if(iters.length === 1){var singleton=iters[0];if(singleton === iterable || isKeyedIterable && isKeyed(singleton) || isIndexed(iterable) && isIndexed(singleton)){return singleton;}}var concatSeq=new ArraySeq(iters);if(isKeyedIterable){concatSeq = concatSeq.toKeyedSeq();}else if(!isIndexed(iterable)){concatSeq = concatSeq.toSetSeq();}concatSeq = concatSeq.flatten(true);concatSeq.size = iters.reduce(function(sum, seq){if(sum !== undefined){var size=seq.size;if(size !== undefined){return sum + size;}}}, 0);return concatSeq;}function flattenFactory(iterable, depth, useKeys){var flatSequence=makeSequence(iterable);flatSequence.__iterateUncached = function(fn, reverse){var iterations=0;var stopped=false;function flatDeep(iter, currentDepth){var this$0=this;iter.__iterate(function(v, k){if((!depth || currentDepth < depth) && isIterable(v)){flatDeep(v, currentDepth + 1);}else if(fn(v, useKeys?k:iterations++, this$0) === false){stopped = true;}return !stopped;}, reverse);}flatDeep(iterable, 0);return iterations;};flatSequence.__iteratorUncached = function(type, reverse){var iterator=iterable.__iterator(type, reverse);var stack=[];var iterations=0;return new src_Iterator__Iterator(function(){while(iterator) {var step=iterator.next();if(step.done !== false){iterator = stack.pop();continue;}var v=step.value;if(type === ITERATE_ENTRIES){v = v[1];}if((!depth || stack.length < depth) && isIterable(v)){stack.push(iterator);iterator = v.__iterator(type, reverse);}else {return useKeys?step:iteratorValue(type, iterations++, v, step);}}return iteratorDone();});};return flatSequence;}function flatMapFactory(iterable, mapper, context){var coerce=iterableClass(iterable);return iterable.toSeq().map(function(v, k){return coerce(mapper.call(context, v, k, iterable));}).flatten(true);}function interposeFactory(iterable, separator){var interposedSequence=makeSequence(iterable);interposedSequence.size = iterable.size && iterable.size * 2 - 1;interposedSequence.__iterateUncached = function(fn, reverse){var this$0=this;var iterations=0;iterable.__iterate(function(v, k){return (!iterations || fn(separator, iterations++, this$0) !== false) && fn(v, iterations++, this$0) !== false;}, reverse);return iterations;};interposedSequence.__iteratorUncached = function(type, reverse){var iterator=iterable.__iterator(ITERATE_VALUES, reverse);var iterations=0;var step;return new src_Iterator__Iterator(function(){if(!step || iterations % 2){step = iterator.next();if(step.done){return step;}}return iterations % 2?iteratorValue(type, iterations++, separator):iteratorValue(type, iterations++, step.value, step);});};return interposedSequence;}function sortFactory(iterable, comparator, mapper){if(!comparator){comparator = defaultComparator;}var isKeyedIterable=isKeyed(iterable);var index=0;var entries=iterable.toSeq().map(function(v, k){return [k, v, index++, mapper?mapper(v, k, iterable):v];}).toArray();entries.sort(function(a, b){return comparator(a[3], b[3]) || a[2] - b[2];}).forEach(isKeyedIterable?function(v, i){entries[i].length = 2;}:function(v, i){entries[i] = v[1];});return isKeyedIterable?KeyedSeq(entries):isIndexed(iterable)?IndexedSeq(entries):SetSeq(entries);}function maxFactory(iterable, comparator, mapper){if(!comparator){comparator = defaultComparator;}if(mapper){var entry=iterable.toSeq().map(function(v, k){return [v, mapper(v, k, iterable)];}).reduce(function(a, b){return maxCompare(comparator, a[1], b[1])?b:a;});return entry && entry[0];}else {return iterable.reduce(function(a, b){return maxCompare(comparator, a, b)?b:a;});}}function maxCompare(comparator, a, b){var comp=comparator(b, a);return comp === 0 && b !== a && (b === undefined || b === null || b !== b) || comp > 0;}function zipWithFactory(keyIter, zipper, iters){var zipSequence=makeSequence(keyIter);zipSequence.size = new ArraySeq(iters).map(function(i){return i.size;}).min();zipSequence.__iterate = function(fn, reverse){var iterator=this.__iterator(ITERATE_VALUES, reverse);var step;var iterations=0;while(!(step = iterator.next()).done) {if(fn(step.value, iterations++, this) === false){break;}}return iterations;};zipSequence.__iteratorUncached = function(type, reverse){var iterators=iters.map(function(i){return (i = Iterable(i), getIterator(reverse?i.reverse():i));});var iterations=0;var isDone=false;return new src_Iterator__Iterator(function(){var steps;if(!isDone){steps = iterators.map(function(i){return i.next();});isDone = steps.some(function(s){return s.done;});}if(isDone){return iteratorDone();}return iteratorValue(type, iterations++, zipper.apply(null, steps.map(function(s){return s.value;})));});};return zipSequence;}function reify(iter, seq){return isSeq(iter)?seq:iter.constructor(seq);}function validateEntry(entry){if(entry !== Object(entry)){throw new TypeError('Expected [K, V] tuple: ' + entry);}}function resolveSize(iter){assertNotInfinite(iter.size);return ensureSize(iter);}function iterableClass(iterable){return isKeyed(iterable)?KeyedIterable:isIndexed(iterable)?IndexedIterable:SetIterable;}function makeSequence(iterable){return Object.create((isKeyed(iterable)?KeyedSeq:isIndexed(iterable)?IndexedSeq:SetSeq).prototype);}function cacheResultThrough(){if(this._iter.cacheResult){this._iter.cacheResult();this.size = this._iter.size;return this;}else {return Seq.prototype.cacheResult.call(this);}}function defaultComparator(a, b){return a > b?1:a < b?-1:0;}function forceIterator(keyPath){var iter=getIterator(keyPath);if(!iter){if(!isArrayLike(keyPath)){throw new TypeError('Expected iterable or array-like: ' + keyPath);}iter = getIterator(Iterable(keyPath));}return iter;}createClass(src_Map__Map, KeyedCollection);function src_Map__Map(value){return value === null || value === undefined?emptyMap():isMap(value)?value:emptyMap().withMutations(function(map){var iter=KeyedIterable(value);assertNotInfinite(iter.size);iter.forEach(function(v, k){return map.set(k, v);});});}src_Map__Map.prototype.toString = function(){return this.__toString('Map {', '}');};src_Map__Map.prototype.get = function(k, notSetValue){return this._root?this._root.get(0, undefined, k, notSetValue):notSetValue;};src_Map__Map.prototype.set = function(k, v){return updateMap(this, k, v);};src_Map__Map.prototype.setIn = function(keyPath, v){return this.updateIn(keyPath, NOT_SET, function(){return v;});};src_Map__Map.prototype.remove = function(k){return updateMap(this, k, NOT_SET);};src_Map__Map.prototype.deleteIn = function(keyPath){return this.updateIn(keyPath, function(){return NOT_SET;});};src_Map__Map.prototype.update = function(k, notSetValue, updater){return arguments.length === 1?k(this):this.updateIn([k], notSetValue, updater);};src_Map__Map.prototype.updateIn = function(keyPath, notSetValue, updater){if(!updater){updater = notSetValue;notSetValue = undefined;}var updatedValue=updateInDeepMap(this, forceIterator(keyPath), notSetValue, updater);return updatedValue === NOT_SET?undefined:updatedValue;};src_Map__Map.prototype.clear = function(){if(this.size === 0){return this;}if(this.__ownerID){this.size = 0;this._root = null;this.__hash = undefined;this.__altered = true;return this;}return emptyMap();};src_Map__Map.prototype.merge = function(){return mergeIntoMapWith(this, undefined, arguments);};src_Map__Map.prototype.mergeWith = function(merger){var iters=SLICE$0.call(arguments, 1);return mergeIntoMapWith(this, merger, iters);};src_Map__Map.prototype.mergeIn = function(keyPath){var iters=SLICE$0.call(arguments, 1);return this.updateIn(keyPath, emptyMap(), function(m){return typeof m.merge === 'function'?m.merge.apply(m, iters):iters[iters.length - 1];});};src_Map__Map.prototype.mergeDeep = function(){return mergeIntoMapWith(this, deepMerger(undefined), arguments);};src_Map__Map.prototype.mergeDeepWith = function(merger){var iters=SLICE$0.call(arguments, 1);return mergeIntoMapWith(this, deepMerger(merger), iters);};src_Map__Map.prototype.mergeDeepIn = function(keyPath){var iters=SLICE$0.call(arguments, 1);return this.updateIn(keyPath, emptyMap(), function(m){return typeof m.mergeDeep === 'function'?m.mergeDeep.apply(m, iters):iters[iters.length - 1];});};src_Map__Map.prototype.sort = function(comparator){return OrderedMap(sortFactory(this, comparator));};src_Map__Map.prototype.sortBy = function(mapper, comparator){return OrderedMap(sortFactory(this, comparator, mapper));};src_Map__Map.prototype.withMutations = function(fn){var mutable=this.asMutable();fn(mutable);return mutable.wasAltered()?mutable.__ensureOwner(this.__ownerID):this;};src_Map__Map.prototype.asMutable = function(){return this.__ownerID?this:this.__ensureOwner(new OwnerID());};src_Map__Map.prototype.asImmutable = function(){return this.__ensureOwner();};src_Map__Map.prototype.wasAltered = function(){return this.__altered;};src_Map__Map.prototype.__iterator = function(type, reverse){return new MapIterator(this, type, reverse);};src_Map__Map.prototype.__iterate = function(fn, reverse){var this$0=this;var iterations=0;this._root && this._root.iterate(function(entry){iterations++;return fn(entry[1], entry[0], this$0);}, reverse);return iterations;};src_Map__Map.prototype.__ensureOwner = function(ownerID){if(ownerID === this.__ownerID){return this;}if(!ownerID){this.__ownerID = ownerID;this.__altered = false;return this;}return makeMap(this.size, this._root, ownerID, this.__hash);};function isMap(maybeMap){return !!(maybeMap && maybeMap[IS_MAP_SENTINEL]);}src_Map__Map.isMap = isMap;var IS_MAP_SENTINEL='@@__IMMUTABLE_MAP__@@';var MapPrototype=src_Map__Map.prototype;MapPrototype[IS_MAP_SENTINEL] = true;MapPrototype[DELETE] = MapPrototype.remove;MapPrototype.removeIn = MapPrototype.deleteIn;function ArrayMapNode(ownerID, entries){this.ownerID = ownerID;this.entries = entries;}ArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue){var entries=this.entries;for(var ii=0, len=entries.length; ii < len; ii++) {if(is(key, entries[ii][0])){return entries[ii][1];}}return notSetValue;};ArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter){var removed=value === NOT_SET;var entries=this.entries;var idx=0;for(var len=entries.length; idx < len; idx++) {if(is(key, entries[idx][0])){break;}}var exists=idx < len;if(exists?entries[idx][1] === value:removed){return this;}SetRef(didAlter);(removed || !exists) && SetRef(didChangeSize);if(removed && entries.length === 1){return;}if(!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE){return createNodes(ownerID, entries, key, value);}var isEditable=ownerID && ownerID === this.ownerID;var newEntries=isEditable?entries:arrCopy(entries);if(exists){if(removed){idx === len - 1?newEntries.pop():newEntries[idx] = newEntries.pop();}else {newEntries[idx] = [key, value];}}else {newEntries.push([key, value]);}if(isEditable){this.entries = newEntries;return this;}return new ArrayMapNode(ownerID, newEntries);};function BitmapIndexedNode(ownerID, bitmap, nodes){this.ownerID = ownerID;this.bitmap = bitmap;this.nodes = nodes;}BitmapIndexedNode.prototype.get = function(shift, keyHash, key, notSetValue){if(keyHash === undefined){keyHash = hash(key);}var bit=1 << ((shift === 0?keyHash:keyHash >>> shift) & MASK);var bitmap=this.bitmap;return (bitmap & bit) === 0?notSetValue:this.nodes[popCount(bitmap & bit - 1)].get(shift + SHIFT, keyHash, key, notSetValue);};BitmapIndexedNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter){if(keyHash === undefined){keyHash = hash(key);}var keyHashFrag=(shift === 0?keyHash:keyHash >>> shift) & MASK;var bit=1 << keyHashFrag;var bitmap=this.bitmap;var exists=(bitmap & bit) !== 0;if(!exists && value === NOT_SET){return this;}var idx=popCount(bitmap & bit - 1);var nodes=this.nodes;var node=exists?nodes[idx]:undefined;var newNode=updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);if(newNode === node){return this;}if(!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE){return expandNodes(ownerID, nodes, bitmap, keyHashFrag, newNode);}if(exists && !newNode && nodes.length === 2 && isLeafNode(nodes[idx ^ 1])){return nodes[idx ^ 1];}if(exists && newNode && nodes.length === 1 && isLeafNode(newNode)){return newNode;}var isEditable=ownerID && ownerID === this.ownerID;var newBitmap=exists?newNode?bitmap:bitmap ^ bit:bitmap | bit;var newNodes=exists?newNode?setIn(nodes, idx, newNode, isEditable):spliceOut(nodes, idx, isEditable):spliceIn(nodes, idx, newNode, isEditable);if(isEditable){this.bitmap = newBitmap;this.nodes = newNodes;return this;}return new BitmapIndexedNode(ownerID, newBitmap, newNodes);};function HashArrayMapNode(ownerID, count, nodes){this.ownerID = ownerID;this.count = count;this.nodes = nodes;}HashArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue){if(keyHash === undefined){keyHash = hash(key);}var idx=(shift === 0?keyHash:keyHash >>> shift) & MASK;var node=this.nodes[idx];return node?node.get(shift + SHIFT, keyHash, key, notSetValue):notSetValue;};HashArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter){if(keyHash === undefined){keyHash = hash(key);}var idx=(shift === 0?keyHash:keyHash >>> shift) & MASK;var removed=value === NOT_SET;var nodes=this.nodes;var node=nodes[idx];if(removed && !node){return this;}var newNode=updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);if(newNode === node){return this;}var newCount=this.count;if(!node){newCount++;}else if(!newNode){newCount--;if(newCount < MIN_HASH_ARRAY_MAP_SIZE){return packNodes(ownerID, nodes, newCount, idx);}}var isEditable=ownerID && ownerID === this.ownerID;var newNodes=setIn(nodes, idx, newNode, isEditable);if(isEditable){this.count = newCount;this.nodes = newNodes;return this;}return new HashArrayMapNode(ownerID, newCount, newNodes);};function HashCollisionNode(ownerID, keyHash, entries){this.ownerID = ownerID;this.keyHash = keyHash;this.entries = entries;}HashCollisionNode.prototype.get = function(shift, keyHash, key, notSetValue){var entries=this.entries;for(var ii=0, len=entries.length; ii < len; ii++) {if(is(key, entries[ii][0])){return entries[ii][1];}}return notSetValue;};HashCollisionNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter){if(keyHash === undefined){keyHash = hash(key);}var removed=value === NOT_SET;if(keyHash !== this.keyHash){if(removed){return this;}SetRef(didAlter);SetRef(didChangeSize);return mergeIntoNode(this, ownerID, shift, keyHash, [key, value]);}var entries=this.entries;var idx=0;for(var len=entries.length; idx < len; idx++) {if(is(key, entries[idx][0])){break;}}var exists=idx < len;if(exists?entries[idx][1] === value:removed){return this;}SetRef(didAlter);(removed || !exists) && SetRef(didChangeSize);if(removed && len === 2){return new ValueNode(ownerID, this.keyHash, entries[idx ^ 1]);}var isEditable=ownerID && ownerID === this.ownerID;var newEntries=isEditable?entries:arrCopy(entries);if(exists){if(removed){idx === len - 1?newEntries.pop():newEntries[idx] = newEntries.pop();}else {newEntries[idx] = [key, value];}}else {newEntries.push([key, value]);}if(isEditable){this.entries = newEntries;return this;}return new HashCollisionNode(ownerID, this.keyHash, newEntries);};function ValueNode(ownerID, keyHash, entry){this.ownerID = ownerID;this.keyHash = keyHash;this.entry = entry;}ValueNode.prototype.get = function(shift, keyHash, key, notSetValue){return is(key, this.entry[0])?this.entry[1]:notSetValue;};ValueNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter){var removed=value === NOT_SET;var keyMatch=is(key, this.entry[0]);if(keyMatch?value === this.entry[1]:removed){return this;}SetRef(didAlter);if(removed){SetRef(didChangeSize);return;}if(keyMatch){if(ownerID && ownerID === this.ownerID){this.entry[1] = value;return this;}return new ValueNode(ownerID, this.keyHash, [key, value]);}SetRef(didChangeSize);return mergeIntoNode(this, ownerID, shift, hash(key), [key, value]);};ArrayMapNode.prototype.iterate = HashCollisionNode.prototype.iterate = function(fn, reverse){var entries=this.entries;for(var ii=0, maxIndex=entries.length - 1; ii <= maxIndex; ii++) {if(fn(entries[reverse?maxIndex - ii:ii]) === false){return false;}}};BitmapIndexedNode.prototype.iterate = HashArrayMapNode.prototype.iterate = function(fn, reverse){var nodes=this.nodes;for(var ii=0, maxIndex=nodes.length - 1; ii <= maxIndex; ii++) {var node=nodes[reverse?maxIndex - ii:ii];if(node && node.iterate(fn, reverse) === false){return false;}}};ValueNode.prototype.iterate = function(fn, reverse){return fn(this.entry);};createClass(MapIterator, src_Iterator__Iterator);function MapIterator(map, type, reverse){this._type = type;this._reverse = reverse;this._stack = map._root && mapIteratorFrame(map._root);}MapIterator.prototype.next = function(){var type=this._type;var stack=this._stack;while(stack) {var node=stack.node;var index=stack.index++;var maxIndex;if(node.entry){if(index === 0){return mapIteratorValue(type, node.entry);}}else if(node.entries){maxIndex = node.entries.length - 1;if(index <= maxIndex){return mapIteratorValue(type, node.entries[this._reverse?maxIndex - index:index]);}}else {maxIndex = node.nodes.length - 1;if(index <= maxIndex){var subNode=node.nodes[this._reverse?maxIndex - index:index];if(subNode){if(subNode.entry){return mapIteratorValue(type, subNode.entry);}stack = this._stack = mapIteratorFrame(subNode, stack);}continue;}}stack = this._stack = this._stack.__prev;}return iteratorDone();};function mapIteratorValue(type, entry){return iteratorValue(type, entry[0], entry[1]);}function mapIteratorFrame(node, prev){return {node:node, index:0, __prev:prev};}function makeMap(size, root, ownerID, hash){var map=Object.create(MapPrototype);map.size = size;map._root = root;map.__ownerID = ownerID;map.__hash = hash;map.__altered = false;return map;}var EMPTY_MAP;function emptyMap(){return EMPTY_MAP || (EMPTY_MAP = makeMap(0));}function updateMap(map, k, v){var newRoot;var newSize;if(!map._root){if(v === NOT_SET){return map;}newSize = 1;newRoot = new ArrayMapNode(map.__ownerID, [[k, v]]);}else {var didChangeSize=MakeRef(CHANGE_LENGTH);var didAlter=MakeRef(DID_ALTER);newRoot = updateNode(map._root, map.__ownerID, 0, undefined, k, v, didChangeSize, didAlter);if(!didAlter.value){return map;}newSize = map.size + (didChangeSize.value?v === NOT_SET?-1:1:0);}if(map.__ownerID){map.size = newSize;map._root = newRoot;map.__hash = undefined;map.__altered = true;return map;}return newRoot?makeMap(newSize, newRoot):emptyMap();}function updateNode(node, ownerID, shift, keyHash, key, value, didChangeSize, didAlter){if(!node){if(value === NOT_SET){return node;}SetRef(didAlter);SetRef(didChangeSize);return new ValueNode(ownerID, keyHash, [key, value]);}return node.update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter);}function isLeafNode(node){return node.constructor === ValueNode || node.constructor === HashCollisionNode;}function mergeIntoNode(node, ownerID, shift, keyHash, entry){if(node.keyHash === keyHash){return new HashCollisionNode(ownerID, keyHash, [node.entry, entry]);}var idx1=(shift === 0?node.keyHash:node.keyHash >>> shift) & MASK;var idx2=(shift === 0?keyHash:keyHash >>> shift) & MASK;var newNode;var nodes=idx1 === idx2?[mergeIntoNode(node, ownerID, shift + SHIFT, keyHash, entry)]:(newNode = new ValueNode(ownerID, keyHash, entry), idx1 < idx2?[node, newNode]:[newNode, node]);return new BitmapIndexedNode(ownerID, 1 << idx1 | 1 << idx2, nodes);}function createNodes(ownerID, entries, key, value){if(!ownerID){ownerID = new OwnerID();}var node=new ValueNode(ownerID, hash(key), [key, value]);for(var ii=0; ii < entries.length; ii++) {var entry=entries[ii];node = node.update(ownerID, 0, undefined, entry[0], entry[1]);}return node;}function packNodes(ownerID, nodes, count, excluding){var bitmap=0;var packedII=0;var packedNodes=new Array(count);for(var ii=0, bit=1, len=nodes.length; ii < len; ii++, bit <<= 1) {var node=nodes[ii];if(node !== undefined && ii !== excluding){bitmap |= bit;packedNodes[packedII++] = node;}}return new BitmapIndexedNode(ownerID, bitmap, packedNodes);}function expandNodes(ownerID, nodes, bitmap, including, node){var count=0;var expandedNodes=new Array(SIZE);for(var ii=0; bitmap !== 0; ii++, bitmap >>>= 1) {expandedNodes[ii] = bitmap & 1?nodes[count++]:undefined;}expandedNodes[including] = node;return new HashArrayMapNode(ownerID, count + 1, expandedNodes);}function mergeIntoMapWith(map, merger, iterables){var iters=[];for(var ii=0; ii < iterables.length; ii++) {var value=iterables[ii];var iter=KeyedIterable(value);if(!isIterable(value)){iter = iter.map(function(v){return fromJS(v);});}iters.push(iter);}return mergeIntoCollectionWith(map, merger, iters);}function deepMerger(merger){return function(existing, value, key){return existing && existing.mergeDeepWith && isIterable(value)?existing.mergeDeepWith(merger, value):merger?merger(existing, value, key):value;};}function mergeIntoCollectionWith(collection, merger, iters){iters = iters.filter(function(x){return x.size !== 0;});if(iters.length === 0){return collection;}if(collection.size === 0 && !collection.__ownerID && iters.length === 1){return collection.constructor(iters[0]);}return collection.withMutations(function(collection){var mergeIntoMap=merger?function(value, key){collection.update(key, NOT_SET, function(existing){return existing === NOT_SET?value:merger(existing, value, key);});}:function(value, key){collection.set(key, value);};for(var ii=0; ii < iters.length; ii++) {iters[ii].forEach(mergeIntoMap);}});}function updateInDeepMap(existing, keyPathIter, notSetValue, updater){var isNotSet=existing === NOT_SET;var step=keyPathIter.next();if(step.done){var existingValue=isNotSet?notSetValue:existing;var newValue=updater(existingValue);return newValue === existingValue?existing:newValue;}invariant(isNotSet || existing && existing.set, 'invalid keyPath');var key=step.value;var nextExisting=isNotSet?NOT_SET:existing.get(key, NOT_SET);var nextUpdated=updateInDeepMap(nextExisting, keyPathIter, notSetValue, updater);return nextUpdated === nextExisting?existing:nextUpdated === NOT_SET?existing.remove(key):(isNotSet?emptyMap():existing).set(key, nextUpdated);}function popCount(x){x = x - (x >> 1 & 1431655765);x = (x & 858993459) + (x >> 2 & 858993459);x = x + (x >> 4) & 252645135;x = x + (x >> 8);x = x + (x >> 16);return x & 127;}function setIn(array, idx, val, canEdit){var newArray=canEdit?array:arrCopy(array);newArray[idx] = val;return newArray;}function spliceIn(array, idx, val, canEdit){var newLen=array.length + 1;if(canEdit && idx + 1 === newLen){array[idx] = val;return array;}var newArray=new Array(newLen);var after=0;for(var ii=0; ii < newLen; ii++) {if(ii === idx){newArray[ii] = val;after = -1;}else {newArray[ii] = array[ii + after];}}return newArray;}function spliceOut(array, idx, canEdit){var newLen=array.length - 1;if(canEdit && idx === newLen){array.pop();return array;}var newArray=new Array(newLen);var after=0;for(var ii=0; ii < newLen; ii++) {if(ii === idx){after = 1;}newArray[ii] = array[ii + after];}return newArray;}var MAX_ARRAY_MAP_SIZE=SIZE / 4;var MAX_BITMAP_INDEXED_SIZE=SIZE / 2;var MIN_HASH_ARRAY_MAP_SIZE=SIZE / 4;createClass(List, IndexedCollection);function List(value){var empty=emptyList();if(value === null || value === undefined){return empty;}if(isList(value)){return value;}var iter=IndexedIterable(value);var size=iter.size;if(size === 0){return empty;}assertNotInfinite(size);if(size > 0 && size < SIZE){return makeList(0, size, SHIFT, null, new VNode(iter.toArray()));}return empty.withMutations(function(list){list.setSize(size);iter.forEach(function(v, i){return list.set(i, v);});});}List.of = function(){return this(arguments);};List.prototype.toString = function(){return this.__toString('List [', ']');};List.prototype.get = function(index, notSetValue){index = wrapIndex(this, index);if(index < 0 || index >= this.size){return notSetValue;}index += this._origin;var node=listNodeFor(this, index);return node && node.array[index & MASK];};List.prototype.set = function(index, value){return updateList(this, index, value);};List.prototype.remove = function(index){return !this.has(index)?this:index === 0?this.shift():index === this.size - 1?this.pop():this.splice(index, 1);};List.prototype.clear = function(){if(this.size === 0){return this;}if(this.__ownerID){this.size = this._origin = this._capacity = 0;this._level = SHIFT;this._root = this._tail = null;this.__hash = undefined;this.__altered = true;return this;}return emptyList();};List.prototype.push = function(){var values=arguments;var oldSize=this.size;return this.withMutations(function(list){setListBounds(list, 0, oldSize + values.length);for(var ii=0; ii < values.length; ii++) {list.set(oldSize + ii, values[ii]);}});};List.prototype.pop = function(){return setListBounds(this, 0, -1);};List.prototype.unshift = function(){var values=arguments;return this.withMutations(function(list){setListBounds(list, -values.length);for(var ii=0; ii < values.length; ii++) {list.set(ii, values[ii]);}});};List.prototype.shift = function(){return setListBounds(this, 1);};List.prototype.merge = function(){return mergeIntoListWith(this, undefined, arguments);};List.prototype.mergeWith = function(merger){var iters=SLICE$0.call(arguments, 1);return mergeIntoListWith(this, merger, iters);};List.prototype.mergeDeep = function(){return mergeIntoListWith(this, deepMerger(undefined), arguments);};List.prototype.mergeDeepWith = function(merger){var iters=SLICE$0.call(arguments, 1);return mergeIntoListWith(this, deepMerger(merger), iters);};List.prototype.setSize = function(size){return setListBounds(this, 0, size);};List.prototype.slice = function(begin, end){var size=this.size;if(wholeSlice(begin, end, size)){return this;}return setListBounds(this, resolveBegin(begin, size), resolveEnd(end, size));};List.prototype.__iterator = function(type, reverse){var index=0;var values=iterateList(this, reverse);return new src_Iterator__Iterator(function(){var value=values();return value === DONE?iteratorDone():iteratorValue(type, index++, value);});};List.prototype.__iterate = function(fn, reverse){var index=0;var values=iterateList(this, reverse);var value;while((value = values()) !== DONE) {if(fn(value, index++, this) === false){break;}}return index;};List.prototype.__ensureOwner = function(ownerID){if(ownerID === this.__ownerID){return this;}if(!ownerID){this.__ownerID = ownerID;return this;}return makeList(this._origin, this._capacity, this._level, this._root, this._tail, ownerID, this.__hash);};function isList(maybeList){return !!(maybeList && maybeList[IS_LIST_SENTINEL]);}List.isList = isList;var IS_LIST_SENTINEL='@@__IMMUTABLE_LIST__@@';var ListPrototype=List.prototype;ListPrototype[IS_LIST_SENTINEL] = true;ListPrototype[DELETE] = ListPrototype.remove;ListPrototype.setIn = MapPrototype.setIn;ListPrototype.deleteIn = ListPrototype.removeIn = MapPrototype.removeIn;ListPrototype.update = MapPrototype.update;ListPrototype.updateIn = MapPrototype.updateIn;ListPrototype.mergeIn = MapPrototype.mergeIn;ListPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;ListPrototype.withMutations = MapPrototype.withMutations;ListPrototype.asMutable = MapPrototype.asMutable;ListPrototype.asImmutable = MapPrototype.asImmutable;ListPrototype.wasAltered = MapPrototype.wasAltered;function VNode(array, ownerID){this.array = array;this.ownerID = ownerID;}VNode.prototype.removeBefore = function(ownerID, level, index){if(index === level?1 << level:0 || this.array.length === 0){return this;}var originIndex=index >>> level & MASK;if(originIndex >= this.array.length){return new VNode([], ownerID);}var removingFirst=originIndex === 0;var newChild;if(level > 0){var oldChild=this.array[originIndex];newChild = oldChild && oldChild.removeBefore(ownerID, level - SHIFT, index);if(newChild === oldChild && removingFirst){return this;}}if(removingFirst && !newChild){return this;}var editable=editableVNode(this, ownerID);if(!removingFirst){for(var ii=0; ii < originIndex; ii++) {editable.array[ii] = undefined;}}if(newChild){editable.array[originIndex] = newChild;}return editable;};VNode.prototype.removeAfter = function(ownerID, level, index){if(index === level?1 << level:0 || this.array.length === 0){return this;}var sizeIndex=index - 1 >>> level & MASK;if(sizeIndex >= this.array.length){return this;}var removingLast=sizeIndex === this.array.length - 1;var newChild;if(level > 0){var oldChild=this.array[sizeIndex];newChild = oldChild && oldChild.removeAfter(ownerID, level - SHIFT, index);if(newChild === oldChild && removingLast){return this;}}if(removingLast && !newChild){return this;}var editable=editableVNode(this, ownerID);if(!removingLast){editable.array.pop();}if(newChild){editable.array[sizeIndex] = newChild;}return editable;};var DONE={};function iterateList(list, reverse){var left=list._origin;var right=list._capacity;var tailPos=getTailOffset(right);var tail=list._tail;return iterateNodeOrLeaf(list._root, list._level, 0);function iterateNodeOrLeaf(node, level, offset){return level === 0?iterateLeaf(node, offset):iterateNode(node, level, offset);}function iterateLeaf(node, offset){var array=offset === tailPos?tail && tail.array:node && node.array;var from=offset > left?0:left - offset;var to=right - offset;if(to > SIZE){to = SIZE;}return function(){if(from === to){return DONE;}var idx=reverse?--to:from++;return array && array[idx];};}function iterateNode(node, level, offset){var values;var array=node && node.array;var from=offset > left?0:left - offset >> level;var to=(right - offset >> level) + 1;if(to > SIZE){to = SIZE;}return function(){do {if(values){var value=values();if(value !== DONE){return value;}values = null;}if(from === to){return DONE;}var idx=reverse?--to:from++;values = iterateNodeOrLeaf(array && array[idx], level - SHIFT, offset + (idx << level));}while(true);};}}function makeList(origin, capacity, level, root, tail, ownerID, hash){var list=Object.create(ListPrototype);list.size = capacity - origin;list._origin = origin;list._capacity = capacity;list._level = level;list._root = root;list._tail = tail;list.__ownerID = ownerID;list.__hash = hash;list.__altered = false;return list;}var EMPTY_LIST;function emptyList(){return EMPTY_LIST || (EMPTY_LIST = makeList(0, 0, SHIFT));}function updateList(list, index, value){index = wrapIndex(list, index);if(index >= list.size || index < 0){return list.withMutations(function(list){index < 0?setListBounds(list, index).set(0, value):setListBounds(list, 0, index + 1).set(index, value);});}index += list._origin;var newTail=list._tail;var newRoot=list._root;var didAlter=MakeRef(DID_ALTER);if(index >= getTailOffset(list._capacity)){newTail = updateVNode(newTail, list.__ownerID, 0, index, value, didAlter);}else {newRoot = updateVNode(newRoot, list.__ownerID, list._level, index, value, didAlter);}if(!didAlter.value){return list;}if(list.__ownerID){list._root = newRoot;list._tail = newTail;list.__hash = undefined;list.__altered = true;return list;}return makeList(list._origin, list._capacity, list._level, newRoot, newTail);}function updateVNode(node, ownerID, level, index, value, didAlter){var idx=index >>> level & MASK;var nodeHas=node && idx < node.array.length;if(!nodeHas && value === undefined){return node;}var newNode;if(level > 0){var lowerNode=node && node.array[idx];var newLowerNode=updateVNode(lowerNode, ownerID, level - SHIFT, index, value, didAlter);if(newLowerNode === lowerNode){return node;}newNode = editableVNode(node, ownerID);newNode.array[idx] = newLowerNode;return newNode;}if(nodeHas && node.array[idx] === value){return node;}SetRef(didAlter);newNode = editableVNode(node, ownerID);if(value === undefined && idx === newNode.array.length - 1){newNode.array.pop();}else {newNode.array[idx] = value;}return newNode;}function editableVNode(node, ownerID){if(ownerID && node && ownerID === node.ownerID){return node;}return new VNode(node?node.array.slice():[], ownerID);}function listNodeFor(list, rawIndex){if(rawIndex >= getTailOffset(list._capacity)){return list._tail;}if(rawIndex < 1 << list._level + SHIFT){var node=list._root;var level=list._level;while(node && level > 0) {node = node.array[rawIndex >>> level & MASK];level -= SHIFT;}return node;}}function setListBounds(list, begin, end){var owner=list.__ownerID || new OwnerID();var oldOrigin=list._origin;var oldCapacity=list._capacity;var newOrigin=oldOrigin + begin;var newCapacity=end === undefined?oldCapacity:end < 0?oldCapacity + end:oldOrigin + end;if(newOrigin === oldOrigin && newCapacity === oldCapacity){return list;}if(newOrigin >= newCapacity){return list.clear();}var newLevel=list._level;var newRoot=list._root;var offsetShift=0;while(newOrigin + offsetShift < 0) {newRoot = new VNode(newRoot && newRoot.array.length?[undefined, newRoot]:[], owner);newLevel += SHIFT;offsetShift += 1 << newLevel;}if(offsetShift){newOrigin += offsetShift;oldOrigin += offsetShift;newCapacity += offsetShift;oldCapacity += offsetShift;}var oldTailOffset=getTailOffset(oldCapacity);var newTailOffset=getTailOffset(newCapacity);while(newTailOffset >= 1 << newLevel + SHIFT) {newRoot = new VNode(newRoot && newRoot.array.length?[newRoot]:[], owner);newLevel += SHIFT;}var oldTail=list._tail;var newTail=newTailOffset < oldTailOffset?listNodeFor(list, newCapacity - 1):newTailOffset > oldTailOffset?new VNode([], owner):oldTail;if(oldTail && newTailOffset > oldTailOffset && newOrigin < oldCapacity && oldTail.array.length){newRoot = editableVNode(newRoot, owner);var node=newRoot;for(var level=newLevel; level > SHIFT; level -= SHIFT) {var idx=oldTailOffset >>> level & MASK;node = node.array[idx] = editableVNode(node.array[idx], owner);}node.array[oldTailOffset >>> SHIFT & MASK] = oldTail;}if(newCapacity < oldCapacity){newTail = newTail && newTail.removeAfter(owner, 0, newCapacity);}if(newOrigin >= newTailOffset){newOrigin -= newTailOffset;newCapacity -= newTailOffset;newLevel = SHIFT;newRoot = null;newTail = newTail && newTail.removeBefore(owner, 0, newOrigin);}else if(newOrigin > oldOrigin || newTailOffset < oldTailOffset){offsetShift = 0;while(newRoot) {var beginIndex=newOrigin >>> newLevel & MASK;if(beginIndex !== newTailOffset >>> newLevel & MASK){break;}if(beginIndex){offsetShift += (1 << newLevel) * beginIndex;}newLevel -= SHIFT;newRoot = newRoot.array[beginIndex];}if(newRoot && newOrigin > oldOrigin){newRoot = newRoot.removeBefore(owner, newLevel, newOrigin - offsetShift);}if(newRoot && newTailOffset < oldTailOffset){newRoot = newRoot.removeAfter(owner, newLevel, newTailOffset - offsetShift);}if(offsetShift){newOrigin -= offsetShift;newCapacity -= offsetShift;}}if(list.__ownerID){list.size = newCapacity - newOrigin;list._origin = newOrigin;list._capacity = newCapacity;list._level = newLevel;list._root = newRoot;list._tail = newTail;list.__hash = undefined;list.__altered = true;return list;}return makeList(newOrigin, newCapacity, newLevel, newRoot, newTail);}function mergeIntoListWith(list, merger, iterables){var iters=[];var maxSize=0;for(var ii=0; ii < iterables.length; ii++) {var value=iterables[ii];var iter=IndexedIterable(value);if(iter.size > maxSize){maxSize = iter.size;}if(!isIterable(value)){iter = iter.map(function(v){return fromJS(v);});}iters.push(iter);}if(maxSize > list.size){list = list.setSize(maxSize);}return mergeIntoCollectionWith(list, merger, iters);}function getTailOffset(size){return size < SIZE?0:size - 1 >>> SHIFT << SHIFT;}createClass(OrderedMap, src_Map__Map);function OrderedMap(value){return value === null || value === undefined?emptyOrderedMap():isOrderedMap(value)?value:emptyOrderedMap().withMutations(function(map){var iter=KeyedIterable(value);assertNotInfinite(iter.size);iter.forEach(function(v, k){return map.set(k, v);});});}OrderedMap.of = function(){return this(arguments);};OrderedMap.prototype.toString = function(){return this.__toString('OrderedMap {', '}');};OrderedMap.prototype.get = function(k, notSetValue){var index=this._map.get(k);return index !== undefined?this._list.get(index)[1]:notSetValue;};OrderedMap.prototype.clear = function(){if(this.size === 0){return this;}if(this.__ownerID){this.size = 0;this._map.clear();this._list.clear();return this;}return emptyOrderedMap();};OrderedMap.prototype.set = function(k, v){return updateOrderedMap(this, k, v);};OrderedMap.prototype.remove = function(k){return updateOrderedMap(this, k, NOT_SET);};OrderedMap.prototype.wasAltered = function(){return this._map.wasAltered() || this._list.wasAltered();};OrderedMap.prototype.__iterate = function(fn, reverse){var this$0=this;return this._list.__iterate(function(entry){return entry && fn(entry[1], entry[0], this$0);}, reverse);};OrderedMap.prototype.__iterator = function(type, reverse){return this._list.fromEntrySeq().__iterator(type, reverse);};OrderedMap.prototype.__ensureOwner = function(ownerID){if(ownerID === this.__ownerID){return this;}var newMap=this._map.__ensureOwner(ownerID);var newList=this._list.__ensureOwner(ownerID);if(!ownerID){this.__ownerID = ownerID;this._map = newMap;this._list = newList;return this;}return makeOrderedMap(newMap, newList, ownerID, this.__hash);};function isOrderedMap(maybeOrderedMap){return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);}OrderedMap.isOrderedMap = isOrderedMap;OrderedMap.prototype[IS_ORDERED_SENTINEL] = true;OrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;function makeOrderedMap(map, list, ownerID, hash){var omap=Object.create(OrderedMap.prototype);omap.size = map?map.size:0;omap._map = map;omap._list = list;omap.__ownerID = ownerID;omap.__hash = hash;return omap;}var EMPTY_ORDERED_MAP;function emptyOrderedMap(){return EMPTY_ORDERED_MAP || (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(), emptyList()));}function updateOrderedMap(omap, k, v){var map=omap._map;var list=omap._list;var i=map.get(k);var has=i !== undefined;var newMap;var newList;if(v === NOT_SET){if(!has){return omap;}if(list.size >= SIZE && list.size >= map.size * 2){newList = list.filter(function(entry, idx){return entry !== undefined && i !== idx;});newMap = newList.toKeyedSeq().map(function(entry){return entry[0];}).flip().toMap();if(omap.__ownerID){newMap.__ownerID = newList.__ownerID = omap.__ownerID;}}else {newMap = map.remove(k);newList = i === list.size - 1?list.pop():list.set(i, undefined);}}else {if(has){if(v === list.get(i)[1]){return omap;}newMap = map;newList = list.set(i, [k, v]);}else {newMap = map.set(k, list.size);newList = list.set(list.size, [k, v]);}}if(omap.__ownerID){omap.size = newMap.size;omap._map = newMap;omap._list = newList;omap.__hash = undefined;return omap;}return makeOrderedMap(newMap, newList);}createClass(Stack, IndexedCollection);function Stack(value){return value === null || value === undefined?emptyStack():isStack(value)?value:emptyStack().unshiftAll(value);}Stack.of = function(){return this(arguments);};Stack.prototype.toString = function(){return this.__toString('Stack [', ']');};Stack.prototype.get = function(index, notSetValue){var head=this._head;index = wrapIndex(this, index);while(head && index--) {head = head.next;}return head?head.value:notSetValue;};Stack.prototype.peek = function(){return this._head && this._head.value;};Stack.prototype.push = function(){if(arguments.length === 0){return this;}var newSize=this.size + arguments.length;var head=this._head;for(var ii=arguments.length - 1; ii >= 0; ii--) {head = {value:arguments[ii], next:head};}if(this.__ownerID){this.size = newSize;this._head = head;this.__hash = undefined;this.__altered = true;return this;}return makeStack(newSize, head);};Stack.prototype.pushAll = function(iter){iter = IndexedIterable(iter);if(iter.size === 0){return this;}assertNotInfinite(iter.size);var newSize=this.size;var head=this._head;iter.reverse().forEach(function(value){newSize++;head = {value:value, next:head};});if(this.__ownerID){this.size = newSize;this._head = head;this.__hash = undefined;this.__altered = true;return this;}return makeStack(newSize, head);};Stack.prototype.pop = function(){return this.slice(1);};Stack.prototype.unshift = function(){return this.push.apply(this, arguments);};Stack.prototype.unshiftAll = function(iter){return this.pushAll(iter);};Stack.prototype.shift = function(){return this.pop.apply(this, arguments);};Stack.prototype.clear = function(){if(this.size === 0){return this;}if(this.__ownerID){this.size = 0;this._head = undefined;this.__hash = undefined;this.__altered = true;return this;}return emptyStack();};Stack.prototype.slice = function(begin, end){if(wholeSlice(begin, end, this.size)){return this;}var resolvedBegin=resolveBegin(begin, this.size);var resolvedEnd=resolveEnd(end, this.size);if(resolvedEnd !== this.size){return IndexedCollection.prototype.slice.call(this, begin, end);}var newSize=this.size - resolvedBegin;var head=this._head;while(resolvedBegin--) {head = head.next;}if(this.__ownerID){this.size = newSize;this._head = head;this.__hash = undefined;this.__altered = true;return this;}return makeStack(newSize, head);};Stack.prototype.__ensureOwner = function(ownerID){if(ownerID === this.__ownerID){return this;}if(!ownerID){this.__ownerID = ownerID;this.__altered = false;return this;}return makeStack(this.size, this._head, ownerID, this.__hash);};Stack.prototype.__iterate = function(fn, reverse){if(reverse){return this.reverse().__iterate(fn);}var iterations=0;var node=this._head;while(node) {if(fn(node.value, iterations++, this) === false){break;}node = node.next;}return iterations;};Stack.prototype.__iterator = function(type, reverse){if(reverse){return this.reverse().__iterator(type);}var iterations=0;var node=this._head;return new src_Iterator__Iterator(function(){if(node){var value=node.value;node = node.next;return iteratorValue(type, iterations++, value);}return iteratorDone();});};function isStack(maybeStack){return !!(maybeStack && maybeStack[IS_STACK_SENTINEL]);}Stack.isStack = isStack;var IS_STACK_SENTINEL='@@__IMMUTABLE_STACK__@@';var StackPrototype=Stack.prototype;StackPrototype[IS_STACK_SENTINEL] = true;StackPrototype.withMutations = MapPrototype.withMutations;StackPrototype.asMutable = MapPrototype.asMutable;StackPrototype.asImmutable = MapPrototype.asImmutable;StackPrototype.wasAltered = MapPrototype.wasAltered;function makeStack(size, head, ownerID, hash){var map=Object.create(StackPrototype);map.size = size;map._head = head;map.__ownerID = ownerID;map.__hash = hash;map.__altered = false;return map;}var EMPTY_STACK;function emptyStack(){return EMPTY_STACK || (EMPTY_STACK = makeStack(0));}createClass(src_Set__Set, SetCollection);function src_Set__Set(value){return value === null || value === undefined?emptySet():isSet(value)?value:emptySet().withMutations(function(set){var iter=SetIterable(value);assertNotInfinite(iter.size);iter.forEach(function(v){return set.add(v);});});}src_Set__Set.of = function(){return this(arguments);};src_Set__Set.fromKeys = function(value){return this(KeyedIterable(value).keySeq());};src_Set__Set.prototype.toString = function(){return this.__toString('Set {', '}');};src_Set__Set.prototype.has = function(value){return this._map.has(value);};src_Set__Set.prototype.add = function(value){return updateSet(this, this._map.set(value, true));};src_Set__Set.prototype.remove = function(value){return updateSet(this, this._map.remove(value));};src_Set__Set.prototype.clear = function(){return updateSet(this, this._map.clear());};src_Set__Set.prototype.union = function(){var iters=SLICE$0.call(arguments, 0);iters = iters.filter(function(x){return x.size !== 0;});if(iters.length === 0){return this;}if(this.size === 0 && !this.__ownerID && iters.length === 1){return this.constructor(iters[0]);}return this.withMutations(function(set){for(var ii=0; ii < iters.length; ii++) {SetIterable(iters[ii]).forEach(function(value){return set.add(value);});}});};src_Set__Set.prototype.intersect = function(){var iters=SLICE$0.call(arguments, 0);if(iters.length === 0){return this;}iters = iters.map(function(iter){return SetIterable(iter);});var originalSet=this;return this.withMutations(function(set){originalSet.forEach(function(value){if(!iters.every(function(iter){return iter.includes(value);})){set.remove(value);}});});};src_Set__Set.prototype.subtract = function(){var iters=SLICE$0.call(arguments, 0);if(iters.length === 0){return this;}iters = iters.map(function(iter){return SetIterable(iter);});var originalSet=this;return this.withMutations(function(set){originalSet.forEach(function(value){if(iters.some(function(iter){return iter.includes(value);})){set.remove(value);}});});};src_Set__Set.prototype.merge = function(){return this.union.apply(this, arguments);};src_Set__Set.prototype.mergeWith = function(merger){var iters=SLICE$0.call(arguments, 1);return this.union.apply(this, iters);};src_Set__Set.prototype.sort = function(comparator){return OrderedSet(sortFactory(this, comparator));};src_Set__Set.prototype.sortBy = function(mapper, comparator){return OrderedSet(sortFactory(this, comparator, mapper));};src_Set__Set.prototype.wasAltered = function(){return this._map.wasAltered();};src_Set__Set.prototype.__iterate = function(fn, reverse){var this$0=this;return this._map.__iterate(function(_, k){return fn(k, k, this$0);}, reverse);};src_Set__Set.prototype.__iterator = function(type, reverse){return this._map.map(function(_, k){return k;}).__iterator(type, reverse);};src_Set__Set.prototype.__ensureOwner = function(ownerID){if(ownerID === this.__ownerID){return this;}var newMap=this._map.__ensureOwner(ownerID);if(!ownerID){this.__ownerID = ownerID;this._map = newMap;return this;}return this.__make(newMap, ownerID);};function isSet(maybeSet){return !!(maybeSet && maybeSet[IS_SET_SENTINEL]);}src_Set__Set.isSet = isSet;var IS_SET_SENTINEL='@@__IMMUTABLE_SET__@@';var SetPrototype=src_Set__Set.prototype;SetPrototype[IS_SET_SENTINEL] = true;SetPrototype[DELETE] = SetPrototype.remove;SetPrototype.mergeDeep = SetPrototype.merge;SetPrototype.mergeDeepWith = SetPrototype.mergeWith;SetPrototype.withMutations = MapPrototype.withMutations;SetPrototype.asMutable = MapPrototype.asMutable;SetPrototype.asImmutable = MapPrototype.asImmutable;SetPrototype.__empty = emptySet;SetPrototype.__make = makeSet;function updateSet(set, newMap){if(set.__ownerID){set.size = newMap.size;set._map = newMap;return set;}return newMap === set._map?set:newMap.size === 0?set.__empty():set.__make(newMap);}function makeSet(map, ownerID){var set=Object.create(SetPrototype);set.size = map?map.size:0;set._map = map;set.__ownerID = ownerID;return set;}var EMPTY_SET;function emptySet(){return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));}createClass(OrderedSet, src_Set__Set);function OrderedSet(value){return value === null || value === undefined?emptyOrderedSet():isOrderedSet(value)?value:emptyOrderedSet().withMutations(function(set){var iter=SetIterable(value);assertNotInfinite(iter.size);iter.forEach(function(v){return set.add(v);});});}OrderedSet.of = function(){return this(arguments);};OrderedSet.fromKeys = function(value){return this(KeyedIterable(value).keySeq());};OrderedSet.prototype.toString = function(){return this.__toString('OrderedSet {', '}');};function isOrderedSet(maybeOrderedSet){return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);}OrderedSet.isOrderedSet = isOrderedSet;var OrderedSetPrototype=OrderedSet.prototype;OrderedSetPrototype[IS_ORDERED_SENTINEL] = true;OrderedSetPrototype.__empty = emptyOrderedSet;OrderedSetPrototype.__make = makeOrderedSet;function makeOrderedSet(map, ownerID){var set=Object.create(OrderedSetPrototype);set.size = map?map.size:0;set._map = map;set.__ownerID = ownerID;return set;}var EMPTY_ORDERED_SET;function emptyOrderedSet(){return EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()));}createClass(Record, KeyedCollection);function Record(defaultValues, name){var hasInitialized;var RecordType=function Record(values){if(values instanceof RecordType){return values;}if(!(this instanceof RecordType)){return new RecordType(values);}if(!hasInitialized){hasInitialized = true;var keys=Object.keys(defaultValues);setProps(RecordTypePrototype, keys);RecordTypePrototype.size = keys.length;RecordTypePrototype._name = name;RecordTypePrototype._keys = keys;RecordTypePrototype._defaultValues = defaultValues;}this._map = src_Map__Map(values);};var RecordTypePrototype=RecordType.prototype = Object.create(RecordPrototype);RecordTypePrototype.constructor = RecordType;return RecordType;}Record.prototype.toString = function(){return this.__toString(recordName(this) + ' {', '}');};Record.prototype.has = function(k){return this._defaultValues.hasOwnProperty(k);};Record.prototype.get = function(k, notSetValue){if(!this.has(k)){return notSetValue;}var defaultVal=this._defaultValues[k];return this._map?this._map.get(k, defaultVal):defaultVal;};Record.prototype.clear = function(){if(this.__ownerID){this._map && this._map.clear();return this;}var RecordType=this.constructor;return RecordType._empty || (RecordType._empty = makeRecord(this, emptyMap()));};Record.prototype.set = function(k, v){if(!this.has(k)){throw new Error('Cannot set unknown key "' + k + '" on ' + recordName(this));}var newMap=this._map && this._map.set(k, v);if(this.__ownerID || newMap === this._map){return this;}return makeRecord(this, newMap);};Record.prototype.remove = function(k){if(!this.has(k)){return this;}var newMap=this._map && this._map.remove(k);if(this.__ownerID || newMap === this._map){return this;}return makeRecord(this, newMap);};Record.prototype.wasAltered = function(){return this._map.wasAltered();};Record.prototype.__iterator = function(type, reverse){var this$0=this;return KeyedIterable(this._defaultValues).map(function(_, k){return this$0.get(k);}).__iterator(type, reverse);};Record.prototype.__iterate = function(fn, reverse){var this$0=this;return KeyedIterable(this._defaultValues).map(function(_, k){return this$0.get(k);}).__iterate(fn, reverse);};Record.prototype.__ensureOwner = function(ownerID){if(ownerID === this.__ownerID){return this;}var newMap=this._map && this._map.__ensureOwner(ownerID);if(!ownerID){this.__ownerID = ownerID;this._map = newMap;return this;}return makeRecord(this, newMap, ownerID);};var RecordPrototype=Record.prototype;RecordPrototype[DELETE] = RecordPrototype.remove;RecordPrototype.deleteIn = RecordPrototype.removeIn = MapPrototype.removeIn;RecordPrototype.merge = MapPrototype.merge;RecordPrototype.mergeWith = MapPrototype.mergeWith;RecordPrototype.mergeIn = MapPrototype.mergeIn;RecordPrototype.mergeDeep = MapPrototype.mergeDeep;RecordPrototype.mergeDeepWith = MapPrototype.mergeDeepWith;RecordPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;RecordPrototype.setIn = MapPrototype.setIn;RecordPrototype.update = MapPrototype.update;RecordPrototype.updateIn = MapPrototype.updateIn;RecordPrototype.withMutations = MapPrototype.withMutations;RecordPrototype.asMutable = MapPrototype.asMutable;RecordPrototype.asImmutable = MapPrototype.asImmutable;function makeRecord(likeRecord, map, ownerID){var record=Object.create(Object.getPrototypeOf(likeRecord));record._map = map;record.__ownerID = ownerID;return record;}function recordName(record){return record._name || record.constructor.name || 'Record';}function setProps(prototype, names){try{names.forEach(setProp.bind(undefined, prototype));}catch(error) {}}function setProp(prototype, name){Object.defineProperty(prototype, name, {get:function get(){return this.get(name);}, set:function set(value){invariant(this.__ownerID, 'Cannot set on an immutable record.');this.set(name, value);}});}function deepEqual(a, b){if(a === b){return true;}if(!isIterable(b) || a.size !== undefined && b.size !== undefined && a.size !== b.size || a.__hash !== undefined && b.__hash !== undefined && a.__hash !== b.__hash || isKeyed(a) !== isKeyed(b) || isIndexed(a) !== isIndexed(b) || isOrdered(a) !== isOrdered(b)){return false;}if(a.size === 0 && b.size === 0){return true;}var notAssociative=!isAssociative(a);if(isOrdered(a)){var entries=a.entries();return b.every(function(v, k){var entry=entries.next().value;return entry && is(entry[1], v) && (notAssociative || is(entry[0], k));}) && entries.next().done;}var flipped=false;if(a.size === undefined){if(b.size === undefined){if(typeof a.cacheResult === 'function'){a.cacheResult();}}else {flipped = true;var _=a;a = b;b = _;}}var allEqual=true;var bSize=b.__iterate(function(v, k){if(notAssociative?!a.has(v):flipped?!is(v, a.get(k, NOT_SET)):!is(a.get(k, NOT_SET), v)){allEqual = false;return false;}});return allEqual && a.size === bSize;}createClass(Range, IndexedSeq);function Range(start, end, step){if(!(this instanceof Range)){return new Range(start, end, step);}invariant(step !== 0, 'Cannot step a Range by 0');start = start || 0;if(end === undefined){end = Infinity;}step = step === undefined?1:Math.abs(step);if(end < start){step = -step;}this._start = start;this._end = end;this._step = step;this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);if(this.size === 0){if(EMPTY_RANGE){return EMPTY_RANGE;}EMPTY_RANGE = this;}}Range.prototype.toString = function(){if(this.size === 0){return 'Range []';}return 'Range [ ' + this._start + '...' + this._end + (this._step > 1?' by ' + this._step:'') + ' ]';};Range.prototype.get = function(index, notSetValue){return this.has(index)?this._start + wrapIndex(this, index) * this._step:notSetValue;};Range.prototype.includes = function(searchValue){var possibleIndex=(searchValue - this._start) / this._step;return possibleIndex >= 0 && possibleIndex < this.size && possibleIndex === Math.floor(possibleIndex);};Range.prototype.slice = function(begin, end){if(wholeSlice(begin, end, this.size)){return this;}begin = resolveBegin(begin, this.size);end = resolveEnd(end, this.size);if(end <= begin){return new Range(0, 0);}return new Range(this.get(begin, this._end), this.get(end, this._end), this._step);};Range.prototype.indexOf = function(searchValue){var offsetValue=searchValue - this._start;if(offsetValue % this._step === 0){var index=offsetValue / this._step;if(index >= 0 && index < this.size){return index;}}return -1;};Range.prototype.lastIndexOf = function(searchValue){return this.indexOf(searchValue);};Range.prototype.__iterate = function(fn, reverse){var maxIndex=this.size - 1;var step=this._step;var value=reverse?this._start + maxIndex * step:this._start;for(var ii=0; ii <= maxIndex; ii++) {if(fn(value, ii, this) === false){return ii + 1;}value += reverse?-step:step;}return ii;};Range.prototype.__iterator = function(type, reverse){var maxIndex=this.size - 1;var step=this._step;var value=reverse?this._start + maxIndex * step:this._start;var ii=0;return new src_Iterator__Iterator(function(){var v=value;value += reverse?-step:step;return ii > maxIndex?iteratorDone():iteratorValue(type, ii++, v);});};Range.prototype.equals = function(other){return other instanceof Range?this._start === other._start && this._end === other._end && this._step === other._step:deepEqual(this, other);};var EMPTY_RANGE;createClass(Repeat, IndexedSeq);function Repeat(value, times){if(!(this instanceof Repeat)){return new Repeat(value, times);}this._value = value;this.size = times === undefined?Infinity:Math.max(0, times);if(this.size === 0){if(EMPTY_REPEAT){return EMPTY_REPEAT;}EMPTY_REPEAT = this;}}Repeat.prototype.toString = function(){if(this.size === 0){return 'Repeat []';}return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';};Repeat.prototype.get = function(index, notSetValue){return this.has(index)?this._value:notSetValue;};Repeat.prototype.includes = function(searchValue){return is(this._value, searchValue);};Repeat.prototype.slice = function(begin, end){var size=this.size;return wholeSlice(begin, end, size)?this:new Repeat(this._value, resolveEnd(end, size) - resolveBegin(begin, size));};Repeat.prototype.reverse = function(){return this;};Repeat.prototype.indexOf = function(searchValue){if(is(this._value, searchValue)){return 0;}return -1;};Repeat.prototype.lastIndexOf = function(searchValue){if(is(this._value, searchValue)){return this.size;}return -1;};Repeat.prototype.__iterate = function(fn, reverse){for(var ii=0; ii < this.size; ii++) {if(fn(this._value, ii, this) === false){return ii + 1;}}return ii;};Repeat.prototype.__iterator = function(type, reverse){var this$0=this;var ii=0;return new src_Iterator__Iterator(function(){return ii < this$0.size?iteratorValue(type, ii++, this$0._value):iteratorDone();});};Repeat.prototype.equals = function(other){return other instanceof Repeat?is(this._value, other._value):deepEqual(other);};var EMPTY_REPEAT;function mixin(ctor, methods){var keyCopier=function keyCopier(key){ctor.prototype[key] = methods[key];};Object.keys(methods).forEach(keyCopier);Object.getOwnPropertySymbols && Object.getOwnPropertySymbols(methods).forEach(keyCopier);return ctor;}Iterable.Iterator = src_Iterator__Iterator;mixin(Iterable, {toArray:function toArray(){assertNotInfinite(this.size);var array=new Array(this.size || 0);this.valueSeq().__iterate(function(v, i){array[i] = v;});return array;}, toIndexedSeq:function toIndexedSeq(){return new ToIndexedSequence(this);}, toJS:function toJS(){return this.toSeq().map(function(value){return value && typeof value.toJS === 'function'?value.toJS():value;}).__toJS();}, toJSON:function toJSON(){return this.toSeq().map(function(value){return value && typeof value.toJSON === 'function'?value.toJSON():value;}).__toJS();}, toKeyedSeq:function toKeyedSeq(){return new ToKeyedSequence(this, true);}, toMap:function toMap(){return src_Map__Map(this.toKeyedSeq());}, toObject:function toObject(){assertNotInfinite(this.size);var object={};this.__iterate(function(v, k){object[k] = v;});return object;}, toOrderedMap:function toOrderedMap(){return OrderedMap(this.toKeyedSeq());}, toOrderedSet:function toOrderedSet(){return OrderedSet(isKeyed(this)?this.valueSeq():this);}, toSet:function toSet(){return src_Set__Set(isKeyed(this)?this.valueSeq():this);}, toSetSeq:function toSetSeq(){return new ToSetSequence(this);}, toSeq:function toSeq(){return isIndexed(this)?this.toIndexedSeq():isKeyed(this)?this.toKeyedSeq():this.toSetSeq();}, toStack:function toStack(){return Stack(isKeyed(this)?this.valueSeq():this);}, toList:function toList(){return List(isKeyed(this)?this.valueSeq():this);}, toString:function toString(){return '[Iterable]';}, __toString:function __toString(head, tail){if(this.size === 0){return head + tail;}return head + ' ' + this.toSeq().map(this.__toStringMapper).join(', ') + ' ' + tail;}, concat:function concat(){var values=SLICE$0.call(arguments, 0);return reify(this, concatFactory(this, values));}, contains:function contains(searchValue){return this.includes(searchValue);}, includes:function includes(searchValue){return this.some(function(value){return is(value, searchValue);});}, entries:function entries(){return this.__iterator(ITERATE_ENTRIES);}, every:function every(predicate, context){assertNotInfinite(this.size);var returnValue=true;this.__iterate(function(v, k, c){if(!predicate.call(context, v, k, c)){returnValue = false;return false;}});return returnValue;}, filter:function filter(predicate, context){return reify(this, filterFactory(this, predicate, context, true));}, find:function find(predicate, context, notSetValue){var entry=this.findEntry(predicate, context);return entry?entry[1]:notSetValue;}, findEntry:function findEntry(predicate, context){var found;this.__iterate(function(v, k, c){if(predicate.call(context, v, k, c)){found = [k, v];return false;}});return found;}, findLastEntry:function findLastEntry(predicate, context){return this.toSeq().reverse().findEntry(predicate, context);}, forEach:function forEach(sideEffect, context){assertNotInfinite(this.size);return this.__iterate(context?sideEffect.bind(context):sideEffect);}, join:function join(separator){assertNotInfinite(this.size);separator = separator !== undefined?'' + separator:',';var joined='';var isFirst=true;this.__iterate(function(v){isFirst?isFirst = false:joined += separator;joined += v !== null && v !== undefined?v.toString():'';});return joined;}, keys:function keys(){return this.__iterator(ITERATE_KEYS);}, map:function map(mapper, context){return reify(this, mapFactory(this, mapper, context));}, reduce:function reduce(reducer, initialReduction, context){assertNotInfinite(this.size);var reduction;var useFirst;if(arguments.length < 2){useFirst = true;}else {reduction = initialReduction;}this.__iterate(function(v, k, c){if(useFirst){useFirst = false;reduction = v;}else {reduction = reducer.call(context, reduction, v, k, c);}});return reduction;}, reduceRight:function reduceRight(reducer, initialReduction, context){var reversed=this.toKeyedSeq().reverse();return reversed.reduce.apply(reversed, arguments);}, reverse:function reverse(){return reify(this, reverseFactory(this, true));}, slice:function slice(begin, end){return reify(this, sliceFactory(this, begin, end, true));}, some:function some(predicate, context){return !this.every(not(predicate), context);}, sort:function sort(comparator){return reify(this, sortFactory(this, comparator));}, values:function values(){return this.__iterator(ITERATE_VALUES);}, butLast:function butLast(){return this.slice(0, -1);}, isEmpty:function isEmpty(){return this.size !== undefined?this.size === 0:!this.some(function(){return true;});}, count:function count(predicate, context){return ensureSize(predicate?this.toSeq().filter(predicate, context):this);}, countBy:function countBy(grouper, context){return countByFactory(this, grouper, context);}, equals:function equals(other){return deepEqual(this, other);}, entrySeq:function entrySeq(){var iterable=this;if(iterable._cache){return new ArraySeq(iterable._cache);}var entriesSequence=iterable.toSeq().map(entryMapper).toIndexedSeq();entriesSequence.fromEntrySeq = function(){return iterable.toSeq();};return entriesSequence;}, filterNot:function filterNot(predicate, context){return this.filter(not(predicate), context);}, findLast:function findLast(predicate, context, notSetValue){return this.toKeyedSeq().reverse().find(predicate, context, notSetValue);}, first:function first(){return this.find(returnTrue);}, flatMap:function flatMap(mapper, context){return reify(this, flatMapFactory(this, mapper, context));}, flatten:function flatten(depth){return reify(this, flattenFactory(this, depth, true));}, fromEntrySeq:function fromEntrySeq(){return new FromEntriesSequence(this);}, get:function get(searchKey, notSetValue){return this.find(function(_, key){return is(key, searchKey);}, undefined, notSetValue);}, getIn:function getIn(searchKeyPath, notSetValue){var nested=this;var iter=forceIterator(searchKeyPath);var step;while(!(step = iter.next()).done) {var key=step.value;nested = nested && nested.get?nested.get(key, NOT_SET):NOT_SET;if(nested === NOT_SET){return notSetValue;}}return nested;}, groupBy:function groupBy(grouper, context){return groupByFactory(this, grouper, context);}, has:function has(searchKey){return this.get(searchKey, NOT_SET) !== NOT_SET;}, hasIn:function hasIn(searchKeyPath){return this.getIn(searchKeyPath, NOT_SET) !== NOT_SET;}, isSubset:function isSubset(iter){iter = typeof iter.includes === 'function'?iter:Iterable(iter);return this.every(function(value){return iter.includes(value);});}, isSuperset:function isSuperset(iter){return iter.isSubset(this);}, keySeq:function keySeq(){return this.toSeq().map(keyMapper).toIndexedSeq();}, last:function last(){return this.toSeq().reverse().first();}, max:function max(comparator){return maxFactory(this, comparator);}, maxBy:function maxBy(mapper, comparator){return maxFactory(this, comparator, mapper);}, min:function min(comparator){return maxFactory(this, comparator?neg(comparator):defaultNegComparator);}, minBy:function minBy(mapper, comparator){return maxFactory(this, comparator?neg(comparator):defaultNegComparator, mapper);}, rest:function rest(){return this.slice(1);}, skip:function skip(amount){return this.slice(Math.max(0, amount));}, skipLast:function skipLast(amount){return reify(this, this.toSeq().reverse().skip(amount).reverse());}, skipWhile:function skipWhile(predicate, context){return reify(this, skipWhileFactory(this, predicate, context, true));}, skipUntil:function skipUntil(predicate, context){return this.skipWhile(not(predicate), context);}, sortBy:function sortBy(mapper, comparator){return reify(this, sortFactory(this, comparator, mapper));}, take:function take(amount){return this.slice(0, Math.max(0, amount));}, takeLast:function takeLast(amount){return reify(this, this.toSeq().reverse().take(amount).reverse());}, takeWhile:function takeWhile(predicate, context){return reify(this, takeWhileFactory(this, predicate, context));}, takeUntil:function takeUntil(predicate, context){return this.takeWhile(not(predicate), context);}, valueSeq:function valueSeq(){return this.toIndexedSeq();}, hashCode:function hashCode(){return this.__hash || (this.__hash = hashIterable(this));}});var IterablePrototype=Iterable.prototype;IterablePrototype[IS_ITERABLE_SENTINEL] = true;IterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.values;IterablePrototype.__toJS = IterablePrototype.toArray;IterablePrototype.__toStringMapper = quoteString;IterablePrototype.inspect = IterablePrototype.toSource = function(){return this.toString();};IterablePrototype.chain = IterablePrototype.flatMap;(function(){try{Object.defineProperty(IterablePrototype, 'length', {get:function get(){if(!Iterable.noLengthWarning){var stack;try{throw new Error();}catch(error) {stack = error.stack;}if(stack.indexOf('_wrapObject') === -1){console && console.warn && console.warn('iterable.length has been deprecated, ' + 'use iterable.size or iterable.count(). ' + 'This warning will become a silent error in a future version. ' + stack);return this.size;}}}});}catch(e) {}})();mixin(KeyedIterable, {flip:function flip(){return reify(this, flipFactory(this));}, findKey:function findKey(predicate, context){var entry=this.findEntry(predicate, context);return entry && entry[0];}, findLastKey:function findLastKey(predicate, context){return this.toSeq().reverse().findKey(predicate, context);}, keyOf:function keyOf(searchValue){return this.findKey(function(value){return is(value, searchValue);});}, lastKeyOf:function lastKeyOf(searchValue){return this.findLastKey(function(value){return is(value, searchValue);});}, mapEntries:function mapEntries(mapper, context){var this$0=this;var iterations=0;return reify(this, this.toSeq().map(function(v, k){return mapper.call(context, [k, v], iterations++, this$0);}).fromEntrySeq());}, mapKeys:function mapKeys(mapper, context){var this$0=this;return reify(this, this.toSeq().flip().map(function(k, v){return mapper.call(context, k, v, this$0);}).flip());}});var KeyedIterablePrototype=KeyedIterable.prototype;KeyedIterablePrototype[IS_KEYED_SENTINEL] = true;KeyedIterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.entries;KeyedIterablePrototype.__toJS = IterablePrototype.toObject;KeyedIterablePrototype.__toStringMapper = function(v, k){return JSON.stringify(k) + ': ' + quoteString(v);};mixin(IndexedIterable, {toKeyedSeq:function toKeyedSeq(){return new ToKeyedSequence(this, false);}, filter:function filter(predicate, context){return reify(this, filterFactory(this, predicate, context, false));}, findIndex:function findIndex(predicate, context){var entry=this.findEntry(predicate, context);return entry?entry[0]:-1;}, indexOf:function indexOf(searchValue){var key=this.toKeyedSeq().keyOf(searchValue);return key === undefined?-1:key;}, lastIndexOf:function lastIndexOf(searchValue){return this.toSeq().reverse().indexOf(searchValue);}, reverse:function reverse(){return reify(this, reverseFactory(this, false));}, slice:function slice(begin, end){return reify(this, sliceFactory(this, begin, end, false));}, splice:function splice(index, removeNum){var numArgs=arguments.length;removeNum = Math.max(removeNum | 0, 0);if(numArgs === 0 || numArgs === 2 && !removeNum){return this;}index = resolveBegin(index, this.size);var spliced=this.slice(0, index);return reify(this, numArgs === 1?spliced:spliced.concat(arrCopy(arguments, 2), this.slice(index + removeNum)));}, findLastIndex:function findLastIndex(predicate, context){var key=this.toKeyedSeq().findLastKey(predicate, context);return key === undefined?-1:key;}, first:function first(){return this.get(0);}, flatten:function flatten(depth){return reify(this, flattenFactory(this, depth, false));}, get:function get(index, notSetValue){index = wrapIndex(this, index);return index < 0 || (this.size === Infinity || this.size !== undefined && index > this.size)?notSetValue:this.find(function(_, key){return key === index;}, undefined, notSetValue);}, has:function has(index){index = wrapIndex(this, index);return index >= 0 && (this.size !== undefined?this.size === Infinity || index < this.size:this.indexOf(index) !== -1);}, interpose:function interpose(separator){return reify(this, interposeFactory(this, separator));}, interleave:function interleave(){var iterables=[this].concat(arrCopy(arguments));var zipped=zipWithFactory(this.toSeq(), IndexedSeq.of, iterables);var interleaved=zipped.flatten(true);if(zipped.size){interleaved.size = zipped.size * iterables.length;}return reify(this, interleaved);}, last:function last(){return this.get(-1);}, skipWhile:function skipWhile(predicate, context){return reify(this, skipWhileFactory(this, predicate, context, false));}, zip:function zip(){var iterables=[this].concat(arrCopy(arguments));return reify(this, zipWithFactory(this, defaultZipper, iterables));}, zipWith:function zipWith(zipper){var iterables=arrCopy(arguments);iterables[0] = this;return reify(this, zipWithFactory(this, zipper, iterables));}});IndexedIterable.prototype[IS_INDEXED_SENTINEL] = true;IndexedIterable.prototype[IS_ORDERED_SENTINEL] = true;mixin(SetIterable, {get:function get(value, notSetValue){return this.has(value)?value:notSetValue;}, includes:function includes(value){return this.has(value);}, keySeq:function keySeq(){return this.valueSeq();}});SetIterable.prototype.has = IterablePrototype.includes;mixin(KeyedSeq, KeyedIterable.prototype);mixin(IndexedSeq, IndexedIterable.prototype);mixin(SetSeq, SetIterable.prototype);mixin(KeyedCollection, KeyedIterable.prototype);mixin(IndexedCollection, IndexedIterable.prototype);mixin(SetCollection, SetIterable.prototype);function keyMapper(v, k){return k;}function entryMapper(v, k){return [k, v];}function not(predicate){return function(){return !predicate.apply(this, arguments);};}function neg(predicate){return function(){return -predicate.apply(this, arguments);};}function quoteString(value){return typeof value === 'string'?JSON.stringify(value):value;}function defaultZipper(){return arrCopy(arguments);}function defaultNegComparator(a, b){return a < b?1:a > b?-1:0;}function hashIterable(iterable){if(iterable.size === Infinity){return 0;}var ordered=isOrdered(iterable);var keyed=isKeyed(iterable);var h=ordered?1:0;var size=iterable.__iterate(keyed?ordered?function(v, k){h = 31 * h + hashMerge(hash(v), hash(k)) | 0;}:function(v, k){h = h + hashMerge(hash(v), hash(k)) | 0;}:ordered?function(v){h = 31 * h + hash(v) | 0;}:function(v){h = h + hash(v) | 0;});return murmurHashOfSize(size, h);}function murmurHashOfSize(size, h){h = src_Math__imul(h, 3432918353);h = src_Math__imul(h << 15 | h >>> -15, 461845907);h = src_Math__imul(h << 13 | h >>> -13, 5);h = (h + 3864292196 | 0) ^ size;h = src_Math__imul(h ^ h >>> 16, 2246822507);h = src_Math__imul(h ^ h >>> 13, 3266489909);h = smi(h ^ h >>> 16);return h;}function hashMerge(a, b){return a ^ b + 2654435769 + (a << 6) + (a >> 2) | 0;}var Immutable={Iterable:Iterable, Seq:Seq, Collection:Collection, Map:src_Map__Map, OrderedMap:OrderedMap, List:List, Stack:Stack, Set:src_Set__Set, OrderedSet:OrderedSet, Record:Record, Range:Range, Repeat:Repeat, is:is, fromJS:fromJS};return Immutable;});

/***/ }
/******/ ])